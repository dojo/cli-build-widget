{"version":3,"sources":["webpack:///webpack/bootstrap 01c4fe13e2f1c25e9421","webpack:///./node_modules/@dojo/framework/core/Destroyable.mjs","webpack:///./node_modules/@dojo/framework/core/Evented.mjs","webpack:///./node_modules/@dojo/framework/core/lang.mjs","webpack:///./node_modules/@dojo/framework/has/has.mjs","webpack:///./node_modules/@dojo/framework/shim/Map.mjs","webpack:///./node_modules/@dojo/framework/shim/Promise.mjs","webpack:///./node_modules/@dojo/framework/shim/Symbol.mjs","webpack:///./node_modules/@dojo/framework/shim/WeakMap.mjs","webpack:///./node_modules/@dojo/framework/shim/array.mjs","webpack:///./node_modules/@dojo/framework/shim/global.mjs","webpack:///./node_modules/@dojo/framework/shim/number.mjs","webpack:///./node_modules/@dojo/framework/shim/object.mjs","webpack:///./node_modules/@dojo/framework/shim/string.mjs","webpack:///./node_modules/@dojo/framework/shim/support/has.mjs","webpack:///./node_modules/@dojo/framework/shim/support/queue.mjs","webpack:///./node_modules/@dojo/framework/shim/support/util.mjs","webpack:///./node_modules/@dojo/framework/widget-core/Injector.mjs","webpack:///./node_modules/@dojo/framework/widget-core/NodeHandler.mjs","webpack:///./node_modules/@dojo/framework/widget-core/Registry.mjs","webpack:///./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs","webpack:///./node_modules/@dojo/framework/widget-core/WidgetBase.mjs","webpack:///./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs","webpack:///./node_modules/@dojo/framework/widget-core/d.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/afterRender.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/inject.mjs","webpack:///./node_modules/@dojo/framework/widget-core/diff.mjs","webpack:///./node_modules/@dojo/framework/widget-core/mixins/Projector.mjs","webpack:///./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs","webpack:///./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs","webpack:///./node_modules/@dojo/framework/widget-core/vdom.mjs","webpack:///./node_modules/@dojo/cli-build-widget/template/custom-element.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/menu/Menu.ts","webpack:///./src/menu/menu.m.css?ec11"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","noop","__WEBPACK_IMPORTED_MODULE_1__shim_Promise__","resolve","destroyed","Error","Destroyable","[object Object]","this","handles","handle","Array","isArray","__WEBPACK_IMPORTED_MODULE_0__lang__","_handles","push","splice","indexOf","destroy","forEach","own","__webpack_exports__","regexMap","__WEBPACK_IMPORTED_MODULE_0__shim_Map__","Evented","__WEBPACK_IMPORTED_MODULE_1__Destroyable__","super","arguments","listenersMap","event","methods","type","globString","targetString","regex","has","RegExp","replace","set","test","isGlobMatch","method","listener","map","_addListener","listeners","destructor","called","createHandle","length","slice","testCache","testFunctions","testThenables","globalScope","window","global","self","staticFeatures","DojoHasEnvironment","staticCache","apply","add","feature","value","overwrite","normalizedFeature","toLowerCase","Boolean","exists","TypeError","then","isFeatureTestThenable","resolvedValue","result","document","location","process","versions","node","Map","__WEBPACK_IMPORTED_MODULE_1__global__","ShimPromise","__WEBPACK_IMPORTED_MODULE_0__global__","Promise","Symbol","wellKnown","__WEBPACK_IMPORTED_MODULE_2__support_util__","for","WeakMap","from","of","copyWithin","fill","find","findIndex","includes","__WEBPACK_IMPORTED_MODULE_4__support_util__","globalObject","Math","pow","assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","fromCodePoint","raw","codePointAt","endsWith","normalize","repeat","startsWith","padEnd","padStart","String","__WEBPACK_IMPORTED_MODULE_0__has_has__","every","key","Number","POSITIVE_INFINITY","e","imul","Observable","Set","getCallSite","callSite","substitutions","key1","key2","freeze","postMessage","requestAnimationFrame","setImmediate","MutationObserver","WebKitMutationObserver","example","createElement","observer","observe","attributes","style","setProperty","takeRecords","undefined","Animation","KeyframeEffect","executeTask","item","isActive","callback","getQueueHandle","enqueue","queue","addEventListener","source","data","stopPropagation","shift","queueTask","id","queueAnimationTask","rafId","bind","cancelAnimationFrame","writable","nativeFunction","target","args","Injector","__WEBPACK_IMPORTED_MODULE_0__core_Evented__","payload","_payload","invalidator","_invalidator","NodeEventType","_nodeMap","__WEBPACK_IMPORTED_MODULE_1__shim_Map__","element","emit","Widget","Projector","clear","WIDGET_BASE_TYPE","__WEBPACK_IMPORTED_MODULE_2__shim_Symbol__","isWidgetBaseConstructor","_type","Registry","__WEBPACK_IMPORTED_MODULE_3__core_Evented__","widgetLabel","action","label","_widgetRegistry","toString","__WEBPACK_IMPORTED_MODULE_0__shim_Promise__","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","injectorItem","injector","promise","default","isWidgetConstructorDefaultExport","hasInjector","__WEBPACK_IMPORTED_MODULE_1__core_Evented__","_registry","__WEBPACK_IMPORTED_MODULE_2__Registry__","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","registry","registeredLabels","on","decoratorMap","boundAuto","__WEBPACK_IMPORTED_MODULE_4__diff__","noBind","WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","__WEBPACK_IMPORTED_MODULE_6__NodeHandler__","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","__WEBPACK_IMPORTED_MODULE_7__vdom__","dirty","onAttach","onDetach","nodeHandler","coreProperties","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","properties","changedPropertyKeys","instanceData","__WEBPACK_IMPORTED_MODULE_5__RegistryHandler__","originalProperties","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","previousProperty","newProperty","_bindFunctionProperty","diffFunctions","changed","executedReactions","reaction","propertyChanged","reactionRun","children","dNode","_runBeforeRenders","runAfterRenders","__WEBPACK_IMPORTED_MODULE_3__d__","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","getPrototypeOf","_buildDecoratorList","__WEBPACK_IMPORTED_MODULE_8__Registry__","_bindFunctionPropertyMap","__WEBPACK_IMPORTED_MODULE_1__shim_WeakMap__","bindInfo","boundFunc","scope","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","afterConstructors","afterConstructor","pop","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","enter","enterAnimation","activeClass","enterAnimationActive","classList","remove","exit","exitAnimation","removeNode","exitAnimationActive","child","DOMVNODE","widgetConstructor","WNODE","tag","propertiesOrChildren","deferredPropertiesCallback","VNODE","attrs","props","diffType","isElementNode","tagName","events","domNode","text","__WEBPACK_IMPORTED_MODULE_0__shim_Symbol__","isWNode","isVNode","__WEBPACK_IMPORTED_MODULE_0__handleDecorator__","propertyKey","addDecorator","alwaysRender","__WEBPACK_IMPORTED_MODULE_1__beforeProperties__","customElement","childType","__WEBPACK_IMPORTED_MODULE_0__registerCustomElement__","DOJO","registryFactory","__WEBPACK_IMPORTED_MODULE_1__Registry__","__customElementDescriptor","diffProperty","diffFunction","__WEBPACK_IMPORTED_MODULE_1__diff__","reactionFunction","handleDecorator","handler","descriptor","registeredInjectorsMap","__WEBPACK_IMPORTED_MODULE_0__shim_WeakMap__","inject","getProperties","__WEBPACK_IMPORTED_MODULE_1__handleDecorator__","__WEBPACK_IMPORTED_MODULE_2__beforeProperties__","getInjector","registeredInjectors","__WEBPACK_IMPORTED_MODULE_0__Registry__","reference","ignore","isObjectOrArray","shallow","validOldProperty","validNewProperty","previousKeys","newKeys","some","ProjectorAttachState","AttachType","ProjectorMixin","Base","_root","body","_async","_projectorProperties","_projectionOptions","transitions","__WEBPACK_IMPORTED_MODULE_2__animations_cssTransitions__","root","projectorState","Detached","options","Append","_attach","Merge","Attached","async","doc","previousRoot","createDocumentFragment","__setChildren__","__setProperties__","__WEBPACK_IMPORTED_MODULE_1__core_lang__","__setCoreProperties__","_projection","childNodes","outerHTML","__WEBPACK_IMPORTED_MODULE_4__d__","_attachHandle","sync","__WEBPACK_IMPORTED_MODULE_5__vdom__","append","merge","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_3__decorators_afterRender__","theme","__WEBPACK_IMPORTED_MODULE_3__decorators_handleDecorator__","themeRegistry","themeInjector","__WEBPACK_IMPORTED_MODULE_1__Injector__","INJECTED_THEME_KEY","setInvalidator","THEME_KEY","ThemedMixin","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","classes","_recalculateThemeClasses","className","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_registeredBaseTheme","join","baseThemes","finalBaseTheme","baseTheme","_a","currentClassNames","baseClass","themeKey","__WEBPACK_IMPORTED_MODULE_4__decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_5__diff__","__WEBPACK_IMPORTED_MODULE_2__decorators_inject__","CustomElementChildType","DomToWidgetWrapper","__WEBPACK_IMPORTED_MODULE_1__WidgetBase__","__WEBPACK_IMPORTED_MODULE_7__decorators_alwaysRender__","create","WidgetConstructor","attributeMap","attributeName","HTMLElement","_eventProperties","_initialised","domProperties","_attributesToProperties","filteredPropertyName","_getProperty","_setProperty","eventName","_getEventProperty","_setEventProperty","eventCallback","dispatchEvent","CustomEvent","bubbles","detail","defineProperties","TEXT","__WEBPACK_IMPORTED_MODULE_3__shim_array__","childNode","_render","_childConnected","widgetProperties","renderChildren","__children__","themeContext","__WEBPACK_IMPORTED_MODULE_6__mixins_Themed__","_getTheme","__WEBPACK_IMPORTED_MODULE_5__shim_global__","__WEBPACK_IMPORTED_MODULE_2__mixins_Projector__","_projector","setProperties","dojoce","themes","parentNode","filter","Child","isWidget","__properties__","oldValue","getAttribute","observedAttributes","register","customElements","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","emptyArray","nodeOperations","widgetInstanceMap","__WEBPACK_IMPORTED_MODULE_4__shim_WeakMap__","nextSiblingMap","projectorStateMap","same","dnode1","dnode2","__WEBPACK_IMPORTED_MODULE_2__d__","instance","missingTransition","checkStyleValue","styleValue","updateEvent","currentValue","projectionOptions","previousValue","projectorInstance","eventMap","nodeMap","previousEvent","evt","addClasses","classNames","split","removeClasses","nodeOperation","propName","propValue","deferredRenderCallbacks","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","updateAttribute","attrName","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","updateAttributes","previousAttributes","attrNames","attrCount","updateProperties","includesEventsAndAttributes","propertiesUpdated","propNames","propCount","previousClasses","currentClasses","newClasses","previousClassName","classIndex","styleNames","styleCount","j","styleName","newStyleValue","styleApplyer","domValue","lastIndexOf","findIndexOfChild","sameAs","start","toInternalWNode","rendered","filterAndDecorateChildren","nodeAdded","dnode","nodeToRemove","pointerEvents","removeDomNode","removeChild","checkDistinguishable","indexToCheck","parentInstance","nodeIdentifier","parentName","updateChildren","parentVNode","siblings","oldChildren","newChildren","oldChildrenLength","newChildrenLength","depth","oldIndex","newIndex","textUpdated","oldChild","newChild","inserted","addDeferredProperties","updateDom","findOldIndex","addChild","insertBeforeDomNode","childrenArray","nextIndex","insertBeforeChildren","insertBefore","parentElement","createDom","afterRenderCallbacks","childToRemove","addChildren","__WEBPACK_IMPORTED_MODULE_1__shim_array__","nextSiblings","domElement","toUpperCase","initPropertiesAndChildren","parentInstanceData","__WEBPACK_IMPORTED_MODULE_3__Registry__","renderQueue","scheduleRender","__render__","filteredRendered","addRoot","mergeElement","ownerDocument","createElementNS","appendChild","newDomNode","createTextNode","replaceChild","previous","oldNextSiblings","previousRendered","updated","current","newProperties","buildPreviousProperties","updateAnimation","vnode","decoratedDeferredProperties","runDeferredRenderCallbacks","__WEBPACK_IMPORTED_MODULE_0__shim_global__","runAfterRenderCallbacks","requestIdleCallback","setTimeout","renderScheduled","renders","sort","a","b","previouslyRendered","dom","finalProjectorOptions","projectorOptions","defaults","getProjectionOptions","rootNode","projection","widgetFactory","registerCustomElement","defaultExport","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","nextTick","title","browser","env","argv","version","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","t","desc","r","Reflect","decorate","setPrototypeOf","g","Function","eval","Menu","__WEBPACK_IMPORTED_MODULE_3__dojo_framework_widget_core_mixins_Themed__","__WEBPACK_IMPORTED_MODULE_4__dojo_framework_widget_core_WidgetBase__","_selectedId","onSelected","items","index","_onSelected","selected","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_widget_core_d__","__WEBPACK_IMPORTED_MODULE_5__menu_m_css__","__WEBPACK_IMPORTED_MODULE_2__dojo_framework_widget_core_decorators_customElement__"," _key","menuContainer"],"mappings":"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","file":"menu-1.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 01c4fe13e2f1c25e9421","import { createCompositeHandle } from './lang';\nimport Promise from '../shim/Promise';\n/**\n * No operation function to replace own once instance is destoryed\n */\nfunction noop() {\n    return Promise.resolve(false);\n}\n/**\n * No op function used to replace own, once instance has been destoryed\n */\nfunction destroyed() {\n    throw new Error('Call made to destroyed method');\n}\nexport class Destroyable {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.handles = [];\n    }\n    /**\n     * Register handles for the instance that will be destroyed when `this.destroy` is called\n     *\n     * @param {Handle} handle The handle to add for the instance\n     * @returns {Handle} a handle for the handle, removes the handle for the instance and calls destroy\n     */\n    own(handles) {\n        const handle = Array.isArray(handles) ? createCompositeHandle(...handles) : handles;\n        const { handles: _handles } = this;\n        _handles.push(handle);\n        return {\n            destroy() {\n                _handles.splice(_handles.indexOf(handle));\n                handle.destroy();\n            }\n        };\n    }\n    /**\n     * Destrpys all handers registered for the instance\n     *\n     * @returns {Promise<any} a promise that resolves once all handles have been destroyed\n     */\n    destroy() {\n        return new Promise((resolve) => {\n            this.handles.forEach((handle) => {\n                handle && handle.destroy && handle.destroy();\n            });\n            this.destroy = noop;\n            this.own = destroyed;\n            resolve(true);\n        });\n    }\n}\nexport default Destroyable;\n//# sourceMappingURL=Destroyable.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/Destroyable.mjs\n// module id = ./node_modules/@dojo/framework/core/Destroyable.mjs\n// module chunks = menu","import Map from '../shim/Map';\nimport { Destroyable } from './Destroyable';\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map();\n/**\n * Determines is the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString, targetString) {\n    if (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n        let regex;\n        if (regexMap.has(globString)) {\n            regex = regexMap.get(globString);\n        }\n        else {\n            regex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n            regexMap.set(globString, regex);\n        }\n        return regex.test(targetString);\n    }\n    else {\n        return globString === targetString;\n    }\n}\n/**\n * Event Class\n */\nexport class Evented extends Destroyable {\n    constructor() {\n        super(...arguments);\n        /**\n         * map of listeners keyed by event type\n         */\n        this.listenersMap = new Map();\n    }\n    emit(event) {\n        this.listenersMap.forEach((methods, type) => {\n            if (isGlobMatch(type, event.type)) {\n                [...methods].forEach((method) => {\n                    method.call(this, event);\n                });\n            }\n        });\n    }\n    on(type, listener) {\n        if (Array.isArray(listener)) {\n            const handles = listener.map((listener) => this._addListener(type, listener));\n            return {\n                destroy() {\n                    handles.forEach((handle) => handle.destroy());\n                }\n            };\n        }\n        return this._addListener(type, listener);\n    }\n    _addListener(type, listener) {\n        const listeners = this.listenersMap.get(type) || [];\n        listeners.push(listener);\n        this.listenersMap.set(type, listeners);\n        return {\n            destroy: () => {\n                const listeners = this.listenersMap.get(type) || [];\n                listeners.splice(listeners.indexOf(listener), 1);\n            }\n        };\n    }\n}\nexport default Evented;\n//# sourceMappingURL=Evented.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/Evented.mjs\n// module id = ./node_modules/@dojo/framework/core/Evented.mjs\n// module chunks = menu","import { assign } from '../shim/object';\nexport { assign } from '../shim/object';\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction copyArray(array, inherited) {\n    return array.map(function (item) {\n        if (Array.isArray(item)) {\n            return copyArray(item, inherited);\n        }\n        return !shouldDeepCopyObject(item)\n            ? item\n            : _mixin({\n                deep: true,\n                inherited: inherited,\n                sources: [item],\n                target: {}\n            });\n    });\n}\nfunction _mixin(kwArgs) {\n    const deep = kwArgs.deep;\n    const inherited = kwArgs.inherited;\n    const target = kwArgs.target;\n    const copied = kwArgs.copied || [];\n    const copiedClone = [...copied];\n    for (let i = 0; i < kwArgs.sources.length; i++) {\n        const source = kwArgs.sources[i];\n        if (source === null || source === undefined) {\n            continue;\n        }\n        for (let key in source) {\n            if (inherited || hasOwnProperty.call(source, key)) {\n                let value = source[key];\n                if (copiedClone.indexOf(value) !== -1) {\n                    continue;\n                }\n                if (deep) {\n                    if (Array.isArray(value)) {\n                        value = copyArray(value, inherited);\n                    }\n                    else if (shouldDeepCopyObject(value)) {\n                        const targetValue = target[key] || {};\n                        copied.push(source);\n                        value = _mixin({\n                            deep: true,\n                            inherited: inherited,\n                            sources: [value],\n                            target: targetValue,\n                            copied\n                        });\n                    }\n                }\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport function create(prototype, ...mixins) {\n    if (!mixins.length) {\n        throw new RangeError('lang.create requires at least one mixin object.');\n    }\n    const args = mixins.slice();\n    args.unshift(Object.create(prototype));\n    return assign.apply(null, args);\n}\nexport function deepAssign(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: false,\n        sources: sources,\n        target: target\n    });\n}\nexport function deepMixin(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Creates a new object using the provided source's prototype as the prototype for the new object, and then\n * deep copies the provided source's values into the new target.\n *\n * @param source The object to duplicate\n * @return The new object\n */\nexport function duplicate(source) {\n    const target = Object.create(Object.getPrototypeOf(source));\n    return deepMixin(target, source);\n}\n/**\n * Determines whether two values are the same value.\n *\n * @param a First value to compare\n * @param b Second value to compare\n * @return true if the values are the same; false otherwise\n */\nexport function isIdentical(a, b) {\n    return (a === b ||\n        /* both values are NaN */\n        (a !== a && b !== b));\n}\n/**\n * Returns a function that binds a method to the specified object at runtime. This is similar to\n * `Function.prototype.bind`, but instead of a function it takes the name of a method on an object.\n * As a result, the function returned by `lateBind` will always call the function currently assigned to\n * the specified property on the object as of the moment the function it returns is called.\n *\n * @param instance The context object\n * @param method The name of the method on the context object to bind to itself\n * @param suppliedArgs An optional array of values to prepend to the `instance[method]` arguments list\n * @return The bound function\n */\nexport function lateBind(instance, method, ...suppliedArgs) {\n    return suppliedArgs.length\n        ? function () {\n            const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n            // TS7017\n            return instance[method].apply(instance, args);\n        }\n        : function () {\n            // TS7017\n            return instance[method].apply(instance, arguments);\n        };\n}\nexport function mixin(target, ...sources) {\n    return _mixin({\n        deep: false,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction, ...suppliedArgs) {\n    return function () {\n        const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n        return targetFunction.apply(this, args);\n    };\n}\n/**\n * Returns an object with a destroy method that, when called, calls the passed-in destructor.\n * This is intended to provide a unified interface for creating \"remove\" / \"destroy\" handlers for\n * event listeners, timers, etc.\n *\n * @param destructor A function that will be called when the handle's `destroy` method is invoked\n * @return The handle object\n */\nexport function createHandle(destructor) {\n    let called = false;\n    return {\n        destroy: function () {\n            if (!called) {\n                called = true;\n                destructor();\n            }\n        }\n    };\n}\n/**\n * Returns a single handle that can be used to destroy multiple handles simultaneously.\n *\n * @param handles An array of handles with `destroy` methods\n * @return The handle object\n */\nexport function createCompositeHandle(...handles) {\n    return createHandle(function () {\n        for (let i = 0; i < handles.length; i++) {\n            handles[i].destroy();\n        }\n    });\n}\n//# sourceMappingURL=lang.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/lang.mjs\n// module id = ./node_modules/@dojo/framework/core/lang.mjs\n// module chunks = menu","function isFeatureTestThenable(value) {\n    return value && value.then;\n}\n/**\n * A cache of results of feature tests\n */\nexport const testCache = {};\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions = {};\n/**\n * A cache of unresolved thenables (probably promises)\n * @type {{}}\n */\nconst testThenables = {};\n/**\n * A reference to the global scope (`window` in a browser, `global` in NodeJS)\n */\nconst globalScope = (function () {\n    /* istanbul ignore else */\n    if (typeof window !== 'undefined') {\n        // Browsers\n        return window;\n    }\n    else if (typeof global !== 'undefined') {\n        // Node\n        return global;\n    }\n    else if (typeof self !== 'undefined') {\n        // Web workers\n        return self;\n    }\n    /* istanbul ignore next */\n    return {};\n})();\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures } = globalScope.DojoHasEnvironment || {};\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in globalScope) {\n    delete globalScope.DojoHasEnvironment;\n}\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache = staticFeatures\n    ? isStaticFeatureFunction(staticFeatures) ? staticFeatures.apply(globalScope) : staticFeatures\n    : {}; /* Providing an empty cache, if none was in the environment\n\n/**\n* AMD plugin function.\n*\n* Conditional loads modules based on a has feature test value.\n*\n* @param resourceId Gives the resolved module id to load.\n* @param require The loader require function with respect to the module that contained the plugin resource in its\n*                dependency list.\n* @param load Callback to loader that consumes result of plugin demand.\n*/\nexport function load(resourceId, require, load, config) {\n    resourceId ? require([resourceId], load) : load();\n}\n/**\n * AMD plugin function.\n *\n * Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n * value(s).\n *\n * @param resourceId The id of the module\n * @param normalize Resolves a relative module id into an absolute module id\n */\nexport function normalize(resourceId, normalize) {\n    const tokens = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n    let i = 0;\n    function get(skip) {\n        const term = tokens[i++];\n        if (term === ':') {\n            // empty string module name, resolves to null\n            return null;\n        }\n        else {\n            // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n            if (tokens[i++] === '?') {\n                if (!skip && has(term)) {\n                    // matched the feature, get the first value from the options\n                    return get();\n                }\n                else {\n                    // did not match, get the second value, passing over the first\n                    get(true);\n                    return get(skip);\n                }\n            }\n            // a module\n            return term;\n        }\n    }\n    const id = get();\n    return id && normalize(id);\n}\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature) {\n    const normalizedFeature = feature.toLowerCase();\n    return Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature, value, overwrite = false) {\n    const normalizedFeature = feature.toLowerCase();\n    if (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n        throw new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n    }\n    if (typeof value === 'function') {\n        testFunctions[normalizedFeature] = value;\n    }\n    else if (isFeatureTestThenable(value)) {\n        testThenables[feature] = value.then((resolvedValue) => {\n            testCache[feature] = resolvedValue;\n            delete testThenables[feature];\n        }, () => {\n            delete testThenables[feature];\n        });\n    }\n    else {\n        testCache[normalizedFeature] = value;\n        delete testFunctions[normalizedFeature];\n    }\n}\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name (if a string) or identifier (if an integer) of the feature to test.\n */\nexport default function has(feature) {\n    let result;\n    const normalizedFeature = feature.toLowerCase();\n    if (normalizedFeature in staticCache) {\n        result = staticCache[normalizedFeature];\n    }\n    else if (testFunctions[normalizedFeature]) {\n        result = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n        delete testFunctions[normalizedFeature];\n    }\n    else if (normalizedFeature in testCache) {\n        result = testCache[normalizedFeature];\n    }\n    else if (feature in testThenables) {\n        return false;\n    }\n    else {\n        throw new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n    }\n    return result;\n}\n/*\n * Out of the box feature tests\n */\n/* Environments */\n/* Used as a value to provide a debug only code path */\nadd('debug', true);\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function () {\n    if (typeof process === 'object' && process.versions && process.versions.node) {\n        return process.versions.node;\n    }\n});\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/has/has.mjs\n// module id = ./node_modules/@dojo/framework/has/has.mjs\n// module chunks = menu","import { isArrayLike, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from './support/has';\nimport './Symbol';\nexport let Map = global.Map;\nif (!true) {\n    Map = (_a = class Map {\n            constructor(iterable) {\n                this._keys = [];\n                this._values = [];\n                this[Symbol.toStringTag] = 'Map';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            const value = iterable[i];\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                }\n            }\n            /**\n             * An alternative to Array.prototype.indexOf using Object.is\n             * to check for equality. See http://mzl.la/1zuKO2V\n             */\n            _indexOfKey(keys, key) {\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    if (objectIs(keys[i], key)) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            get size() {\n                return this._keys.length;\n            }\n            clear() {\n                this._keys.length = this._values.length = 0;\n            }\n            delete(key) {\n                const index = this._indexOfKey(this._keys, key);\n                if (index < 0) {\n                    return false;\n                }\n                this._keys.splice(index, 1);\n                this._values.splice(index, 1);\n                return true;\n            }\n            entries() {\n                const values = this._keys.map((key, i) => {\n                    return [key, this._values[i]];\n                });\n                return new ShimIterator(values);\n            }\n            forEach(callback, context) {\n                const keys = this._keys;\n                const values = this._values;\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    callback.call(context, values[i], keys[i], this);\n                }\n            }\n            get(key) {\n                const index = this._indexOfKey(this._keys, key);\n                return index < 0 ? undefined : this._values[index];\n            }\n            has(key) {\n                return this._indexOfKey(this._keys, key) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._keys);\n            }\n            set(key, value) {\n                let index = this._indexOfKey(this._keys, key);\n                index = index < 0 ? this._keys.length : index;\n                this._keys[index] = key;\n                this._values[index] = value;\n                return this;\n            }\n            values() {\n                return new ShimIterator(this._values);\n            }\n            [Symbol.iterator]() {\n                return this.entries();\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Map;\nvar _a;\n//# sourceMappingURL=Map.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Map.mjs\n// module id = ./node_modules/@dojo/framework/shim/Map.mjs\n// module chunks = menu","import global from './global';\nimport { queueMicroTask } from './support/queue';\nimport './Symbol';\nimport has from './support/has';\nexport let ShimPromise = global.Promise;\nexport const isThenable = function isThenable(value) {\n    return value && typeof value.then === 'function';\n};\nif (!true) {\n    global.Promise = ShimPromise = (_a = class Promise {\n            /**\n             * Creates a new Promise.\n             *\n             * @constructor\n             *\n             * @param executor\n             * The executor function is called immediately when the Promise is instantiated. It is responsible for\n             * starting the asynchronous operation when it is invoked.\n             *\n             * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n             * successfully, or the `reject` function when the operation fails.\n             */\n            constructor(executor) {\n                /**\n                 * The current state of this promise.\n                 */\n                this.state = 1 /* Pending */;\n                this[Symbol.toStringTag] = 'Promise';\n                /**\n                 * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n                 */\n                let isChained = false;\n                /**\n                 * Whether or not this promise is in a resolved state.\n                 */\n                const isResolved = () => {\n                    return this.state !== 1 /* Pending */ || isChained;\n                };\n                /**\n                 * Callbacks that should be invoked once the asynchronous operation has completed.\n                 */\n                let callbacks = [];\n                /**\n                 * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n                 * enqueues callbacks for execution on the next event loop turn.\n                 */\n                let whenFinished = function (callback) {\n                    if (callbacks) {\n                        callbacks.push(callback);\n                    }\n                };\n                /**\n                 * Settles this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const settle = (newState, value) => {\n                    // A promise can only be settled once.\n                    if (this.state !== 1 /* Pending */) {\n                        return;\n                    }\n                    this.state = newState;\n                    this.resolvedValue = value;\n                    whenFinished = queueMicroTask;\n                    // Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n                    // wait an extra turn.\n                    if (callbacks && callbacks.length > 0) {\n                        queueMicroTask(function () {\n                            if (callbacks) {\n                                let count = callbacks.length;\n                                for (let i = 0; i < count; ++i) {\n                                    callbacks[i].call(null);\n                                }\n                                callbacks = null;\n                            }\n                        });\n                    }\n                };\n                /**\n                 * Resolves this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const resolve = (newState, value) => {\n                    if (isResolved()) {\n                        return;\n                    }\n                    if (isThenable(value)) {\n                        value.then(settle.bind(null, 0 /* Fulfilled */), settle.bind(null, 2 /* Rejected */));\n                        isChained = true;\n                    }\n                    else {\n                        settle(newState, value);\n                    }\n                };\n                this.then = (onFulfilled, onRejected) => {\n                    return new Promise((resolve, reject) => {\n                        // whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n                        // promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n                        // event loop.\n                        whenFinished(() => {\n                            const callback = this.state === 2 /* Rejected */ ? onRejected : onFulfilled;\n                            if (typeof callback === 'function') {\n                                try {\n                                    resolve(callback(this.resolvedValue));\n                                }\n                                catch (error) {\n                                    reject(error);\n                                }\n                            }\n                            else if (this.state === 2 /* Rejected */) {\n                                reject(this.resolvedValue);\n                            }\n                            else {\n                                resolve(this.resolvedValue);\n                            }\n                        });\n                    });\n                };\n                try {\n                    executor(resolve.bind(null, 0 /* Fulfilled */), resolve.bind(null, 2 /* Rejected */));\n                }\n                catch (error) {\n                    settle(2 /* Rejected */, error);\n                }\n            }\n            static all(iterable) {\n                return new this(function (resolve, reject) {\n                    const values = [];\n                    let complete = 0;\n                    let total = 0;\n                    let populating = true;\n                    function fulfill(index, value) {\n                        values[index] = value;\n                        ++complete;\n                        finish();\n                    }\n                    function finish() {\n                        if (populating || complete < total) {\n                            return;\n                        }\n                        resolve(values);\n                    }\n                    function processItem(index, item) {\n                        ++total;\n                        if (isThenable(item)) {\n                            // If an item Promise rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(fulfill.bind(null, index), reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(fulfill.bind(null, index));\n                        }\n                    }\n                    let i = 0;\n                    for (const value of iterable) {\n                        processItem(i, value);\n                        i++;\n                    }\n                    populating = false;\n                    finish();\n                });\n            }\n            static race(iterable) {\n                return new this(function (resolve, reject) {\n                    for (const item of iterable) {\n                        if (item instanceof Promise) {\n                            // If a Promise item rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(resolve, reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(resolve);\n                        }\n                    }\n                });\n            }\n            static reject(reason) {\n                return new this(function (resolve, reject) {\n                    reject(reason);\n                });\n            }\n            static resolve(value) {\n                return new this(function (resolve) {\n                    resolve(value);\n                });\n            }\n            catch(onRejected) {\n                return this.then(undefined, onRejected);\n            }\n        },\n        _a[Symbol.species] = ShimPromise,\n        _a);\n}\nexport default ShimPromise;\nvar _a;\n//# sourceMappingURL=Promise.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Promise.mjs\n// module id = ./node_modules/@dojo/framework/shim/Promise.mjs\n// module chunks = menu","import has from './support/has';\nimport global from './global';\nimport { getValueDescriptor } from './support/util';\nexport let Symbol = global.Symbol;\nif (!true) {\n    /**\n     * Throws if the value is not a symbol, used internally within the Shim\n     * @param  {any}    value The value to check\n     * @return {symbol}       Returns the symbol or throws\n     */\n    const validateSymbol = function validateSymbol(value) {\n        if (!isSymbol(value)) {\n            throw new TypeError(value + ' is not a symbol');\n        }\n        return value;\n    };\n    const defineProperties = Object.defineProperties;\n    const defineProperty = Object.defineProperty;\n    const create = Object.create;\n    const objPrototype = Object.prototype;\n    const globalSymbols = {};\n    const getSymbolName = (function () {\n        const created = create(null);\n        return function (desc) {\n            let postfix = 0;\n            let name;\n            while (created[String(desc) + (postfix || '')]) {\n                ++postfix;\n            }\n            desc += String(postfix || '');\n            created[desc] = true;\n            name = '@@' + desc;\n            // FIXME: Temporary guard until the duplicate execution when testing can be\n            // pinned down.\n            if (!Object.getOwnPropertyDescriptor(objPrototype, name)) {\n                defineProperty(objPrototype, name, {\n                    set: function (value) {\n                        defineProperty(this, name, getValueDescriptor(value));\n                    }\n                });\n            }\n            return name;\n        };\n    })();\n    const InternalSymbol = function Symbol(description) {\n        if (this instanceof InternalSymbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        return Symbol(description);\n    };\n    Symbol = global.Symbol = function Symbol(description) {\n        if (this instanceof Symbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        const sym = Object.create(InternalSymbol.prototype);\n        description = description === undefined ? '' : String(description);\n        return defineProperties(sym, {\n            __description__: getValueDescriptor(description),\n            __name__: getValueDescriptor(getSymbolName(description))\n        });\n    };\n    /* Decorate the Symbol function with the appropriate properties */\n    defineProperty(Symbol, 'for', getValueDescriptor(function (key) {\n        if (globalSymbols[key]) {\n            return globalSymbols[key];\n        }\n        return (globalSymbols[key] = Symbol(String(key)));\n    }));\n    defineProperties(Symbol, {\n        keyFor: getValueDescriptor(function (sym) {\n            let key;\n            validateSymbol(sym);\n            for (key in globalSymbols) {\n                if (globalSymbols[key] === sym) {\n                    return key;\n                }\n            }\n        }),\n        hasInstance: getValueDescriptor(Symbol.for('hasInstance'), false, false),\n        isConcatSpreadable: getValueDescriptor(Symbol.for('isConcatSpreadable'), false, false),\n        iterator: getValueDescriptor(Symbol.for('iterator'), false, false),\n        match: getValueDescriptor(Symbol.for('match'), false, false),\n        observable: getValueDescriptor(Symbol.for('observable'), false, false),\n        replace: getValueDescriptor(Symbol.for('replace'), false, false),\n        search: getValueDescriptor(Symbol.for('search'), false, false),\n        species: getValueDescriptor(Symbol.for('species'), false, false),\n        split: getValueDescriptor(Symbol.for('split'), false, false),\n        toPrimitive: getValueDescriptor(Symbol.for('toPrimitive'), false, false),\n        toStringTag: getValueDescriptor(Symbol.for('toStringTag'), false, false),\n        unscopables: getValueDescriptor(Symbol.for('unscopables'), false, false)\n    });\n    /* Decorate the InternalSymbol object */\n    defineProperties(InternalSymbol.prototype, {\n        constructor: getValueDescriptor(Symbol),\n        toString: getValueDescriptor(function () {\n            return this.__name__;\n        }, false, false)\n    });\n    /* Decorate the Symbol.prototype */\n    defineProperties(Symbol.prototype, {\n        toString: getValueDescriptor(function () {\n            return 'Symbol (' + validateSymbol(this).__description__ + ')';\n        }),\n        valueOf: getValueDescriptor(function () {\n            return validateSymbol(this);\n        })\n    });\n    defineProperty(Symbol.prototype, Symbol.toPrimitive, getValueDescriptor(function () {\n        return validateSymbol(this);\n    }));\n    defineProperty(Symbol.prototype, Symbol.toStringTag, getValueDescriptor('Symbol', false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toPrimitive, getValueDescriptor(Symbol.prototype[Symbol.toPrimitive], false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toStringTag, getValueDescriptor(Symbol.prototype[Symbol.toStringTag], false, false, true));\n}\n/**\n * A custom guard function that determines if an object is a symbol or not\n * @param  {any}       value The value to check to see if it is a symbol or not\n * @return {is symbol}       Returns true if a symbol or not (and narrows the type guard)\n */\nexport function isSymbol(value) {\n    return (value && (typeof value === 'symbol' || value['@@toStringTag'] === 'Symbol')) || false;\n}\n/**\n * Fill any missing well known symbols if the native Symbol is missing them\n */\n[\n    'hasInstance',\n    'isConcatSpreadable',\n    'iterator',\n    'species',\n    'replace',\n    'search',\n    'split',\n    'match',\n    'toPrimitive',\n    'toStringTag',\n    'unscopables',\n    'observable'\n].forEach((wellKnown) => {\n    if (!Symbol[wellKnown]) {\n        Object.defineProperty(Symbol, wellKnown, getValueDescriptor(Symbol.for(wellKnown), false, false));\n    }\n});\nexport default Symbol;\n//# sourceMappingURL=Symbol.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Symbol.mjs\n// module id = ./node_modules/@dojo/framework/shim/Symbol.mjs\n// module chunks = menu","import global from './global';\nimport { isArrayLike } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let WeakMap = global.WeakMap;\nif (!true) {\n    const DELETED = {};\n    const getUID = function getUID() {\n        return Math.floor(Math.random() * 100000000);\n    };\n    const generateName = (function () {\n        let startId = Math.floor(Date.now() % 100000000);\n        return function generateName() {\n            return '__wm' + getUID() + (startId++ + '__');\n        };\n    })();\n    WeakMap = class WeakMap {\n        constructor(iterable) {\n            this[Symbol.toStringTag] = 'WeakMap';\n            this._name = generateName();\n            this._frozenEntries = [];\n            if (iterable) {\n                if (isArrayLike(iterable)) {\n                    for (let i = 0; i < iterable.length; i++) {\n                        const item = iterable[i];\n                        this.set(item[0], item[1]);\n                    }\n                }\n                else {\n                    for (const [key, value] of iterable) {\n                        this.set(key, value);\n                    }\n                }\n            }\n        }\n        _getFrozenEntryIndex(key) {\n            for (let i = 0; i < this._frozenEntries.length; i++) {\n                if (this._frozenEntries[i].key === key) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        delete(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                entry.value = DELETED;\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                this._frozenEntries.splice(frozenIndex, 1);\n                return true;\n            }\n            return false;\n        }\n        get(key) {\n            if (key === undefined || key === null) {\n                return undefined;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                return entry.value;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return this._frozenEntries[frozenIndex].value;\n            }\n        }\n        has(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return true;\n            }\n            return false;\n        }\n        set(key, value) {\n            if (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n                throw new TypeError('Invalid value used as weak map key');\n            }\n            let entry = key[this._name];\n            if (!entry || entry.key !== key) {\n                entry = Object.create(null, {\n                    key: { value: key }\n                });\n                if (Object.isFrozen(key)) {\n                    this._frozenEntries.push(entry);\n                }\n                else {\n                    Object.defineProperty(key, this._name, {\n                        value: entry\n                    });\n                }\n            }\n            entry.value = value;\n            return this;\n        }\n    };\n}\nexport default WeakMap;\n//# sourceMappingURL=WeakMap.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/WeakMap.mjs\n// module id = ./node_modules/@dojo/framework/shim/WeakMap.mjs\n// module chunks = menu","import global from './global';\nimport { isArrayLike, isIterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\nexport let from;\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of;\n/* ES6 Array instance methods */\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin;\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill;\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find;\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex;\n/* ES7 Array instance methods */\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes;\nif (true && true) {\n    from = global.Array.from;\n    of = global.Array.of;\n    copyWithin = wrapNative(global.Array.prototype.copyWithin);\n    fill = wrapNative(global.Array.prototype.fill);\n    find = wrapNative(global.Array.prototype.find);\n    findIndex = wrapNative(global.Array.prototype.findIndex);\n}\nelse {\n    // It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n    // To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        if (isNaN(length)) {\n            return 0;\n        }\n        length = Number(length);\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    /**\n     * From ES6 7.1.4 ToInteger()\n     *\n     * @param value A value to convert\n     * @return An integer\n     */\n    const toInteger = function toInteger(value) {\n        value = Number(value);\n        if (isNaN(value)) {\n            return 0;\n        }\n        if (value === 0 || !isFinite(value)) {\n            return value;\n        }\n        return (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n    };\n    /**\n     * Normalizes an offset against a given length, wrapping it if negative.\n     *\n     * @param value The original offset\n     * @param length The total length to normalize against\n     * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n     */\n    const normalizeOffset = function normalizeOffset(value, length) {\n        return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n    };\n    from = function from(arrayLike, mapFunction, thisArg) {\n        if (arrayLike == null) {\n            throw new TypeError('from: requires an array-like object');\n        }\n        if (mapFunction && thisArg) {\n            mapFunction = mapFunction.bind(thisArg);\n        }\n        /* tslint:disable-next-line:variable-name */\n        const Constructor = this;\n        const length = toLength(arrayLike.length);\n        // Support extension\n        const array = typeof Constructor === 'function' ? Object(new Constructor(length)) : new Array(length);\n        if (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n            return array;\n        }\n        // if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n        // with the iteration on IE when using a NaN array length.\n        if (isArrayLike(arrayLike)) {\n            if (length === 0) {\n                return [];\n            }\n            for (let i = 0; i < arrayLike.length; i++) {\n                array[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n            }\n        }\n        else {\n            let i = 0;\n            for (const value of arrayLike) {\n                array[i] = mapFunction ? mapFunction(value, i) : value;\n                i++;\n            }\n        }\n        if (arrayLike.length !== undefined) {\n            array.length = length;\n        }\n        return array;\n    };\n    of = function of(...items) {\n        return Array.prototype.slice.call(items);\n    };\n    copyWithin = function copyWithin(target, offset, start, end) {\n        if (target == null) {\n            throw new TypeError('copyWithin: target must be an array-like object');\n        }\n        const length = toLength(target.length);\n        offset = normalizeOffset(toInteger(offset), length);\n        start = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        let count = Math.min(end - start, length - offset);\n        let direction = 1;\n        if (offset > start && offset < start + count) {\n            direction = -1;\n            start += count - 1;\n            offset += count - 1;\n        }\n        while (count > 0) {\n            if (start in target) {\n                target[offset] = target[start];\n            }\n            else {\n                delete target[offset];\n            }\n            offset += direction;\n            start += direction;\n            count--;\n        }\n        return target;\n    };\n    fill = function fill(target, value, start, end) {\n        const length = toLength(target.length);\n        let i = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        while (i < end) {\n            target[i++] = value;\n        }\n        return target;\n    };\n    find = function find(target, callback, thisArg) {\n        const index = findIndex(target, callback, thisArg);\n        return index !== -1 ? target[index] : undefined;\n    };\n    findIndex = function findIndex(target, callback, thisArg) {\n        const length = toLength(target.length);\n        if (!callback) {\n            throw new TypeError('find: second argument must be a function');\n        }\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        for (let i = 0; i < length; i++) {\n            if (callback(target[i], i, target)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\nif (true) {\n    includes = wrapNative(global.Array.prototype.includes);\n}\nelse {\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        length = Number(length);\n        if (isNaN(length)) {\n            return 0;\n        }\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    includes = function includes(target, searchElement, fromIndex = 0) {\n        let len = toLength(target.length);\n        for (let i = fromIndex; i < len; ++i) {\n            const currentElement = target[i];\n            if (searchElement === currentElement ||\n                (searchElement !== searchElement && currentElement !== currentElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n//# sourceMappingURL=array.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/array.mjs\n// module id = ./node_modules/@dojo/framework/shim/array.mjs\n// module chunks = menu","const globalObject = (function () {\n    if (typeof global !== 'undefined') {\n        // global spec defines a reference to the global object called 'global'\n        // https://github.com/tc39/proposal-global\n        // `global` is also defined in NodeJS\n        return global;\n    }\n    else if (typeof window !== 'undefined') {\n        // window is defined in browsers\n        return window;\n    }\n    else if (typeof self !== 'undefined') {\n        // self is defined in WebWorkers\n        return self;\n    }\n})();\nexport default globalObject;\n//# sourceMappingURL=global.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/global.mjs\n// module id = ./node_modules/@dojo/framework/shim/global.mjs\n// module chunks = menu","import global from './global';\n/**\n * The smallest interval between two representable numbers.\n */\nexport const EPSILON = 1;\n/**\n * The maximum safe integer in JavaScript\n */\nexport const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n/**\n * The minimum safe integer in JavaScript\n */\nexport const MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n/**\n * Determines whether the passed value is NaN without coersion.\n *\n * @param value The value to test\n * @return true if the value is NaN, false if it is not\n */\nexport function isNaN(value) {\n    return typeof value === 'number' && global.isNaN(value);\n}\n/**\n * Determines whether the passed value is a finite number without coersion.\n *\n * @param value The value to test\n * @return true if the value is finite, false if it is not\n */\nexport function isFinite(value) {\n    return typeof value === 'number' && global.isFinite(value);\n}\n/**\n * Determines whether the passed value is an integer.\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isInteger(value) {\n    return isFinite(value) && Math.floor(value) === value;\n}\n/**\n * Determines whether the passed value is an integer that is 'safe,' meaning:\n *   1. it can be expressed as an IEEE-754 double precision number\n *   2. it has a one-to-one mapping to a mathematical integer, meaning its\n *      IEEE-754 representation cannot be the result of rounding any other\n *      integer to fit the IEEE-754 representation\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isSafeInteger(value) {\n    return isInteger(value) && Math.abs(value) <= MAX_SAFE_INTEGER;\n}\n//# sourceMappingURL=number.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/number.mjs\n// module id = ./node_modules/@dojo/framework/shim/number.mjs\n// module chunks = menu","import global from './global';\nimport has from './support/has';\nimport { isSymbol } from './Symbol';\nexport let assign;\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor;\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames;\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols;\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is;\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys;\n/* ES7 Object static methods */\nexport let getOwnPropertyDescriptors;\nexport let entries;\nexport let values;\nif (true) {\n    const globalObject = global.Object;\n    assign = globalObject.assign;\n    getOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n    getOwnPropertyNames = globalObject.getOwnPropertyNames;\n    getOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n    is = globalObject.is;\n    keys = globalObject.keys;\n}\nelse {\n    keys = function symbolAwareKeys(o) {\n        return Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    assign = function assign(target, ...sources) {\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        const to = Object(target);\n        sources.forEach((nextSource) => {\n            if (nextSource) {\n                // Skip over if undefined or null\n                keys(nextSource).forEach((nextKey) => {\n                    to[nextKey] = nextSource[nextKey];\n                });\n            }\n        });\n        return to;\n    };\n    getOwnPropertyDescriptor = function getOwnPropertyDescriptor(o, prop) {\n        if (isSymbol(prop)) {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n        else {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n    };\n    getOwnPropertyNames = function getOwnPropertyNames(o) {\n        return Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return Object.getOwnPropertyNames(o)\n            .filter((key) => Boolean(key.match(/^@@.+/)))\n            .map((key) => Symbol.for(key.substring(2)));\n    };\n    is = function is(value1, value2) {\n        if (value1 === value2) {\n            return value1 !== 0 || 1 / value1 === 1 / value2; // -0\n        }\n        return value1 !== value1 && value2 !== value2; // NaN\n    };\n}\nif (true) {\n    const globalObject = global.Object;\n    getOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n    entries = globalObject.entries;\n    values = globalObject.values;\n}\nelse {\n    getOwnPropertyDescriptors = function getOwnPropertyDescriptors(o) {\n        return getOwnPropertyNames(o).reduce((previous, key) => {\n            previous[key] = getOwnPropertyDescriptor(o, key);\n            return previous;\n        }, {});\n    };\n    entries = function entries(o) {\n        return keys(o).map((key) => [key, o[key]]);\n    };\n    values = function values(o) {\n        return keys(o).map((key) => o[key]);\n    };\n}\n//# sourceMappingURL=object.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/object.mjs\n// module id = ./node_modules/@dojo/framework/shim/object.mjs\n// module chunks = menu","import global from './global';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n/* ES6 static methods */\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint;\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw;\n/* ES6 instance methods */\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith;\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes;\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize;\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith;\n/* ES7 instance methods */\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd;\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart;\nif (true && true) {\n    fromCodePoint = global.String.fromCodePoint;\n    raw = global.String.raw;\n    codePointAt = wrapNative(global.String.prototype.codePointAt);\n    endsWith = wrapNative(global.String.prototype.endsWith);\n    includes = wrapNative(global.String.prototype.includes);\n    normalize = wrapNative(global.String.prototype.normalize);\n    repeat = wrapNative(global.String.prototype.repeat);\n    startsWith = wrapNative(global.String.prototype.startsWith);\n}\nelse {\n    /**\n     * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n     * Used by startsWith, includes, and endsWith.\n     *\n     * @return Normalized position.\n     */\n    const normalizeSubstringArgs = function (name, text, search, position, isEnd = false) {\n        if (text == null) {\n            throw new TypeError('string.' + name + ' requires a valid string to search against.');\n        }\n        const length = text.length;\n        position = position !== position ? (isEnd ? length : 0) : position;\n        return [text, String(search), Math.min(Math.max(position, 0), length)];\n    };\n    fromCodePoint = function fromCodePoint(...codePoints) {\n        // Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n        const length = arguments.length;\n        if (!length) {\n            return '';\n        }\n        const fromCharCode = String.fromCharCode;\n        const MAX_SIZE = 0x4000;\n        let codeUnits = [];\n        let index = -1;\n        let result = '';\n        while (++index < length) {\n            let codePoint = Number(arguments[index]);\n            // Code points must be finite integers within the valid range\n            let isValid = isFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n            if (!isValid) {\n                throw RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            }\n            else {\n                // Astral code point; split in surrogate halves\n                // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                let highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n                let lowSurrogate = codePoint % 0x400 + LOW_SURROGATE_MIN;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += fromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n    raw = function raw(callSite, ...substitutions) {\n        let rawStrings = callSite.raw;\n        let result = '';\n        let numSubstitutions = substitutions.length;\n        if (callSite == null || callSite.raw == null) {\n            throw new TypeError('string.raw requires a valid callSite object with a raw value');\n        }\n        for (let i = 0, length = rawStrings.length; i < length; i++) {\n            result += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n        }\n        return result;\n    };\n    codePointAt = function codePointAt(text, position = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n        if (text == null) {\n            throw new TypeError('string.codePointAt requries a valid string.');\n        }\n        const length = text.length;\n        if (position !== position) {\n            position = 0;\n        }\n        if (position < 0 || position >= length) {\n            return undefined;\n        }\n        // Get the first code unit\n        const first = text.charCodeAt(position);\n        if (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n            // Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n            // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            const second = text.charCodeAt(position + 1);\n            if (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n                return (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n            }\n        }\n        return first;\n    };\n    endsWith = function endsWith(text, search, endPosition) {\n        if (endPosition == null) {\n            endPosition = text.length;\n        }\n        [text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n        const start = endPosition - search.length;\n        if (start < 0) {\n            return false;\n        }\n        return text.slice(start, endPosition) === search;\n    };\n    includes = function includes(text, search, position = 0) {\n        [text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n        return text.indexOf(search, position) !== -1;\n    };\n    repeat = function repeat(text, count = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n        if (text == null) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (count !== count) {\n            count = 0;\n        }\n        if (count < 0 || count === Infinity) {\n            throw new RangeError('string.repeat requires a non-negative finite count.');\n        }\n        let result = '';\n        while (count) {\n            if (count % 2) {\n                result += text;\n            }\n            if (count > 1) {\n                text += text;\n            }\n            count >>= 1;\n        }\n        return result;\n    };\n    startsWith = function startsWith(text, search, position = 0) {\n        search = String(search);\n        [text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n        const end = position + search.length;\n        if (end > text.length) {\n            return false;\n        }\n        return text.slice(position, end) === search;\n    };\n}\nif (true) {\n    padEnd = wrapNative(global.String.prototype.padEnd);\n    padStart = wrapNative(global.String.prototype.padStart);\n}\nelse {\n    padEnd = function padEnd(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padEnd requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText +=\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length);\n        }\n        return strText;\n    };\n    padStart = function padStart(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padStart requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText =\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length) +\n                    strText;\n        }\n        return strText;\n    };\n}\n//# sourceMappingURL=string.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/string.mjs\n// module id = ./node_modules/@dojo/framework/shim/string.mjs\n// module chunks = menu","import has, { add } from '../../has/has';\nimport global from '../global';\nexport default has;\nexport * from '../../has/has';\n/* ECMAScript 6 and 7 Features */\n/* Array */\nadd('es6-array', () => {\n    return (['from', 'of'].every((key) => key in global.Array) &&\n        ['findIndex', 'find', 'copyWithin'].every((key) => key in global.Array.prototype));\n}, true);\nadd('es6-array-fill', () => {\n    if ('fill' in global.Array.prototype) {\n        /* Some versions of Safari do not properly implement this */\n        return [1].fill(9, Number.POSITIVE_INFINITY)[0] === 1;\n    }\n    return false;\n}, true);\nadd('es7-array', () => 'includes' in global.Array.prototype, true);\n/* Map */\nadd('es6-map', () => {\n    if (typeof global.Map === 'function') {\n        /*\n    IE11 and older versions of Safari are missing critical ES6 Map functionality\n    We wrap this in a try/catch because sometimes the Map constructor exists, but does not\n    take arguments (iOS 8.4)\n     */\n        try {\n            const map = new global.Map([[0, 1]]);\n            return map.has(0) &&\n                typeof map.keys === 'function' &&\n                true &&\n                typeof map.values === 'function' &&\n                typeof map.entries === 'function';\n        }\n        catch (e) {\n            /* istanbul ignore next: not testing on iOS at the moment */\n            return false;\n        }\n    }\n    return false;\n}, true);\n/* Math */\nadd('es6-math', () => {\n    return [\n        'clz32',\n        'sign',\n        'log10',\n        'log2',\n        'log1p',\n        'expm1',\n        'cosh',\n        'sinh',\n        'tanh',\n        'acosh',\n        'asinh',\n        'atanh',\n        'trunc',\n        'fround',\n        'cbrt',\n        'hypot'\n    ].every((name) => typeof global.Math[name] === 'function');\n}, true);\nadd('es6-math-imul', () => {\n    if ('imul' in global.Math) {\n        /* Some versions of Safari on ios do not properly implement this */\n        return Math.imul(0xffffffff, 5) === -5;\n    }\n    return false;\n}, true);\n/* Object */\nadd('es6-object', () => {\n    return true &&\n        ['assign', 'is', 'getOwnPropertySymbols', 'setPrototypeOf'].every((name) => typeof global.Object[name] === 'function');\n}, true);\nadd('es2017-object', () => {\n    return ['values', 'entries', 'getOwnPropertyDescriptors'].every((name) => typeof global.Object[name] === 'function');\n}, true);\n/* Observable */\nadd('es-observable', () => typeof global.Observable !== 'undefined', true);\n/* Promise */\nadd('es6-promise', () => typeof global.Promise !== 'undefined' && true, true);\n/* Set */\nadd('es6-set', () => {\n    if (typeof global.Set === 'function') {\n        /* IE11 and older versions of Safari are missing critical ES6 Set functionality */\n        const set = new global.Set([1]);\n        return set.has(1) && 'keys' in set && typeof set.keys === 'function' && true;\n    }\n    return false;\n}, true);\n/* String */\nadd('es6-string', () => {\n    return ([\n        /* static methods */\n        'fromCodePoint'\n    ].every((key) => typeof global.String[key] === 'function') &&\n        [\n            /* instance methods */\n            'codePointAt',\n            'normalize',\n            'repeat',\n            'startsWith',\n            'endsWith',\n            'includes'\n        ].every((key) => typeof global.String.prototype[key] === 'function'));\n}, true);\nadd('es6-string-raw', () => {\n    function getCallSite(callSite, ...substitutions) {\n        const result = [...callSite];\n        result.raw = callSite.raw;\n        return result;\n    }\n    if ('raw' in global.String) {\n        let b = 1;\n        let callSite = getCallSite `a\\n${b}`;\n        callSite.raw = ['a\\\\n'];\n        const supportsTrunc = global.String.raw(callSite, 42) === 'a:\\\\n';\n        return supportsTrunc;\n    }\n    return false;\n}, true);\nadd('es2017-string', () => {\n    return ['padStart', 'padEnd'].every((key) => typeof global.String.prototype[key] === 'function');\n}, true);\n/* Symbol */\nadd('es6-symbol', () => typeof global.Symbol !== 'undefined' && typeof Symbol() === 'symbol', true);\n/* WeakMap */\nadd('es6-weakmap', () => {\n    if (typeof global.WeakMap !== 'undefined') {\n        /* IE11 and older versions of Safari are missing critical ES6 Map functionality */\n        const key1 = {};\n        const key2 = {};\n        const map = new global.WeakMap([[key1, 1]]);\n        Object.freeze(key1);\n        return map.get(key1) === 1 && map.set(key2, 2) === map && true;\n    }\n    return false;\n}, true);\n/* Miscellaneous features */\nadd('microtasks', () => true || false || true, true);\nadd('postmessage', () => {\n    // If window is undefined, and we have postMessage, it probably means we're in a web worker. Web workers have\n    // post message but it doesn't work how we expect it to, so it's best just to pretend it doesn't exist.\n    return typeof global.window !== 'undefined' && typeof global.postMessage === 'function';\n}, true);\nadd('raf', () => typeof global.requestAnimationFrame === 'function', true);\nadd('setimmediate', () => typeof global.setImmediate !== 'undefined', true);\n/* DOM Features */\nadd('dom-mutationobserver', () => {\n    if (true && Boolean(global.MutationObserver || global.WebKitMutationObserver)) {\n        // IE11 has an unreliable MutationObserver implementation where setProperty() does not\n        // generate a mutation event, observers can crash, and the queue does not drain\n        // reliably. The following feature test was adapted from\n        // https://gist.github.com/t10ko/4aceb8c71681fdb275e33efe5e576b14\n        const example = document.createElement('div');\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const observer = new HostMutationObserver(function () { });\n        observer.observe(example, { attributes: true });\n        example.style.setProperty('display', 'block');\n        return Boolean(observer.takeRecords().length);\n    }\n    return false;\n}, true);\nadd('dom-webanimation', () => true && global.Animation !== undefined && global.KeyframeEffect !== undefined, true);\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/has.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/has.mjs\n// module chunks = menu","import global from '../global';\nimport has from './has';\nfunction executeTask(item) {\n    if (item && item.isActive && item.callback) {\n        item.callback();\n    }\n}\nfunction getQueueHandle(item, destructor) {\n    return {\n        destroy: function () {\n            this.destroy = function () { };\n            item.isActive = false;\n            item.callback = null;\n            if (destructor) {\n                destructor();\n            }\n        }\n    };\n}\nlet checkMicroTaskQueue;\nlet microTasks;\n/**\n * Schedules a callback to the macrotask queue.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueTask = (function () {\n    let destructor;\n    let enqueue;\n    // Since the IE implementation of `setImmediate` is not flawless, we will test for `postMessage` first.\n    if (true) {\n        const queue = [];\n        global.addEventListener('message', function (event) {\n            // Confirm that the event was triggered by the current window and by this particular implementation.\n            if (event.source === global && event.data === 'dojo-queue-message') {\n                event.stopPropagation();\n                if (queue.length) {\n                    executeTask(queue.shift());\n                }\n            }\n        });\n        enqueue = function (item) {\n            queue.push(item);\n            global.postMessage('dojo-queue-message', '*');\n        };\n    }\n    else if (false) {\n        destructor = global.clearImmediate;\n        enqueue = function (item) {\n            return setImmediate(executeTask.bind(null, item));\n        };\n    }\n    else {\n        destructor = global.clearTimeout;\n        enqueue = function (item) {\n            return setTimeout(executeTask.bind(null, item), 0);\n        };\n    }\n    function queueTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const id = enqueue(item);\n        return getQueueHandle(item, destructor &&\n            function () {\n                destructor(id);\n            });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueTask(callback);\n        };\n})();\n// When no mechanism for registering microtasks is exposed by the environment, microtasks will\n// be queued and then executed in a single macrotask before the other macrotasks are executed.\nif (!true) {\n    let isMicroTaskQueued = false;\n    microTasks = [];\n    checkMicroTaskQueue = function () {\n        if (!isMicroTaskQueued) {\n            isMicroTaskQueued = true;\n            queueTask(function () {\n                isMicroTaskQueued = false;\n                if (microTasks.length) {\n                    let item;\n                    while ((item = microTasks.shift())) {\n                        executeTask(item);\n                    }\n                }\n            });\n        }\n    };\n}\n/**\n * Schedules an animation task with `window.requestAnimationFrame` if it exists, or with `queueTask` otherwise.\n *\n * Since requestAnimationFrame's behavior does not match that expected from `queueTask`, it is not used there.\n * However, at times it makes more sense to delegate to requestAnimationFrame; hence the following method.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueAnimationTask = (function () {\n    if (!true) {\n        return queueTask;\n    }\n    function queueAnimationTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const rafId = requestAnimationFrame(executeTask.bind(null, item));\n        return getQueueHandle(item, function () {\n            cancelAnimationFrame(rafId);\n        });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueAnimationTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueAnimationTask(callback);\n        };\n})();\n/**\n * Schedules a callback to the microtask queue.\n *\n * Any callbacks registered with `queueMicroTask` will be executed before the next macrotask. If no native\n * mechanism for scheduling macrotasks is exposed, then any callbacks will be fired before any macrotask\n * registered with `queueTask` or `queueAnimationTask`.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport let queueMicroTask = (function () {\n    let enqueue;\n    if (false) {\n        enqueue = function (item) {\n            global.process.nextTick(executeTask.bind(null, item));\n        };\n    }\n    else if (true) {\n        enqueue = function (item) {\n            global.Promise.resolve(item).then(executeTask);\n        };\n    }\n    else if (true) {\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const node = document.createElement('div');\n        const queue = [];\n        const observer = new HostMutationObserver(function () {\n            while (queue.length > 0) {\n                const item = queue.shift();\n                if (item && item.isActive && item.callback) {\n                    item.callback();\n                }\n            }\n        });\n        observer.observe(node, { attributes: true });\n        enqueue = function (item) {\n            queue.push(item);\n            node.setAttribute('queueStatus', '1');\n        };\n    }\n    else {\n        enqueue = function (item) {\n            checkMicroTaskQueue();\n            microTasks.push(item);\n        };\n    }\n    return function (callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        enqueue(item);\n        return getQueueHandle(item);\n    };\n})();\n//# sourceMappingURL=queue.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/queue.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/queue.mjs\n// module chunks = menu","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor(value, enumerable = false, writable = true, configurable = true) {\n    return {\n        value: value,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: configurable\n    };\n}\nexport function wrapNative(nativeFunction) {\n    return function (target, ...args) {\n        return nativeFunction.apply(target, args);\n    };\n}\n//# sourceMappingURL=util.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/util.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/util.mjs\n// module chunks = menu","import { Evented } from '../core/Evented';\nexport class Injector extends Evented {\n    constructor(payload) {\n        super();\n        this._payload = payload;\n    }\n    setInvalidator(invalidator) {\n        this._invalidator = invalidator;\n    }\n    get() {\n        return this._payload;\n    }\n    set(payload) {\n        this._payload = payload;\n        if (this._invalidator) {\n            this._invalidator();\n        }\n    }\n}\nexport default Injector;\n//# sourceMappingURL=Injector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/Injector.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/Injector.mjs\n// module chunks = menu","import { Evented } from '../core/Evented';\nimport Map from '../shim/Map';\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport var NodeEventType;\n(function (NodeEventType) {\n    NodeEventType[\"Projector\"] = \"Projector\";\n    NodeEventType[\"Widget\"] = \"Widget\";\n})(NodeEventType || (NodeEventType = {}));\nexport class NodeHandler extends Evented {\n    constructor() {\n        super(...arguments);\n        this._nodeMap = new Map();\n    }\n    get(key) {\n        return this._nodeMap.get(key);\n    }\n    has(key) {\n        return this._nodeMap.has(key);\n    }\n    add(element, key) {\n        this._nodeMap.set(key, element);\n        this.emit({ type: key });\n    }\n    addRoot() {\n        this.emit({ type: NodeEventType.Widget });\n    }\n    addProjector() {\n        this.emit({ type: NodeEventType.Projector });\n    }\n    clear() {\n        this._nodeMap.clear();\n    }\n}\nexport default NodeHandler;\n//# sourceMappingURL=NodeHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/NodeHandler.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/NodeHandler.mjs\n// module chunks = menu","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport Symbol from '../shim/Symbol';\nimport { Evented } from '../core/Evented';\n/**\n * Widget base symbol type\n */\nexport const WIDGET_BASE_TYPE = Symbol('Widget Base');\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor(item) {\n    return Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\nexport function isWidgetConstructorDefaultExport(item) {\n    return Boolean(item &&\n        item.hasOwnProperty('__esModule') &&\n        item.hasOwnProperty('default') &&\n        isWidgetBaseConstructor(item.default));\n}\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented {\n    /**\n     * Emit loaded event for registry label\n     */\n    emitLoadedEvent(widgetLabel, item) {\n        this.emit({\n            type: widgetLabel,\n            action: 'loaded',\n            item\n        });\n    }\n    define(label, item) {\n        if (this._widgetRegistry === undefined) {\n            this._widgetRegistry = new Map();\n        }\n        if (this._widgetRegistry.has(label)) {\n            throw new Error(`widget has already been registered for '${label.toString()}'`);\n        }\n        this._widgetRegistry.set(label, item);\n        if (item instanceof Promise) {\n            item.then((widgetCtor) => {\n                this._widgetRegistry.set(label, widgetCtor);\n                this.emitLoadedEvent(label, widgetCtor);\n                return widgetCtor;\n            }, (error) => {\n                throw error;\n            });\n        }\n        else if (isWidgetBaseConstructor(item)) {\n            this.emitLoadedEvent(label, item);\n        }\n    }\n    defineInjector(label, injectorFactory) {\n        if (this._injectorRegistry === undefined) {\n            this._injectorRegistry = new Map();\n        }\n        if (this._injectorRegistry.has(label)) {\n            throw new Error(`injector has already been registered for '${label.toString()}'`);\n        }\n        const invalidator = new Evented();\n        const injectorItem = {\n            injector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n            invalidator\n        };\n        this._injectorRegistry.set(label, injectorItem);\n        this.emitLoadedEvent(label, injectorItem);\n    }\n    get(label) {\n        if (!this._widgetRegistry || !this.has(label)) {\n            return null;\n        }\n        const item = this._widgetRegistry.get(label);\n        if (isWidgetBaseConstructor(item)) {\n            return item;\n        }\n        if (item instanceof Promise) {\n            return null;\n        }\n        const promise = item();\n        this._widgetRegistry.set(label, promise);\n        promise.then((widgetCtor) => {\n            if (isWidgetConstructorDefaultExport(widgetCtor)) {\n                widgetCtor = widgetCtor.default;\n            }\n            this._widgetRegistry.set(label, widgetCtor);\n            this.emitLoadedEvent(label, widgetCtor);\n            return widgetCtor;\n        }, (error) => {\n            throw error;\n        });\n        return null;\n    }\n    getInjector(label) {\n        if (!this._injectorRegistry || !this.hasInjector(label)) {\n            return null;\n        }\n        return this._injectorRegistry.get(label);\n    }\n    has(label) {\n        return Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n    }\n    hasInjector(label) {\n        return Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n    }\n}\nexport default Registry;\n//# sourceMappingURL=Registry.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/Registry.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/Registry.mjs\n// module chunks = menu","import { Map } from '../shim/Map';\nimport { Evented } from '../core/Evented';\nimport { Registry } from './Registry';\nexport class RegistryHandler extends Evented {\n    constructor() {\n        super();\n        this._registry = new Registry();\n        this._registryWidgetLabelMap = new Map();\n        this._registryInjectorLabelMap = new Map();\n        this.own(this._registry);\n        const destroy = () => {\n            if (this.baseRegistry) {\n                this._registryWidgetLabelMap.delete(this.baseRegistry);\n                this._registryInjectorLabelMap.delete(this.baseRegistry);\n                this.baseRegistry = undefined;\n            }\n        };\n        this.own({ destroy });\n    }\n    set base(baseRegistry) {\n        if (this.baseRegistry) {\n            this._registryWidgetLabelMap.delete(this.baseRegistry);\n            this._registryInjectorLabelMap.delete(this.baseRegistry);\n        }\n        this.baseRegistry = baseRegistry;\n    }\n    define(label, widget) {\n        this._registry.define(label, widget);\n    }\n    defineInjector(label, injector) {\n        this._registry.defineInjector(label, injector);\n    }\n    has(label) {\n        return this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n    }\n    hasInjector(label) {\n        return this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n    }\n    get(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n    }\n    getInjector(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n    }\n    _get(label, globalPrecedence, getFunctionName, labelMap) {\n        const registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n        for (let i = 0; i < registries.length; i++) {\n            const registry = registries[i];\n            if (!registry) {\n                continue;\n            }\n            const item = registry[getFunctionName](label);\n            const registeredLabels = labelMap.get(registry) || [];\n            if (item) {\n                return item;\n            }\n            else if (registeredLabels.indexOf(label) === -1) {\n                const handle = registry.on(label, (event) => {\n                    if (event.action === 'loaded' &&\n                        this[getFunctionName](label, globalPrecedence) === event.item) {\n                        this.emit({ type: 'invalidate' });\n                    }\n                });\n                this.own(handle);\n                labelMap.set(registry, [...registeredLabels, label]);\n            }\n        }\n        return null;\n    }\n}\nexport default RegistryHandler;\n//# sourceMappingURL=RegistryHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs\n// module chunks = menu","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport Symbol from '../shim/Symbol';\nimport { v } from './d';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { widgetInstanceMap } from './vdom';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nconst decoratorMap = new Map();\nconst boundAuto = auto.bind(null);\nexport const noBind = Symbol.for('dojoNoBind');\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Indicates if it is the initial set properties cycle\n         */\n        this._initialProperties = true;\n        /**\n         * Array of property keys considered changed from the previous set properties\n         */\n        this._changedPropertyKeys = [];\n        this._nodeHandler = new NodeHandler();\n        this._handles = [];\n        this._children = [];\n        this._decoratorCache = new Map();\n        this._properties = {};\n        this._boundRenderFunc = this.render.bind(this);\n        this._boundInvalidate = this.invalidate.bind(this);\n        widgetInstanceMap.set(this, {\n            dirty: true,\n            onAttach: () => {\n                this.onAttach();\n            },\n            onDetach: () => {\n                this.onDetach();\n                this.destroy();\n            },\n            nodeHandler: this._nodeHandler,\n            registry: () => {\n                return this.registry;\n            },\n            coreProperties: {},\n            rendering: false,\n            inputProperties: {}\n        });\n        this._runAfterConstructors();\n    }\n    meta(MetaType) {\n        if (this._metaMap === undefined) {\n            this._metaMap = new Map();\n        }\n        let cached = this._metaMap.get(MetaType);\n        if (!cached) {\n            cached = new MetaType({\n                invalidate: this._boundInvalidate,\n                nodeHandler: this._nodeHandler,\n                bind: this\n            });\n            this.own(cached);\n            this._metaMap.set(MetaType, cached);\n        }\n        return cached;\n    }\n    onAttach() {\n        // Do nothing by default.\n    }\n    onDetach() {\n        // Do nothing by default.\n    }\n    get properties() {\n        return this._properties;\n    }\n    get changedPropertyKeys() {\n        return [...this._changedPropertyKeys];\n    }\n    __setCoreProperties__(coreProperties) {\n        const { baseRegistry } = coreProperties;\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData.coreProperties.baseRegistry !== baseRegistry) {\n            if (this._registry === undefined) {\n                this._registry = new RegistryHandler();\n                this.own(this._registry);\n                this.own(this._registry.on('invalidate', this._boundInvalidate));\n            }\n            this._registry.base = baseRegistry;\n            this.invalidate();\n        }\n        instanceData.coreProperties = coreProperties;\n    }\n    __setProperties__(originalProperties) {\n        const instanceData = widgetInstanceMap.get(this);\n        instanceData.inputProperties = originalProperties;\n        const properties = this._runBeforeProperties(originalProperties);\n        const registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n        const changedPropertyKeys = [];\n        const propertyNames = Object.keys(properties);\n        if (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n            const allProperties = [...propertyNames, ...Object.keys(this._properties)];\n            const checkedProperties = [];\n            const diffPropertyResults = {};\n            let runReactions = false;\n            for (let i = 0; i < allProperties.length; i++) {\n                const propertyName = allProperties[i];\n                if (checkedProperties.indexOf(propertyName) !== -1) {\n                    continue;\n                }\n                checkedProperties.push(propertyName);\n                const previousProperty = this._properties[propertyName];\n                const newProperty = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n                if (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n                    runReactions = true;\n                    const diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n                    for (let i = 0; i < diffFunctions.length; i++) {\n                        const result = diffFunctions[i](previousProperty, newProperty);\n                        if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                            changedPropertyKeys.push(propertyName);\n                        }\n                        if (propertyName in properties) {\n                            diffPropertyResults[propertyName] = result.value;\n                        }\n                    }\n                }\n                else {\n                    const result = boundAuto(previousProperty, newProperty);\n                    if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                        changedPropertyKeys.push(propertyName);\n                    }\n                    if (propertyName in properties) {\n                        diffPropertyResults[propertyName] = result.value;\n                    }\n                }\n            }\n            if (runReactions) {\n                const reactionFunctions = this.getDecorator('diffReaction');\n                const executedReactions = [];\n                reactionFunctions.forEach(({ reaction, propertyName }) => {\n                    const propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n                    const reactionRun = executedReactions.indexOf(reaction) !== -1;\n                    if (propertyChanged && !reactionRun) {\n                        reaction.call(this, this._properties, diffPropertyResults);\n                        executedReactions.push(reaction);\n                    }\n                });\n            }\n            this._properties = diffPropertyResults;\n            this._changedPropertyKeys = changedPropertyKeys;\n        }\n        else {\n            this._initialProperties = false;\n            for (let i = 0; i < propertyNames.length; i++) {\n                const propertyName = propertyNames[i];\n                if (typeof properties[propertyName] === 'function') {\n                    properties[propertyName] = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n                }\n                else {\n                    changedPropertyKeys.push(propertyName);\n                }\n            }\n            this._changedPropertyKeys = changedPropertyKeys;\n            this._properties = Object.assign({}, properties);\n        }\n        if (this._changedPropertyKeys.length > 0) {\n            this.invalidate();\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    __setChildren__(children) {\n        if (this._children.length > 0 || children.length > 0) {\n            this._children = children;\n            this.invalidate();\n        }\n    }\n    __render__() {\n        const instanceData = widgetInstanceMap.get(this);\n        instanceData.dirty = false;\n        const render = this._runBeforeRenders();\n        let dNode = render();\n        dNode = this.runAfterRenders(dNode);\n        this._nodeHandler.clear();\n        return dNode;\n    }\n    invalidate() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData.invalidate) {\n            instanceData.invalidate();\n        }\n    }\n    render() {\n        return v('div', {}, this.children);\n    }\n    /**\n     * Function to add decorators to WidgetBase\n     *\n     * @param decoratorKey The key of the decorator\n     * @param value The value of the decorator\n     */\n    addDecorator(decoratorKey, value) {\n        value = Array.isArray(value) ? value : [value];\n        if (this.hasOwnProperty('constructor')) {\n            let decoratorList = decoratorMap.get(this.constructor);\n            if (!decoratorList) {\n                decoratorList = new Map();\n                decoratorMap.set(this.constructor, decoratorList);\n            }\n            let specificDecoratorList = decoratorList.get(decoratorKey);\n            if (!specificDecoratorList) {\n                specificDecoratorList = [];\n                decoratorList.set(decoratorKey, specificDecoratorList);\n            }\n            specificDecoratorList.push(...value);\n        }\n        else {\n            const decorators = this.getDecorator(decoratorKey);\n            this._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n        }\n    }\n    /**\n     * Function to build the list of decorators from the global decorator map.\n     *\n     * @param decoratorKey  The key of the decorator\n     * @return An array of decorator values\n     * @private\n     */\n    _buildDecoratorList(decoratorKey) {\n        const allDecorators = [];\n        let constructor = this.constructor;\n        while (constructor) {\n            const instanceMap = decoratorMap.get(constructor);\n            if (instanceMap) {\n                const decorators = instanceMap.get(decoratorKey);\n                if (decorators) {\n                    allDecorators.unshift(...decorators);\n                }\n            }\n            constructor = Object.getPrototypeOf(constructor);\n        }\n        return allDecorators;\n    }\n    /**\n     * Function to retrieve decorator values\n     *\n     * @param decoratorKey The key of the decorator\n     * @returns An array of decorator values\n     */\n    getDecorator(decoratorKey) {\n        let allDecorators = this._decoratorCache.get(decoratorKey);\n        if (allDecorators !== undefined) {\n            return allDecorators;\n        }\n        allDecorators = this._buildDecoratorList(decoratorKey);\n        this._decoratorCache.set(decoratorKey, allDecorators);\n        return allDecorators;\n    }\n    /**\n     * Binds unbound property functions to the specified `bind` property\n     *\n     * @param properties properties to check for functions\n     */\n    _bindFunctionProperty(property, bind) {\n        if (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n            if (this._bindFunctionPropertyMap === undefined) {\n                this._bindFunctionPropertyMap = new WeakMap();\n            }\n            const bindInfo = this._bindFunctionPropertyMap.get(property) || {};\n            let { boundFunc, scope } = bindInfo;\n            if (boundFunc === undefined || scope !== bind) {\n                boundFunc = property.bind(bind);\n                this._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n            }\n            return boundFunc;\n        }\n        return property;\n    }\n    get registry() {\n        if (this._registry === undefined) {\n            this._registry = new RegistryHandler();\n            this.own(this._registry);\n            this.own(this._registry.on('invalidate', this._boundInvalidate));\n        }\n        return this._registry;\n    }\n    _runBeforeProperties(properties) {\n        const beforeProperties = this.getDecorator('beforeProperties');\n        if (beforeProperties.length > 0) {\n            return beforeProperties.reduce((properties, beforePropertiesFunction) => {\n                return Object.assign({}, properties, beforePropertiesFunction.call(this, properties));\n            }, Object.assign({}, properties));\n        }\n        return properties;\n    }\n    /**\n     * Run all registered before renders and return the updated render method\n     */\n    _runBeforeRenders() {\n        const beforeRenders = this.getDecorator('beforeRender');\n        if (beforeRenders.length > 0) {\n            return beforeRenders.reduce((render, beforeRenderFunction) => {\n                const updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n                if (!updatedRender) {\n                    console.warn('Render function not returned from beforeRender, using previous render');\n                    return render;\n                }\n                return updatedRender;\n            }, this._boundRenderFunc);\n        }\n        return this._boundRenderFunc;\n    }\n    /**\n     * Run all registered after renders and return the decorated DNodes\n     *\n     * @param dNode The DNodes to run through the after renders\n     */\n    runAfterRenders(dNode) {\n        const afterRenders = this.getDecorator('afterRender');\n        if (afterRenders.length > 0) {\n            dNode = afterRenders.reduce((dNode, afterRenderFunction) => {\n                return afterRenderFunction.call(this, dNode);\n            }, dNode);\n        }\n        if (this._metaMap !== undefined) {\n            this._metaMap.forEach((meta) => {\n                meta.afterRender();\n            });\n        }\n        return dNode;\n    }\n    _runAfterConstructors() {\n        const afterConstructors = this.getDecorator('afterConstructor');\n        if (afterConstructors.length > 0) {\n            afterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n        }\n    }\n    own(handle) {\n        this._handles.push(handle);\n    }\n    destroy() {\n        while (this._handles.length > 0) {\n            const handle = this._handles.pop();\n            if (handle) {\n                handle.destroy();\n            }\n        }\n    }\n}\n/**\n * static identifier\n */\nWidgetBase._type = WIDGET_BASE_TYPE;\nexport default WidgetBase;\n//# sourceMappingURL=WidgetBase.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/WidgetBase.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/WidgetBase.mjs\n// module chunks = menu","let browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\nfunction determineBrowserStyleNames(element) {\n    if ('WebkitTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n        browserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n    }\n    else if ('transition' in element.style || 'MozTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'transitionend';\n        browserSpecificAnimationEndEventName = 'animationend';\n    }\n    else {\n        throw new Error('Your browser is not supported');\n    }\n}\nfunction initialize(element) {\n    if (browserSpecificAnimationEndEventName === '') {\n        determineBrowserStyleNames(element);\n    }\n}\nfunction runAndCleanUp(element, startAnimation, finishAnimation) {\n    initialize(element);\n    let finished = false;\n    let transitionEnd = function () {\n        if (!finished) {\n            finished = true;\n            element.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n            element.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n            finishAnimation();\n        }\n    };\n    startAnimation();\n    element.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n    element.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\nfunction exit(node, properties, exitAnimation, removeNode) {\n    const activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(exitAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        removeNode();\n    });\n}\nfunction enter(node, properties, enterAnimation) {\n    const activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(enterAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        node.classList.remove(enterAnimation);\n        node.classList.remove(activeClass);\n    });\n}\nexport default {\n    enter,\n    exit\n};\n//# sourceMappingURL=cssTransitions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs\n// module chunks = menu","import Symbol from '../shim/Symbol';\n/**\n * The symbol identifier for a WNode type\n */\nexport const WNODE = Symbol('Identifier for a WNode.');\n/**\n * The symbol identifier for a VNode type\n */\nexport const VNODE = Symbol('Identifier for a VNode.');\n/**\n * The symbol identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = Symbol('Identifier for a VNode created using existing dom.');\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === WNODE);\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child) {\n    return Boolean(child && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE));\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === DOMVNODE);\n}\nexport function isElementNode(value) {\n    return !!value.tagName;\n}\nexport function decorate(dNodes, optionsOrModifier, predicate) {\n    let shallow = false;\n    let modifier;\n    if (typeof optionsOrModifier === 'function') {\n        modifier = optionsOrModifier;\n    }\n    else {\n        modifier = optionsOrModifier.modifier;\n        predicate = optionsOrModifier.predicate;\n        shallow = optionsOrModifier.shallow || false;\n    }\n    let nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n    function breaker() {\n        nodes = [];\n    }\n    while (nodes.length) {\n        const node = nodes.shift();\n        if (node) {\n            if (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n                nodes = [...nodes, ...node.children];\n            }\n            if (!predicate || predicate(node)) {\n                modifier(node, breaker);\n            }\n        }\n    }\n    return dNodes;\n}\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w(widgetConstructor, properties, children = []) {\n    return {\n        children,\n        widgetConstructor,\n        properties,\n        type: WNODE\n    };\n}\nexport function v(tag, propertiesOrChildren = {}, children = undefined) {\n    let properties = propertiesOrChildren;\n    let deferredPropertiesCallback;\n    if (Array.isArray(propertiesOrChildren)) {\n        children = propertiesOrChildren;\n        properties = {};\n    }\n    if (typeof properties === 'function') {\n        deferredPropertiesCallback = properties;\n        properties = {};\n    }\n    return {\n        tag,\n        deferredPropertiesCallback,\n        children,\n        properties,\n        type: VNODE\n    };\n}\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom({ node, attrs = {}, props = {}, on = {}, diffType = 'none' }, children) {\n    return {\n        tag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n        properties: props,\n        attributes: attrs,\n        events: on,\n        children,\n        type: DOMVNODE,\n        domNode: node,\n        text: isElementNode(node) ? undefined : node.data,\n        diffType\n    };\n}\n//# sourceMappingURL=d.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/d.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/d.mjs\n// module chunks = menu","import { handleDecorator } from './handleDecorator';\nexport function afterRender(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('afterRender', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default afterRender;\n//# sourceMappingURL=afterRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/afterRender.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/afterRender.mjs\n// module chunks = menu","import { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nexport function alwaysRender() {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function () {\n            this.invalidate();\n        })(target);\n    });\n}\nexport default alwaysRender;\n//# sourceMappingURL=alwaysRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs\n// module chunks = menu","import { handleDecorator } from './handleDecorator';\nexport function beforeProperties(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default beforeProperties;\n//# sourceMappingURL=beforeProperties.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs\n// module chunks = menu","import { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement({ tag, properties = [], attributes = [], events = [], childType = CustomElementChildType.DOJO, registryFactory = () => new Registry() }) {\n    return function (target) {\n        target.prototype.__customElementDescriptor = {\n            tagName: tag,\n            attributes,\n            properties,\n            events,\n            childType,\n            registryFactory\n        };\n    };\n}\nexport default customElement;\n//# sourceMappingURL=customElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs\n// module chunks = menu","import { handleDecorator } from './handleDecorator';\nimport { auto } from './../diff';\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(propertyName, diffFunction = auto, reactionFunction) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n        target.addDecorator('registeredDiffProperty', propertyName);\n        if (reactionFunction || propertyKey) {\n            target.addDecorator('diffReaction', {\n                propertyName,\n                reaction: propertyKey ? target[propertyKey] : reactionFunction\n            });\n        }\n    });\n}\nexport default diffProperty;\n//# sourceMappingURL=diffProperty.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs\n// module chunks = menu","/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler) {\n    return function (target, propertyKey, descriptor) {\n        if (typeof target === 'function') {\n            handler(target.prototype, undefined);\n        }\n        else {\n            handler(target, propertyKey);\n        }\n    };\n}\nexport default handleDecorator;\n//# sourceMappingURL=handleDecorator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs\n// module chunks = menu","import WeakMap from '../../shim/WeakMap';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap = new WeakMap();\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }) {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function (properties) {\n            const injectorItem = this.registry.getInjector(name);\n            if (injectorItem) {\n                const { injector, invalidator } = injectorItem;\n                const registeredInjectors = registeredInjectorsMap.get(this) || [];\n                if (registeredInjectors.length === 0) {\n                    registeredInjectorsMap.set(this, registeredInjectors);\n                }\n                if (registeredInjectors.indexOf(injectorItem) === -1) {\n                    this.own(invalidator.on('invalidate', () => {\n                        this.invalidate();\n                    }));\n                    registeredInjectors.push(injectorItem);\n                }\n                return getProperties(injector(), properties);\n            }\n        })(target);\n    });\n}\nexport default inject;\n//# sourceMappingURL=inject.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/inject.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/inject.mjs\n// module chunks = menu","import { WIDGET_BASE_TYPE } from './Registry';\nfunction isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\nexport function always(previousProperty, newProperty) {\n    return {\n        changed: true,\n        value: newProperty\n    };\n}\nexport function ignore(previousProperty, newProperty) {\n    return {\n        changed: false,\n        value: newProperty\n    };\n}\nexport function reference(previousProperty, newProperty) {\n    return {\n        changed: previousProperty !== newProperty,\n        value: newProperty\n    };\n}\nexport function shallow(previousProperty, newProperty) {\n    let changed = false;\n    const validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n    const validNewProperty = newProperty && isObjectOrArray(newProperty);\n    if (!validOldProperty || !validNewProperty) {\n        return {\n            changed: true,\n            value: newProperty\n        };\n    }\n    const previousKeys = Object.keys(previousProperty);\n    const newKeys = Object.keys(newProperty);\n    if (previousKeys.length !== newKeys.length) {\n        changed = true;\n    }\n    else {\n        changed = newKeys.some((key) => {\n            return newProperty[key] !== previousProperty[key];\n        });\n    }\n    return {\n        changed,\n        value: newProperty\n    };\n}\nexport function auto(previousProperty, newProperty) {\n    let result;\n    if (typeof newProperty === 'function') {\n        if (newProperty._type === WIDGET_BASE_TYPE) {\n            result = reference(previousProperty, newProperty);\n        }\n        else {\n            result = ignore(previousProperty, newProperty);\n        }\n    }\n    else if (isObjectOrArray(newProperty)) {\n        result = shallow(previousProperty, newProperty);\n    }\n    else {\n        result = reference(previousProperty, newProperty);\n    }\n    return result;\n}\n//# sourceMappingURL=diff.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/diff.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/diff.mjs\n// module chunks = menu","import * as tslib_1 from \"tslib\";\nimport { assign } from '../../core/lang';\nimport cssTransitions from '../animations/cssTransitions';\nimport { afterRender } from './../decorators/afterRender';\nimport { v } from './../d';\nimport { dom } from './../vdom';\n/**\n * Represents the attach state of the projector\n */\nexport var ProjectorAttachState;\n(function (ProjectorAttachState) {\n    ProjectorAttachState[ProjectorAttachState[\"Attached\"] = 1] = \"Attached\";\n    ProjectorAttachState[ProjectorAttachState[\"Detached\"] = 2] = \"Detached\";\n})(ProjectorAttachState || (ProjectorAttachState = {}));\n/**\n * Attach type for the projector\n */\nexport var AttachType;\n(function (AttachType) {\n    AttachType[AttachType[\"Append\"] = 1] = \"Append\";\n    AttachType[AttachType[\"Merge\"] = 2] = \"Merge\";\n})(AttachType || (AttachType = {}));\nexport function ProjectorMixin(Base) {\n    class Projector extends Base {\n        constructor(...args) {\n            super(...args);\n            this._root = document.body;\n            this._async = true;\n            this._projectorProperties = {};\n            this._projectionOptions = {\n                transitions: cssTransitions\n            };\n            this.root = document.body;\n            this.projectorState = ProjectorAttachState.Detached;\n        }\n        append(root) {\n            const options = {\n                type: AttachType.Append,\n                root\n            };\n            return this._attach(options);\n        }\n        merge(root) {\n            const options = {\n                type: AttachType.Merge,\n                root\n            };\n            return this._attach(options);\n        }\n        set root(root) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot change root element');\n            }\n            this._root = root;\n        }\n        get root() {\n            return this._root;\n        }\n        get async() {\n            return this._async;\n        }\n        set async(async) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot change async mode');\n            }\n            this._async = async;\n        }\n        sandbox(doc = document) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot create sandbox');\n            }\n            this._async = false;\n            const previousRoot = this.root;\n            /* free up the document fragment for GC */\n            this.own({\n                destroy: () => {\n                    this._root = previousRoot;\n                }\n            });\n            this._attach({\n                /* DocumentFragment is not assignable to Element, but provides everything needed to work */\n                root: doc.createDocumentFragment(),\n                type: AttachType.Append\n            });\n        }\n        setChildren(children) {\n            this.__setChildren__(children);\n        }\n        setProperties(properties) {\n            this.__setProperties__(properties);\n        }\n        __setProperties__(properties) {\n            if (this._projectorProperties && this._projectorProperties.registry !== properties.registry) {\n                if (this._projectorProperties.registry) {\n                    this._projectorProperties.registry.destroy();\n                }\n            }\n            this._projectorProperties = assign({}, properties);\n            super.__setCoreProperties__({ bind: this, baseRegistry: properties.registry });\n            super.__setProperties__(properties);\n        }\n        toHtml() {\n            if (this.projectorState !== ProjectorAttachState.Attached || !this._projection) {\n                throw new Error('Projector is not attached, cannot return an HTML string of projection.');\n            }\n            return this._projection.domNode.childNodes[0].outerHTML;\n        }\n        afterRender(result) {\n            let node = result;\n            if (typeof result === 'string' || result === null || result === undefined) {\n                node = v('span', {}, [result]);\n            }\n            return node;\n        }\n        destroy() {\n            super.destroy();\n        }\n        _attach({ type, root }) {\n            if (root) {\n                this.root = root;\n            }\n            if (this._attachHandle) {\n                return this._attachHandle;\n            }\n            this.projectorState = ProjectorAttachState.Attached;\n            const handle = {\n                destroy: () => {\n                    if (this.projectorState === ProjectorAttachState.Attached) {\n                        this._projection = undefined;\n                        this.projectorState = ProjectorAttachState.Detached;\n                    }\n                }\n            };\n            this.own(handle);\n            this._attachHandle = handle;\n            this._projectionOptions = Object.assign({}, this._projectionOptions, { sync: !this._async });\n            switch (type) {\n                case AttachType.Append:\n                    this._projection = dom.append(this.root, this, this._projectionOptions);\n                    break;\n                case AttachType.Merge:\n                    this._projection = dom.merge(this.root, this, this._projectionOptions);\n                    break;\n            }\n            return this._attachHandle;\n        }\n    }\n    tslib_1.__decorate([\n        afterRender()\n    ], Projector.prototype, \"afterRender\", null);\n    return Projector;\n}\nexport default ProjectorMixin;\n//# sourceMappingURL=Projector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/mixins/Projector.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/mixins/Projector.mjs\n// module chunks = menu","import * as tslib_1 from \"tslib\";\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\nconst THEME_KEY = ' _key';\nexport const INJECTED_THEME_KEY = Symbol('theme');\n/**\n * Decorator for base css classes\n */\nexport function theme(theme) {\n    return handleDecorator((target) => {\n        target.addDecorator('baseThemeClasses', theme);\n    });\n}\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes) {\n    return classes.reduce((currentClassNames, baseClass) => {\n        Object.keys(baseClass).forEach((key) => {\n            currentClassNames[baseClass[key]] = key;\n        });\n        return currentClassNames;\n    }, {});\n}\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme, themeRegistry) {\n    const themeInjector = new Injector(theme);\n    themeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n        themeInjector.setInvalidator(invalidator);\n        return () => themeInjector.get();\n    });\n    return themeInjector;\n}\n/**\n * Function that returns a class decorated with with Themed functionality\n */\nexport function ThemedMixin(Base) {\n    let Themed = class Themed extends Base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Registered base theme keys\n             */\n            this._registeredBaseThemeKeys = [];\n            /**\n             * Indicates if classes meta data need to be calculated.\n             */\n            this._recalculateClasses = true;\n            /**\n             * Loaded theme\n             */\n            this._theme = {};\n        }\n        theme(classes) {\n            if (this._recalculateClasses) {\n                this._recalculateThemeClasses();\n            }\n            if (Array.isArray(classes)) {\n                return classes.map((className) => this._getThemeClass(className));\n            }\n            return this._getThemeClass(classes);\n        }\n        /**\n         * Function fired when `theme` or `extraClasses` are changed.\n         */\n        onPropertiesChanged() {\n            this._recalculateClasses = true;\n        }\n        _getThemeClass(className) {\n            if (className === undefined || className === null) {\n                return className;\n            }\n            const extraClasses = this.properties.extraClasses || {};\n            const themeClassName = this._baseThemeClassesReverseLookup[className];\n            let resultClassNames = [];\n            if (!themeClassName) {\n                console.warn(`Class name: '${className}' not found in theme`);\n                return null;\n            }\n            if (extraClasses[themeClassName]) {\n                resultClassNames.push(extraClasses[themeClassName]);\n            }\n            if (this._theme[themeClassName]) {\n                resultClassNames.push(this._theme[themeClassName]);\n            }\n            else {\n                resultClassNames.push(this._registeredBaseTheme[themeClassName]);\n            }\n            return resultClassNames.join(' ');\n        }\n        _recalculateThemeClasses() {\n            const { theme = {} } = this.properties;\n            const baseThemes = this.getDecorator('baseThemeClasses');\n            if (!this._registeredBaseTheme) {\n                this._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n                    const _a = THEME_KEY, key = baseTheme[_a], classes = tslib_1.__rest(baseTheme, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n                    this._registeredBaseThemeKeys.push(key);\n                    return Object.assign({}, finalBaseTheme, classes);\n                }, {});\n                this._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n            }\n            this._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n                return Object.assign({}, baseTheme, theme[themeKey]);\n            }, {});\n            this._recalculateClasses = false;\n        }\n    };\n    tslib_1.__decorate([\n        diffProperty('theme', shallow),\n        diffProperty('extraClasses', shallow)\n    ], Themed.prototype, \"onPropertiesChanged\", null);\n    Themed = tslib_1.__decorate([\n        inject({\n            name: INJECTED_THEME_KEY,\n            getProperties: (theme, properties) => {\n                if (!properties.theme) {\n                    return { theme };\n                }\n                return {};\n            }\n        })\n    ], Themed);\n    return Themed;\n}\nexport default ThemedMixin;\n//# sourceMappingURL=Themed.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs\n// module chunks = menu","import * as tslib_1 from \"tslib\";\nimport { WidgetBase, noBind } from './WidgetBase';\nimport { ProjectorMixin } from './mixins/Projector';\nimport { from } from '../shim/array';\nimport { w, dom } from './d';\nimport global from '../shim/global';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\nexport var CustomElementChildType;\n(function (CustomElementChildType) {\n    CustomElementChildType[\"DOJO\"] = \"DOJO\";\n    CustomElementChildType[\"NODE\"] = \"NODE\";\n    CustomElementChildType[\"TEXT\"] = \"TEXT\";\n})(CustomElementChildType || (CustomElementChildType = {}));\nexport function DomToWidgetWrapper(domNode) {\n    let DomToWidgetWrapper = class DomToWidgetWrapper extends WidgetBase {\n        render() {\n            const properties = Object.keys(this.properties).reduce((props, key) => {\n                const value = this.properties[key];\n                if (key.indexOf('on') === 0) {\n                    key = `__${key}`;\n                }\n                props[key] = value;\n                return props;\n            }, {});\n            return dom({ node: domNode, props: properties, diffType: 'dom' });\n        }\n        static get domNode() {\n            return domNode;\n        }\n    };\n    DomToWidgetWrapper = tslib_1.__decorate([\n        alwaysRender()\n    ], DomToWidgetWrapper);\n    return DomToWidgetWrapper;\n}\nexport function create(descriptor, WidgetConstructor) {\n    const { attributes, childType, registryFactory } = descriptor;\n    const attributeMap = {};\n    attributes.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    return class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._properties = {};\n            this._children = [];\n            this._eventProperties = {};\n            this._initialised = false;\n        }\n        connectedCallback() {\n            if (this._initialised) {\n                return;\n            }\n            const domProperties = {};\n            const { attributes, properties, events } = descriptor;\n            this._properties = Object.assign({}, this._properties, this._attributesToProperties(attributes));\n            [...attributes, ...properties].forEach((propertyName) => {\n                const value = this[propertyName];\n                const filteredPropertyName = propertyName.replace(/^on/, '__');\n                if (value !== undefined) {\n                    this._properties[propertyName] = value;\n                }\n                if (filteredPropertyName !== propertyName) {\n                    domProperties[filteredPropertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n                domProperties[propertyName] = {\n                    get: () => this._getProperty(propertyName),\n                    set: (value) => this._setProperty(propertyName, value)\n                };\n            });\n            events.forEach((propertyName) => {\n                const eventName = propertyName.replace(/^on/, '').toLowerCase();\n                const filteredPropertyName = propertyName.replace(/^on/, '__on');\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getEventProperty(propertyName),\n                    set: (value) => this._setEventProperty(propertyName, value)\n                };\n                this._eventProperties[propertyName] = undefined;\n                this._properties[propertyName] = (...args) => {\n                    const eventCallback = this._getEventProperty(propertyName);\n                    if (typeof eventCallback === 'function') {\n                        eventCallback(...args);\n                    }\n                    this.dispatchEvent(new CustomEvent(eventName, {\n                        bubbles: false,\n                        detail: args\n                    }));\n                };\n            });\n            Object.defineProperties(this, domProperties);\n            const children = childType === CustomElementChildType.TEXT ? this.childNodes : this.children;\n            from(children).forEach((childNode) => {\n                if (childType === CustomElementChildType.DOJO) {\n                    childNode.addEventListener('dojo-ce-render', () => this._render());\n                    childNode.addEventListener('dojo-ce-connected', () => this._render());\n                    this._children.push(DomToWidgetWrapper(childNode));\n                }\n                else {\n                    this._children.push(dom({ node: childNode, diffType: 'dom' }));\n                }\n            });\n            this.addEventListener('dojo-ce-connected', (e) => this._childConnected(e));\n            const widgetProperties = this._properties;\n            const renderChildren = () => this.__children__();\n            const Wrapper = class extends WidgetBase {\n                render() {\n                    return w(WidgetConstructor, widgetProperties, renderChildren());\n                }\n            };\n            const registry = registryFactory();\n            const themeContext = registerThemeInjector(this._getTheme(), registry);\n            global.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n            const Projector = ProjectorMixin(Wrapper);\n            this._projector = new Projector();\n            this._projector.setProperties({ registry });\n            this._projector.append(this);\n            this._initialised = true;\n            this.dispatchEvent(new CustomEvent('dojo-ce-connected', {\n                bubbles: true,\n                detail: this\n            }));\n        }\n        _getTheme() {\n            if (global && global.dojoce && global.dojoce.theme) {\n                return global.dojoce.themes[global.dojoce.theme];\n            }\n        }\n        _childConnected(e) {\n            const node = e.detail;\n            if (node.parentNode === this) {\n                const exists = this._children.some((child) => child.domNode === node);\n                if (!exists) {\n                    node.addEventListener('dojo-ce-render', () => this._render());\n                    this._children.push(DomToWidgetWrapper(node));\n                    this._render();\n                }\n            }\n        }\n        _render() {\n            if (this._projector) {\n                this._projector.invalidate();\n                this.dispatchEvent(new CustomEvent('dojo-ce-render', {\n                    bubbles: false,\n                    detail: this\n                }));\n            }\n        }\n        __properties__() {\n            return Object.assign({}, this._properties, this._eventProperties);\n        }\n        __children__() {\n            if (childType === CustomElementChildType.DOJO) {\n                return this._children.filter((Child) => Child.domNode.isWidget).map((Child) => {\n                    const { domNode } = Child;\n                    return w(Child, Object.assign({}, domNode.__properties__()), [...domNode.__children__()]);\n                });\n            }\n            else {\n                return this._children;\n            }\n        }\n        attributeChangedCallback(name, oldValue, value) {\n            const propertyName = attributeMap[name];\n            this._setProperty(propertyName, value);\n        }\n        _setEventProperty(propertyName, value) {\n            this._eventProperties[propertyName] = value;\n        }\n        _getEventProperty(propertyName) {\n            return this._eventProperties[propertyName];\n        }\n        _setProperty(propertyName, value) {\n            if (typeof value === 'function') {\n                value[noBind] = true;\n            }\n            this._properties[propertyName] = value;\n            this._render();\n        }\n        _getProperty(propertyName) {\n            return this._properties[propertyName];\n        }\n        _attributesToProperties(attributes) {\n            return attributes.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    properties[propertyName] = value;\n                }\n                return properties;\n            }, {});\n        }\n        static get observedAttributes() {\n            return Object.keys(attributeMap);\n        }\n        get isWidget() {\n            return true;\n        }\n    };\n}\nexport function register(WidgetConstructor) {\n    const descriptor = WidgetConstructor.prototype && WidgetConstructor.prototype.__customElementDescriptor;\n    if (!descriptor) {\n        throw new Error('Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?');\n    }\n    global.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\nexport default register;\n//# sourceMappingURL=registerCustomElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs\n// module chunks = menu","import global from '../shim/global';\nimport { from as arrayFrom } from '../shim/array';\nimport { isWNode, isVNode, isDomVNode, VNODE, WNODE } from './d';\nimport { isWidgetBaseConstructor } from './Registry';\nimport WeakMap from '../shim/WeakMap';\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst emptyArray = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nexport const widgetInstanceMap = new WeakMap();\nconst instanceMap = new WeakMap();\nconst nextSiblingMap = new WeakMap();\nconst projectorStateMap = new WeakMap();\nfunction same(dnode1, dnode2) {\n    if (isVNode(dnode1) && isVNode(dnode2)) {\n        if (isDomVNode(dnode1) || isDomVNode(dnode2)) {\n            if (dnode1.domNode !== dnode2.domNode) {\n                return false;\n            }\n        }\n        if (dnode1.tag !== dnode2.tag) {\n            return false;\n        }\n        if (dnode1.properties.key !== dnode2.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    else if (isWNode(dnode1) && isWNode(dnode2)) {\n        if (dnode1.instance === undefined && typeof dnode2.widgetConstructor === 'string') {\n            return false;\n        }\n        if (dnode1.widgetConstructor !== dnode2.widgetConstructor) {\n            return false;\n        }\n        if (dnode1.properties.key !== dnode2.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\nconst missingTransition = function () {\n    throw new Error('Provide a transitions object to the projectionOptions to do animations');\n};\nfunction getProjectionOptions(projectorOptions, projectorInstance) {\n    const defaults = {\n        namespace: undefined,\n        styleApplyer: function (domNode, styleName, value) {\n            domNode.style[styleName] = value;\n        },\n        transitions: {\n            enter: missingTransition,\n            exit: missingTransition\n        },\n        depth: 0,\n        merge: false,\n        sync: false,\n        projectorInstance\n    };\n    return Object.assign({}, defaults, projectorOptions);\n}\nfunction checkStyleValue(styleValue) {\n    if (typeof styleValue !== 'string') {\n        throw new Error('Style values must be strings');\n    }\n}\nfunction updateEvent(domNode, eventName, currentValue, projectionOptions, bind, previousValue) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    const eventMap = projectorState.nodeMap.get(domNode) || new WeakMap();\n    if (previousValue) {\n        const previousEvent = eventMap.get(previousValue);\n        domNode.removeEventListener(eventName, previousEvent);\n    }\n    let callback = currentValue.bind(bind);\n    if (eventName === 'input') {\n        callback = function (evt) {\n            currentValue.call(this, evt);\n            evt.target['oninput-value'] = evt.target.value;\n        }.bind(bind);\n    }\n    domNode.addEventListener(eventName, callback);\n    eventMap.set(currentValue, callback);\n    projectorState.nodeMap.set(domNode, eventMap);\n}\nfunction addClasses(domNode, classes) {\n    if (classes) {\n        const classNames = classes.split(' ');\n        for (let i = 0; i < classNames.length; i++) {\n            domNode.classList.add(classNames[i]);\n        }\n    }\n}\nfunction removeClasses(domNode, classes) {\n    if (classes) {\n        const classNames = classes.split(' ');\n        for (let i = 0; i < classNames.length; i++) {\n            domNode.classList.remove(classNames[i]);\n        }\n    }\n}\nfunction buildPreviousProperties(domNode, previous, current) {\n    const { diffType, properties, attributes } = current;\n    if (!diffType || diffType === 'vdom') {\n        return { properties: previous.properties, attributes: previous.attributes, events: previous.events };\n    }\n    else if (diffType === 'none') {\n        return { properties: {}, attributes: previous.attributes ? {} : undefined, events: previous.events };\n    }\n    let newProperties = {\n        properties: {}\n    };\n    if (attributes) {\n        newProperties.attributes = {};\n        newProperties.events = previous.events;\n        Object.keys(properties).forEach((propName) => {\n            newProperties.properties[propName] = domNode[propName];\n        });\n        Object.keys(attributes).forEach((attrName) => {\n            newProperties.attributes[attrName] = domNode.getAttribute(attrName);\n        });\n        return newProperties;\n    }\n    newProperties.properties = Object.keys(properties).reduce((props, property) => {\n        props[property] = domNode.getAttribute(property) || domNode[property];\n        return props;\n    }, {});\n    return newProperties;\n}\nfunction nodeOperation(propName, propValue, previousValue, domNode, projectionOptions) {\n    let result;\n    if (typeof propValue === 'function') {\n        result = propValue();\n    }\n    else {\n        result = propValue && !previousValue;\n    }\n    if (result === true) {\n        const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n        projectorState.deferredRenderCallbacks.push(() => {\n            domNode[propName]();\n        });\n    }\n}\nfunction removeOrphanedEvents(domNode, previousProperties, properties, projectionOptions, onlyEvents = false) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    const eventMap = projectorState.nodeMap.get(domNode);\n    if (eventMap) {\n        Object.keys(previousProperties).forEach((propName) => {\n            const isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n            const eventName = onlyEvents ? propName : propName.substr(2);\n            if (isEvent && !properties[propName]) {\n                const eventCallback = eventMap.get(previousProperties[propName]);\n                if (eventCallback) {\n                    domNode.removeEventListener(eventName, eventCallback);\n                }\n            }\n        });\n    }\n}\nfunction updateAttribute(domNode, attrName, attrValue, projectionOptions) {\n    if (projectionOptions.namespace === NAMESPACE_SVG && attrName === 'href') {\n        domNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n    }\n    else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n        domNode.removeAttribute(attrName);\n    }\n    else {\n        domNode.setAttribute(attrName, attrValue);\n    }\n}\nfunction updateAttributes(domNode, previousAttributes, attributes, projectionOptions) {\n    const attrNames = Object.keys(attributes);\n    const attrCount = attrNames.length;\n    for (let i = 0; i < attrCount; i++) {\n        const attrName = attrNames[i];\n        const attrValue = attributes[attrName];\n        const previousAttrValue = previousAttributes[attrName];\n        if (attrValue !== previousAttrValue) {\n            updateAttribute(domNode, attrName, attrValue, projectionOptions);\n        }\n    }\n}\nfunction updateProperties(domNode, previousProperties, properties, projectionOptions, includesEventsAndAttributes = true) {\n    let propertiesUpdated = false;\n    const propNames = Object.keys(properties);\n    const propCount = propNames.length;\n    if (propNames.indexOf('classes') === -1 && previousProperties.classes) {\n        if (Array.isArray(previousProperties.classes)) {\n            for (let i = 0; i < previousProperties.classes.length; i++) {\n                removeClasses(domNode, previousProperties.classes[i]);\n            }\n        }\n        else {\n            removeClasses(domNode, previousProperties.classes);\n        }\n    }\n    includesEventsAndAttributes && removeOrphanedEvents(domNode, previousProperties, properties, projectionOptions);\n    for (let i = 0; i < propCount; i++) {\n        const propName = propNames[i];\n        let propValue = properties[propName];\n        const previousValue = previousProperties[propName];\n        if (propName === 'classes') {\n            const previousClasses = Array.isArray(previousValue) ? previousValue : [previousValue];\n            const currentClasses = Array.isArray(propValue) ? propValue : [propValue];\n            if (previousClasses && previousClasses.length > 0) {\n                if (!propValue || propValue.length === 0) {\n                    for (let i = 0; i < previousClasses.length; i++) {\n                        removeClasses(domNode, previousClasses[i]);\n                    }\n                }\n                else {\n                    const newClasses = [...currentClasses];\n                    for (let i = 0; i < previousClasses.length; i++) {\n                        const previousClassName = previousClasses[i];\n                        if (previousClassName) {\n                            const classIndex = newClasses.indexOf(previousClassName);\n                            if (classIndex === -1) {\n                                removeClasses(domNode, previousClassName);\n                            }\n                            else {\n                                newClasses.splice(classIndex, 1);\n                            }\n                        }\n                    }\n                    for (let i = 0; i < newClasses.length; i++) {\n                        addClasses(domNode, newClasses[i]);\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < currentClasses.length; i++) {\n                    addClasses(domNode, currentClasses[i]);\n                }\n            }\n        }\n        else if (nodeOperations.indexOf(propName) !== -1) {\n            nodeOperation(propName, propValue, previousValue, domNode, projectionOptions);\n        }\n        else if (propName === 'styles') {\n            const styleNames = Object.keys(propValue);\n            const styleCount = styleNames.length;\n            for (let j = 0; j < styleCount; j++) {\n                const styleName = styleNames[j];\n                const newStyleValue = propValue[styleName];\n                const oldStyleValue = previousValue && previousValue[styleName];\n                if (newStyleValue === oldStyleValue) {\n                    continue;\n                }\n                propertiesUpdated = true;\n                if (newStyleValue) {\n                    checkStyleValue(newStyleValue);\n                    projectionOptions.styleApplyer(domNode, styleName, newStyleValue);\n                }\n                else {\n                    projectionOptions.styleApplyer(domNode, styleName, '');\n                }\n            }\n        }\n        else {\n            if (!propValue && typeof previousValue === 'string') {\n                propValue = '';\n            }\n            if (propName === 'value') {\n                const domValue = domNode[propName];\n                if (domValue !== propValue &&\n                    (domNode['oninput-value']\n                        ? domValue === domNode['oninput-value']\n                        : propValue !== previousValue)) {\n                    domNode[propName] = propValue;\n                    domNode['oninput-value'] = undefined;\n                }\n                if (propValue !== previousValue) {\n                    propertiesUpdated = true;\n                }\n            }\n            else if (propName !== 'key' && propValue !== previousValue) {\n                const type = typeof propValue;\n                if (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n                    updateEvent(domNode, propName.substr(2), propValue, projectionOptions, properties.bind, previousValue);\n                }\n                else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n                    updateAttribute(domNode, propName, propValue, projectionOptions);\n                }\n                else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n                    if (domNode[propName] !== propValue) {\n                        domNode[propName] = propValue;\n                    }\n                }\n                else {\n                    domNode[propName] = propValue;\n                }\n                propertiesUpdated = true;\n            }\n        }\n    }\n    return propertiesUpdated;\n}\nfunction findIndexOfChild(children, sameAs, start) {\n    for (let i = start; i < children.length; i++) {\n        if (same(children[i], sameAs)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function toParentVNode(domNode) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        domNode,\n        type: VNODE\n    };\n}\nexport function toTextVNode(data) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        text: `${data}`,\n        domNode: undefined,\n        type: VNODE\n    };\n}\nfunction toInternalWNode(instance, instanceData) {\n    return {\n        instance,\n        rendered: [],\n        coreProperties: instanceData.coreProperties,\n        children: instance.children,\n        widgetConstructor: instance.constructor,\n        properties: instanceData.inputProperties,\n        type: WNODE\n    };\n}\nexport function filterAndDecorateChildren(children, instance) {\n    if (children === undefined) {\n        return emptyArray;\n    }\n    children = Array.isArray(children) ? children : [children];\n    for (let i = 0; i < children.length;) {\n        const child = children[i];\n        if (child === undefined || child === null) {\n            children.splice(i, 1);\n            continue;\n        }\n        else if (typeof child === 'string') {\n            children[i] = toTextVNode(child);\n        }\n        else {\n            if (isVNode(child)) {\n                if (child.properties.bind === undefined) {\n                    child.properties.bind = instance;\n                    if (child.children && child.children.length > 0) {\n                        filterAndDecorateChildren(child.children, instance);\n                    }\n                }\n            }\n            else {\n                if (!child.coreProperties) {\n                    const instanceData = widgetInstanceMap.get(instance);\n                    child.coreProperties = {\n                        bind: instance,\n                        baseRegistry: instanceData.coreProperties.baseRegistry\n                    };\n                }\n                if (child.children && child.children.length > 0) {\n                    filterAndDecorateChildren(child.children, instance);\n                }\n            }\n        }\n        i++;\n    }\n    return children;\n}\nfunction nodeAdded(dnode, transitions) {\n    if (isVNode(dnode) && dnode.properties) {\n        const enterAnimation = dnode.properties.enterAnimation;\n        if (enterAnimation) {\n            if (typeof enterAnimation === 'function') {\n                enterAnimation(dnode.domNode, dnode.properties);\n            }\n            else {\n                transitions.enter(dnode.domNode, dnode.properties, enterAnimation);\n            }\n        }\n    }\n}\nfunction nodeToRemove(dnode, transitions, projectionOptions) {\n    if (isWNode(dnode)) {\n        const item = instanceMap.get(dnode.instance);\n        const rendered = (item ? item.dnode.rendered : dnode.rendered) || emptyArray;\n        if (dnode.instance) {\n            const instanceData = widgetInstanceMap.get(dnode.instance);\n            instanceData.onDetach();\n            instanceMap.delete(dnode.instance);\n        }\n        for (let i = 0; i < rendered.length; i++) {\n            nodeToRemove(rendered[i], transitions, projectionOptions);\n        }\n    }\n    else {\n        const domNode = dnode.domNode;\n        const properties = dnode.properties;\n        if (dnode.children && dnode.children.length > 0) {\n            for (let i = 0; i < dnode.children.length; i++) {\n                nodeToRemove(dnode.children[i], transitions, projectionOptions);\n            }\n        }\n        const exitAnimation = properties.exitAnimation;\n        if (properties && exitAnimation) {\n            domNode.style.pointerEvents = 'none';\n            const removeDomNode = function () {\n                domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n                dnode.domNode = undefined;\n            };\n            if (typeof exitAnimation === 'function') {\n                exitAnimation(domNode, removeDomNode, properties);\n                return;\n            }\n            else {\n                transitions.exit(dnode.domNode, properties, exitAnimation, removeDomNode);\n                return;\n            }\n        }\n        domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n        dnode.domNode = undefined;\n    }\n}\nfunction checkDistinguishable(childNodes, indexToCheck, parentInstance) {\n    const childNode = childNodes[indexToCheck];\n    if (isVNode(childNode) && !childNode.tag) {\n        return; // Text nodes need not be distinguishable\n    }\n    const { key } = childNode.properties;\n    if (key === undefined || key === null) {\n        for (let i = 0; i < childNodes.length; i++) {\n            if (i !== indexToCheck) {\n                const node = childNodes[i];\n                if (same(node, childNode)) {\n                    let nodeIdentifier;\n                    const parentName = parentInstance.constructor.name || 'unknown';\n                    if (isWNode(childNode)) {\n                        nodeIdentifier = childNode.widgetConstructor.name || 'unknown';\n                    }\n                    else {\n                        nodeIdentifier = childNode.tag;\n                    }\n                    console.warn(`A widget (${parentName}) has had a child addded or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`);\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction updateChildren(parentVNode, siblings, oldChildren, newChildren, parentInstance, projectionOptions) {\n    oldChildren = oldChildren || emptyArray;\n    newChildren = newChildren;\n    const oldChildrenLength = oldChildren.length;\n    const newChildrenLength = newChildren.length;\n    const transitions = projectionOptions.transitions;\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    projectionOptions = Object.assign({}, projectionOptions, { depth: projectionOptions.depth + 1 });\n    let oldIndex = 0;\n    let newIndex = 0;\n    let i;\n    let textUpdated = false;\n    while (newIndex < newChildrenLength) {\n        let oldChild = oldIndex < oldChildrenLength ? oldChildren[oldIndex] : undefined;\n        const newChild = newChildren[newIndex];\n        if (isVNode(newChild) && typeof newChild.deferredPropertiesCallback === 'function') {\n            newChild.inserted = isVNode(oldChild) && oldChild.inserted;\n            addDeferredProperties(newChild, projectionOptions);\n        }\n        if (oldChild !== undefined && same(oldChild, newChild)) {\n            oldIndex++;\n            newIndex++;\n            textUpdated =\n                updateDom(oldChild, newChild, projectionOptions, parentVNode, parentInstance, oldChildren.slice(oldIndex), newChildren.slice(newIndex)) || textUpdated;\n            continue;\n        }\n        const findOldIndex = findIndexOfChild(oldChildren, newChild, oldIndex + 1);\n        const addChild = () => {\n            let insertBeforeDomNode = undefined;\n            let childrenArray = oldChildren;\n            let nextIndex = oldIndex + 1;\n            let child = oldChildren[oldIndex];\n            if (!child) {\n                child = siblings[0];\n                nextIndex = 1;\n                childrenArray = siblings;\n            }\n            if (child) {\n                let insertBeforeChildren = [child];\n                while (insertBeforeChildren.length) {\n                    const insertBefore = insertBeforeChildren.shift();\n                    if (isWNode(insertBefore)) {\n                        const item = instanceMap.get(insertBefore.instance);\n                        if (item && item.dnode.rendered) {\n                            insertBeforeChildren.push(...item.dnode.rendered);\n                        }\n                    }\n                    else {\n                        if (insertBefore.domNode) {\n                            if (insertBefore.domNode.parentElement !== parentVNode.domNode) {\n                                break;\n                            }\n                            insertBeforeDomNode = insertBefore.domNode;\n                            break;\n                        }\n                    }\n                    if (insertBeforeChildren.length === 0 && childrenArray[nextIndex]) {\n                        insertBeforeChildren.push(childrenArray[nextIndex]);\n                        nextIndex++;\n                    }\n                }\n            }\n            createDom(newChild, parentVNode, newChildren.slice(newIndex + 1), insertBeforeDomNode, projectionOptions, parentInstance);\n            nodeAdded(newChild, transitions);\n            const indexToCheck = newIndex;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(newChildren, indexToCheck, parentInstance);\n            });\n        };\n        if (!oldChild || findOldIndex === -1) {\n            addChild();\n            newIndex++;\n            continue;\n        }\n        const removeChild = () => {\n            const indexToCheck = oldIndex;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(oldChildren, indexToCheck, parentInstance);\n            });\n            if (isWNode(oldChild)) {\n                const item = instanceMap.get(oldChild.instance);\n                if (item) {\n                    oldChild = item.dnode;\n                }\n            }\n            nodeToRemove(oldChild, transitions, projectionOptions);\n        };\n        const findNewIndex = findIndexOfChild(newChildren, oldChild, newIndex + 1);\n        if (findNewIndex === -1) {\n            removeChild();\n            oldIndex++;\n            continue;\n        }\n        addChild();\n        removeChild();\n        oldIndex++;\n        newIndex++;\n    }\n    if (oldChildrenLength > oldIndex) {\n        // Remove child fragments\n        for (i = oldIndex; i < oldChildrenLength; i++) {\n            const indexToCheck = i;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(oldChildren, indexToCheck, parentInstance);\n            });\n            let childToRemove = oldChildren[i];\n            if (isWNode(childToRemove)) {\n                const item = instanceMap.get(childToRemove.instance);\n                if (item) {\n                    childToRemove = item.dnode;\n                }\n            }\n            nodeToRemove(childToRemove, transitions, projectionOptions);\n        }\n    }\n    return textUpdated;\n}\nfunction addChildren(parentVNode, children, projectionOptions, parentInstance, insertBefore = undefined, childNodes) {\n    if (children === undefined) {\n        return;\n    }\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectorState.merge && childNodes === undefined) {\n        childNodes = arrayFrom(parentVNode.domNode.childNodes);\n    }\n    const transitions = projectionOptions.transitions;\n    projectionOptions = Object.assign({}, projectionOptions, { depth: projectionOptions.depth + 1 });\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        const nextSiblings = children.slice(i + 1);\n        if (isVNode(child)) {\n            if (projectorState.merge && childNodes) {\n                let domElement = undefined;\n                while (child.domNode === undefined && childNodes.length > 0) {\n                    domElement = childNodes.shift();\n                    if (domElement && domElement.tagName === (child.tag.toUpperCase() || undefined)) {\n                        child.domNode = domElement;\n                    }\n                }\n            }\n            createDom(child, parentVNode, nextSiblings, insertBefore, projectionOptions, parentInstance);\n        }\n        else {\n            createDom(child, parentVNode, nextSiblings, insertBefore, projectionOptions, parentInstance, childNodes);\n        }\n        nodeAdded(child, transitions);\n    }\n}\nfunction initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions) {\n    addChildren(dnode, dnode.children, projectionOptions, parentInstance, undefined);\n    if (typeof dnode.deferredPropertiesCallback === 'function' && dnode.inserted === undefined) {\n        addDeferredProperties(dnode, projectionOptions);\n    }\n    if (dnode.attributes && dnode.events) {\n        updateAttributes(domNode, {}, dnode.attributes, projectionOptions);\n        updateProperties(domNode, {}, dnode.properties, projectionOptions, false);\n        removeOrphanedEvents(domNode, {}, dnode.events, projectionOptions, true);\n        const events = dnode.events;\n        Object.keys(events).forEach((event) => {\n            updateEvent(domNode, event, events[event], projectionOptions, dnode.properties.bind);\n        });\n    }\n    else {\n        updateProperties(domNode, {}, dnode.properties, projectionOptions);\n    }\n    if (dnode.properties.key !== null && dnode.properties.key !== undefined) {\n        const instanceData = widgetInstanceMap.get(parentInstance);\n        instanceData.nodeHandler.add(domNode, `${dnode.properties.key}`);\n    }\n    dnode.inserted = true;\n}\nfunction createDom(dnode, parentVNode, nextSiblings, insertBefore, projectionOptions, parentInstance, childNodes) {\n    let domNode;\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (isWNode(dnode)) {\n        let { widgetConstructor } = dnode;\n        const parentInstanceData = widgetInstanceMap.get(parentInstance);\n        if (!isWidgetBaseConstructor(widgetConstructor)) {\n            const item = parentInstanceData.registry().get(widgetConstructor);\n            if (item === null) {\n                return;\n            }\n            widgetConstructor = item;\n        }\n        const instance = new widgetConstructor();\n        dnode.instance = instance;\n        nextSiblingMap.set(instance, nextSiblings);\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (instanceData.rendering === false) {\n                projectorState.renderQueue.push({ instance, depth: projectionOptions.depth });\n                scheduleRender(projectionOptions);\n            }\n        };\n        instanceData.rendering = true;\n        instance.__setCoreProperties__(dnode.coreProperties);\n        instance.__setChildren__(dnode.children);\n        instance.__setProperties__(dnode.properties);\n        const rendered = instance.__render__();\n        instanceData.rendering = false;\n        if (rendered) {\n            const filteredRendered = filterAndDecorateChildren(rendered, instance);\n            dnode.rendered = filteredRendered;\n            addChildren(parentVNode, filteredRendered, projectionOptions, instance, insertBefore, childNodes);\n        }\n        instanceMap.set(instance, { dnode, parentVNode });\n        instanceData.nodeHandler.addRoot();\n        projectorState.afterRenderCallbacks.push(() => {\n            instanceData.onAttach();\n        });\n    }\n    else {\n        if (projectorState.merge && projectorState.mergeElement !== undefined) {\n            domNode = dnode.domNode = projectionOptions.mergeElement;\n            projectorState.mergeElement = undefined;\n            initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions);\n            return;\n        }\n        const doc = parentVNode.domNode.ownerDocument;\n        if (!dnode.tag && typeof dnode.text === 'string') {\n            if (dnode.domNode !== undefined && parentVNode.domNode) {\n                const newDomNode = dnode.domNode.ownerDocument.createTextNode(dnode.text);\n                if (parentVNode.domNode === dnode.domNode.parentNode) {\n                    parentVNode.domNode.replaceChild(newDomNode, dnode.domNode);\n                }\n                else {\n                    parentVNode.domNode.appendChild(newDomNode);\n                    dnode.domNode.parentNode && dnode.domNode.parentNode.removeChild(dnode.domNode);\n                }\n                dnode.domNode = newDomNode;\n            }\n            else {\n                domNode = dnode.domNode = doc.createTextNode(dnode.text);\n                if (insertBefore !== undefined) {\n                    parentVNode.domNode.insertBefore(domNode, insertBefore);\n                }\n                else {\n                    parentVNode.domNode.appendChild(domNode);\n                }\n            }\n        }\n        else {\n            if (dnode.domNode === undefined) {\n                if (dnode.tag === 'svg') {\n                    projectionOptions = Object.assign({}, projectionOptions, { namespace: NAMESPACE_SVG });\n                }\n                if (projectionOptions.namespace !== undefined) {\n                    domNode = dnode.domNode = doc.createElementNS(projectionOptions.namespace, dnode.tag);\n                }\n                else {\n                    domNode = dnode.domNode = dnode.domNode || doc.createElement(dnode.tag);\n                }\n            }\n            else {\n                domNode = dnode.domNode;\n            }\n            initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions);\n            if (insertBefore !== undefined) {\n                parentVNode.domNode.insertBefore(domNode, insertBefore);\n            }\n            else if (domNode.parentNode !== parentVNode.domNode) {\n                parentVNode.domNode.appendChild(domNode);\n            }\n        }\n    }\n}\nfunction updateDom(previous, dnode, projectionOptions, parentVNode, parentInstance, oldNextSiblings, nextSiblings) {\n    if (isWNode(dnode)) {\n        const { instance } = previous;\n        const { parentVNode, dnode: node } = instanceMap.get(instance);\n        const previousRendered = node ? node.rendered : previous.rendered;\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.rendering = true;\n        instance.__setCoreProperties__(dnode.coreProperties);\n        instance.__setChildren__(dnode.children);\n        instance.__setProperties__(dnode.properties);\n        nextSiblingMap.set(instance, nextSiblings);\n        dnode.instance = instance;\n        if (instanceData.dirty === true) {\n            const rendered = instance.__render__();\n            instanceData.rendering = false;\n            dnode.rendered = filterAndDecorateChildren(rendered, instance);\n            updateChildren(parentVNode, oldNextSiblings, previousRendered, dnode.rendered, instance, projectionOptions);\n        }\n        else {\n            instanceData.rendering = false;\n            dnode.rendered = previousRendered;\n        }\n        instanceMap.set(instance, { dnode, parentVNode });\n        instanceData.nodeHandler.addRoot();\n    }\n    else {\n        if (previous === dnode) {\n            return false;\n        }\n        const domNode = (dnode.domNode = previous.domNode);\n        let textUpdated = false;\n        let updated = false;\n        if (!dnode.tag && typeof dnode.text === 'string') {\n            if (dnode.text !== previous.text) {\n                const newDomNode = domNode.ownerDocument.createTextNode(dnode.text);\n                domNode.parentNode.replaceChild(newDomNode, domNode);\n                dnode.domNode = newDomNode;\n                textUpdated = true;\n                return textUpdated;\n            }\n        }\n        else {\n            if (dnode.tag && dnode.tag.lastIndexOf('svg', 0) === 0) {\n                projectionOptions = Object.assign({}, projectionOptions, { namespace: NAMESPACE_SVG });\n            }\n            if (previous.children !== dnode.children) {\n                const children = filterAndDecorateChildren(dnode.children, parentInstance);\n                dnode.children = children;\n                updated =\n                    updateChildren(dnode, oldNextSiblings, previous.children, children, parentInstance, projectionOptions) || updated;\n            }\n            const previousProperties = buildPreviousProperties(domNode, previous, dnode);\n            if (dnode.attributes && dnode.events) {\n                updateAttributes(domNode, previousProperties.attributes, dnode.attributes, projectionOptions);\n                updated =\n                    updateProperties(domNode, previousProperties.properties, dnode.properties, projectionOptions, false) || updated;\n                removeOrphanedEvents(domNode, previousProperties.events, dnode.events, projectionOptions, true);\n                const events = dnode.events;\n                Object.keys(events).forEach((event) => {\n                    updateEvent(domNode, event, events[event], projectionOptions, dnode.properties.bind, previousProperties.events[event]);\n                });\n            }\n            else {\n                updated =\n                    updateProperties(domNode, previousProperties.properties, dnode.properties, projectionOptions) ||\n                        updated;\n            }\n            if (dnode.properties.key !== null && dnode.properties.key !== undefined) {\n                const instanceData = widgetInstanceMap.get(parentInstance);\n                instanceData.nodeHandler.add(domNode, `${dnode.properties.key}`);\n            }\n        }\n        if (updated && dnode.properties && dnode.properties.updateAnimation) {\n            dnode.properties.updateAnimation(domNode, dnode.properties, previous.properties);\n        }\n    }\n}\nfunction addDeferredProperties(vnode, projectionOptions) {\n    // transfer any properties that have been passed - as these must be decorated properties\n    vnode.decoratedDeferredProperties = vnode.properties;\n    const properties = vnode.deferredPropertiesCallback(!!vnode.inserted);\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    vnode.properties = Object.assign({}, properties, vnode.decoratedDeferredProperties);\n    projectorState.deferredRenderCallbacks.push(() => {\n        const properties = Object.assign({}, vnode.deferredPropertiesCallback(!!vnode.inserted), vnode.decoratedDeferredProperties);\n        updateProperties(vnode.domNode, vnode.properties, properties, projectionOptions);\n        vnode.properties = properties;\n    });\n}\nfunction runDeferredRenderCallbacks(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectorState.deferredRenderCallbacks.length) {\n        if (projectionOptions.sync) {\n            while (projectorState.deferredRenderCallbacks.length) {\n                const callback = projectorState.deferredRenderCallbacks.shift();\n                callback && callback();\n            }\n        }\n        else {\n            global.requestAnimationFrame(() => {\n                while (projectorState.deferredRenderCallbacks.length) {\n                    const callback = projectorState.deferredRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n    }\n}\nfunction runAfterRenderCallbacks(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectionOptions.sync) {\n        while (projectorState.afterRenderCallbacks.length) {\n            const callback = projectorState.afterRenderCallbacks.shift();\n            callback && callback();\n        }\n    }\n    else {\n        if (global.requestIdleCallback) {\n            global.requestIdleCallback(() => {\n                while (projectorState.afterRenderCallbacks.length) {\n                    const callback = projectorState.afterRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n        else {\n            setTimeout(() => {\n                while (projectorState.afterRenderCallbacks.length) {\n                    const callback = projectorState.afterRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n    }\n}\nfunction scheduleRender(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectionOptions.sync) {\n        render(projectionOptions);\n    }\n    else if (projectorState.renderScheduled === undefined) {\n        projectorState.renderScheduled = global.requestAnimationFrame(() => {\n            render(projectionOptions);\n        });\n    }\n}\nfunction render(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    projectorState.renderScheduled = undefined;\n    const renderQueue = projectorState.renderQueue;\n    const renders = [...renderQueue];\n    projectorState.renderQueue = [];\n    renders.sort((a, b) => a.depth - b.depth);\n    const previouslyRendered = [];\n    while (renders.length) {\n        const { instance } = renders.shift();\n        if (instanceMap.has(instance) && previouslyRendered.indexOf(instance) === -1) {\n            previouslyRendered.push(instance);\n            const { parentVNode, dnode } = instanceMap.get(instance);\n            const instanceData = widgetInstanceMap.get(instance);\n            const nextSiblings = nextSiblingMap.get(instance);\n            updateDom(dnode, toInternalWNode(instance, instanceData), projectionOptions, parentVNode, instance, nextSiblings, nextSiblings);\n        }\n    }\n    runAfterRenderCallbacks(projectionOptions);\n    runDeferredRenderCallbacks(projectionOptions);\n}\nexport const dom = {\n    append: function (parentNode, instance, projectionOptions = {}) {\n        const instanceData = widgetInstanceMap.get(instance);\n        const finalProjectorOptions = getProjectionOptions(projectionOptions, instance);\n        const projectorState = {\n            afterRenderCallbacks: [],\n            deferredRenderCallbacks: [],\n            nodeMap: new WeakMap(),\n            renderScheduled: undefined,\n            renderQueue: [],\n            merge: projectionOptions.merge || false,\n            mergeElement: projectionOptions.mergeElement\n        };\n        projectorStateMap.set(instance, projectorState);\n        finalProjectorOptions.rootNode = parentNode;\n        const parentVNode = toParentVNode(finalProjectorOptions.rootNode);\n        const node = toInternalWNode(instance, instanceData);\n        instanceMap.set(instance, { dnode: node, parentVNode });\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (instanceData.rendering === false) {\n                projectorState.renderQueue.push({ instance, depth: finalProjectorOptions.depth });\n                scheduleRender(finalProjectorOptions);\n            }\n        };\n        updateDom(node, node, finalProjectorOptions, parentVNode, instance, [], []);\n        projectorState.afterRenderCallbacks.push(() => {\n            instanceData.onAttach();\n        });\n        runDeferredRenderCallbacks(finalProjectorOptions);\n        runAfterRenderCallbacks(finalProjectorOptions);\n        return {\n            domNode: finalProjectorOptions.rootNode\n        };\n    },\n    create: function (instance, projectionOptions) {\n        return this.append(document.createElement('div'), instance, projectionOptions);\n    },\n    merge: function (element, instance, projectionOptions = {}) {\n        projectionOptions.merge = true;\n        projectionOptions.mergeElement = element;\n        const projection = this.append(element.parentNode, instance, projectionOptions);\n        const projectorState = projectorStateMap.get(instance);\n        projectorState.merge = false;\n        return projection;\n    }\n};\n//# sourceMappingURL=vdom.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/vdom.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/vdom.mjs\n// module chunks = menu","/*** IMPORTS FROM imports-loader ***/\nvar widgetFactory = require(\"src/menu/Menu\");\n\nvar registerCustomElement = require('@dojo/framework/widget-core/registerCustomElement').default;\n\nvar defaultExport = widgetFactory.default;\ndefaultExport && registerCustomElement(defaultExport);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/imports-loader?widgetFactory=src/menu/Menu!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module id = ./node_modules/imports-loader/index.js?widgetFactory=src/menu/Menu!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module chunks = menu","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = ./node_modules/process/browser.js\n// module chunks = menu","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = ./node_modules/tslib/tslib.es6.js\n// module chunks = menu","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = ./node_modules/webpack/buildin/global.js\n// module chunks = menu","import { v } from '@dojo/framework/widget-core/d';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\nimport { WidgetProperties, WNode } from '@dojo/framework/widget-core/interfaces';\nimport { theme, ThemedMixin } from '@dojo/framework/widget-core/mixins/Themed';\nimport { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { MenuItem, MenuItemProperties } from '../menu-item/MenuItem';\n\nimport * as css from './menu.m.css';\n\ninterface MenuProperties extends WidgetProperties {\n\tonSelected: (data: any) => void;\n}\n\n@customElement<MenuProperties>({\n\ttag: 'demo-menu',\n\tevents: ['onSelected']\n})\n@theme(css)\nexport class Menu extends ThemedMixin(WidgetBase)<MenuProperties, WNode<MenuItem>> {\n\tprivate _selectedId: number;\n\n\tprivate _onSelected(id: number, data: any) {\n\t\tthis._selectedId = id;\n\t\tthis.properties.onSelected(data);\n\t\tthis.invalidate();\n\t}\n\n\tprotected render() {\n\t\tconst items = this.children.map((child, index) => {\n\t\t\tif (child) {\n\t\t\t\tconst properties: Partial<MenuItemProperties> = {\n\t\t\t\t\tonSelected: (data: any) => {\n\t\t\t\t\t\tthis._onSelected(index, data);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (this._selectedId !== undefined) {\n\t\t\t\t\tproperties.selected = index === this._selectedId;\n\t\t\t\t}\n\t\t\t\tchild.properties = { ...child.properties, ...properties };\n\t\t\t}\n\t\t\treturn child;\n\t\t});\n\n\t\treturn v('nav', { classes: this.theme(css.root) }, [\n\t\t\tv(\n\t\t\t\t'ol',\n\t\t\t\t{\n\t\t\t\t\tclasses: this.theme(css.menuContainer)\n\t\t\t\t},\n\t\t\t\titems\n\t\t\t)\n\t\t]);\n\t}\n}\n\nexport default Menu;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_menu!./src/menu/Menu.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"test-app/menu\",\"root\":\"_3bA6jdSn\",\"menuContainer\":\"_1eoGfqku\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/menu/menu.m.css\n// module id = ./src/menu/menu.m.css\n// module chunks = menu"],"sourceRoot":""}