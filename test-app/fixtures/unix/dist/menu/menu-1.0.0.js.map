{"version":3,"sources":["webpack:///webpack/bootstrap a59a9399cca9f1d650e4","webpack:///./node_modules/@dojo/framework/core/Destroyable.mjs","webpack:///./node_modules/@dojo/framework/core/Evented.mjs","webpack:///./node_modules/@dojo/framework/core/lang.mjs","webpack:///./node_modules/@dojo/framework/has/has.mjs","webpack:///./node_modules/@dojo/framework/shim/Map.mjs","webpack:///./node_modules/@dojo/framework/shim/Promise.mjs","webpack:///./node_modules/@dojo/framework/shim/Symbol.mjs","webpack:///./node_modules/@dojo/framework/shim/WeakMap.mjs","webpack:///./node_modules/@dojo/framework/shim/array.mjs","webpack:///./node_modules/@dojo/framework/shim/global.mjs","webpack:///./node_modules/@dojo/framework/shim/iterator.mjs","webpack:///./node_modules/@dojo/framework/shim/number.mjs","webpack:///./node_modules/@dojo/framework/shim/object.mjs","webpack:///./node_modules/@dojo/framework/shim/string.mjs","webpack:///./node_modules/@dojo/framework/shim/support/has.mjs","webpack:///./node_modules/@dojo/framework/shim/support/queue.mjs","webpack:///./node_modules/@dojo/framework/shim/support/util.mjs","webpack:///./node_modules/@dojo/framework/widget-core/Injector.mjs","webpack:///./node_modules/@dojo/framework/widget-core/NodeHandler.mjs","webpack:///./node_modules/@dojo/framework/widget-core/Registry.mjs","webpack:///./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs","webpack:///./node_modules/@dojo/framework/widget-core/WidgetBase.mjs","webpack:///./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs","webpack:///./node_modules/@dojo/framework/widget-core/d.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/afterRender.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/inject.mjs","webpack:///./node_modules/@dojo/framework/widget-core/diff.mjs","webpack:///./node_modules/@dojo/framework/widget-core/mixins/Projector.mjs","webpack:///./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs","webpack:///./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs","webpack:///./node_modules/@dojo/framework/widget-core/vdom.mjs","webpack:///./node_modules/@dojo/cli-build-widget/template/custom-element.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/menu/Menu.ts","webpack:///./src/menu/menu.m.css?ec11"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_IMPORTED_MODULE_0__lang__","__WEBPACK_IMPORTED_MODULE_1__shim_Promise__","noop","resolve","destroyed","Error","Destroyable","[object Object]","this","handles","handle","Array","isArray","_handles","push","splice","indexOf","destroy","forEach","own","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__shim_Map__","__WEBPACK_IMPORTED_MODULE_1__Destroyable__","regexMap","Evented","super","arguments","listenersMap","event","methods","type","globString","targetString","regex","has","RegExp","replace","set","test","isGlobMatch","method","listener","map","_addListener","listeners","destructor","called","createHandle","length","__WEBPACK_IMPORTED_MODULE_0__shim_object__","slice","global","process","add","testCache","testFunctions","testThenables","globalScope","window","self","staticFeatures","DojoHasEnvironment","staticCache","apply","feature","value","overwrite","normalizedFeature","toLowerCase","Boolean","exists","TypeError","then","isFeatureTestThenable","resolvedValue","result","document","location","versions","node","Map","__WEBPACK_IMPORTED_MODULE_1__global__","__WEBPACK_IMPORTED_MODULE_0__global__","ShimPromise","Promise","__WEBPACK_IMPORTED_MODULE_2__support_util__","Symbol","wellKnown","for","WeakMap","from","__WEBPACK_IMPORTED_MODULE_4__support_util__","of","copyWithin","fill","find","findIndex","includes","globalObject","Math","pow","assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","fromCodePoint","raw","codePointAt","endsWith","normalize","repeat","startsWith","padEnd","padStart","String","__WEBPACK_IMPORTED_MODULE_0__has_has__","every","key","Number","POSITIVE_INFINITY","e","imul","Observable","Set","getCallSite","callSite","substitutions","key1","key2","freeze","postMessage","requestAnimationFrame","setImmediate","MutationObserver","WebKitMutationObserver","example","createElement","observer","observe","attributes","style","setProperty","takeRecords","undefined","Animation","KeyframeEffect","AbortController","AbortSignal","executeTask","item","isActive","callback","getQueueHandle","enqueue","queue","addEventListener","source","data","stopPropagation","shift","queueTask","id","queueAnimationTask","rafId","bind","cancelAnimationFrame","writable","nativeFunction","target","args","__WEBPACK_IMPORTED_MODULE_0__core_Evented__","Injector","payload","_payload","invalidator","_invalidator","NodeEventType","__WEBPACK_IMPORTED_MODULE_1__shim_Map__","_nodeMap","element","emit","Widget","Projector","clear","isWidgetBaseConstructor","__WEBPACK_IMPORTED_MODULE_0__shim_Promise__","__WEBPACK_IMPORTED_MODULE_2__shim_Symbol__","__WEBPACK_IMPORTED_MODULE_3__core_Evented__","WIDGET_BASE_TYPE","_type","Registry","widgetLabel","action","label","_widgetRegistry","toString","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","injectorItem","injector","promise","default","isWidgetConstructorDefaultExport","hasInjector","__WEBPACK_IMPORTED_MODULE_1__core_Evented__","__WEBPACK_IMPORTED_MODULE_2__Registry__","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","registry","registeredLabels","on","__WEBPACK_IMPORTED_MODULE_1__shim_WeakMap__","__WEBPACK_IMPORTED_MODULE_3__d__","__WEBPACK_IMPORTED_MODULE_4__diff__","__WEBPACK_IMPORTED_MODULE_5__RegistryHandler__","__WEBPACK_IMPORTED_MODULE_6__NodeHandler__","__WEBPACK_IMPORTED_MODULE_7__vdom__","__WEBPACK_IMPORTED_MODULE_8__Registry__","decoratorMap","boundAuto","noBind","WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","dirty","onAttach","onDetach","nodeHandler","coreProperties","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","properties","changedPropertyKeys","instanceData","originalProperties","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","previousProperty","newProperty","_bindFunctionProperty","diffFunctions","changed","executedReactions","reaction","propertyChanged","reactionRun","children","dNode","_runBeforeRenders","runAfterRenders","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","getPrototypeOf","_buildDecoratorList","_bindFunctionPropertyMap","bindInfo","boundFunc","scope","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","afterConstructors","afterConstructor","pop","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","enter","enterAnimation","activeClass","enterAnimationActive","classList","remove","exit","exitAnimation","removeNode","exitAnimationActive","isWNode","isVNode","child","DOMVNODE","widgetConstructor","WNODE","tag","propertiesOrChildren","deferredPropertiesCallback","VNODE","attrs","props","diffType","isElementNode","tagName","events","domNode","text","__WEBPACK_IMPORTED_MODULE_0__shim_Symbol__","__WEBPACK_IMPORTED_MODULE_0__handleDecorator__","propertyKey","addDecorator","alwaysRender","__WEBPACK_IMPORTED_MODULE_1__beforeProperties__","customElement","__WEBPACK_IMPORTED_MODULE_0__registerCustomElement__","__WEBPACK_IMPORTED_MODULE_1__Registry__","childType","DOJO","registryFactory","__customElementDescriptor","diffProperty","__WEBPACK_IMPORTED_MODULE_1__diff__","diffFunction","reactionFunction","handleDecorator","handler","descriptor","inject","__WEBPACK_IMPORTED_MODULE_0__shim_WeakMap__","__WEBPACK_IMPORTED_MODULE_1__handleDecorator__","__WEBPACK_IMPORTED_MODULE_2__beforeProperties__","registeredInjectorsMap","getProperties","getInjector","registeredInjectors","shallow","__WEBPACK_IMPORTED_MODULE_0__Registry__","reference","ignore","isObjectOrArray","validOldProperty","validNewProperty","previousKeys","newKeys","some","ProjectorMixin","ProjectorAttachState","AttachType","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__core_lang__","__WEBPACK_IMPORTED_MODULE_2__animations_cssTransitions__","__WEBPACK_IMPORTED_MODULE_3__decorators_afterRender__","__WEBPACK_IMPORTED_MODULE_4__d__","__WEBPACK_IMPORTED_MODULE_5__vdom__","Base","_root","body","_async","_projectorProperties","_projectionOptions","transitions","root","projectorState","Detached","options","Append","_attach","Merge","Attached","async","doc","previousRoot","createDocumentFragment","__setChildren__","__setProperties__","__setCoreProperties__","_projection","childNodes","outerHTML","_attachHandle","sync","append","merge","theme","__WEBPACK_IMPORTED_MODULE_3__decorators_handleDecorator__","themeRegistry","themeInjector","__WEBPACK_IMPORTED_MODULE_1__Injector__","INJECTED_THEME_KEY","setInvalidator","ThemedMixin","__WEBPACK_IMPORTED_MODULE_2__decorators_inject__","__WEBPACK_IMPORTED_MODULE_4__decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_5__diff__","THEME_KEY","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","classes","_recalculateThemeClasses","className","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_registeredBaseTheme","join","baseThemes","finalBaseTheme","baseTheme","_a","currentClassNames","baseClass","themeKey","CustomElementChildType","DomToWidgetWrapper","create","register","__WEBPACK_IMPORTED_MODULE_1__WidgetBase__","__WEBPACK_IMPORTED_MODULE_2__mixins_Projector__","__WEBPACK_IMPORTED_MODULE_3__shim_array__","__WEBPACK_IMPORTED_MODULE_5__shim_global__","__WEBPACK_IMPORTED_MODULE_6__mixins_Themed__","__WEBPACK_IMPORTED_MODULE_7__decorators_alwaysRender__","WidgetConstructor","attributeMap","attributeName","HTMLElement","_eventProperties","_initialised","domProperties","_attributesToProperties","filteredPropertyName","_getProperty","_setProperty","eventName","_getEventProperty","_setEventProperty","eventCallback","dispatchEvent","CustomEvent","bubbles","detail","defineProperties","TEXT","childNode","_render","_childConnected","widgetProperties","renderChildren","__children__","themeContext","_getTheme","_projector","setProperties","dojoce","themes","parentNode","filter","Child","isWidget","__properties__","oldValue","getAttribute","observedAttributes","customElements","__WEBPACK_IMPORTED_MODULE_0__shim_global__","__WEBPACK_IMPORTED_MODULE_1__shim_array__","__WEBPACK_IMPORTED_MODULE_2__d__","__WEBPACK_IMPORTED_MODULE_3__Registry__","__WEBPACK_IMPORTED_MODULE_4__shim_WeakMap__","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","emptyArray","nodeOperations","widgetInstanceMap","nextSiblingMap","projectorStateMap","same","dnode1","dnode2","instance","missingTransition","checkStyleValue","styleValue","updateEvent","currentValue","projectionOptions","previousValue","projectorInstance","eventMap","nodeMap","previousEvent","evt","addClasses","classNames","split","removeClasses","nodeOperation","propName","propValue","deferredRenderCallbacks","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","updateAttribute","attrName","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","updateAttributes","previousAttributes","attrNames","attrCount","updateProperties","includesEventsAndAttributes","propertiesUpdated","propNames","propCount","previousClasses","currentClasses","newClasses","previousClassName","classIndex","styleNames","styleCount","j","styleName","newStyleValue","styleApplyer","domValue","lastIndexOf","findIndexOfChild","sameAs","start","toInternalWNode","rendered","filterAndDecorateChildren","nodeAdded","dnode","nodeToRemove","pointerEvents","removeDomNode","removeChild","checkDistinguishable","indexToCheck","parentInstance","nodeIdentifier","parentName","updateChildren","parentVNode","siblings","oldChildren","newChildren","oldChildrenLength","newChildrenLength","depth","oldIndex","newIndex","textUpdated","oldChild","newChild","inserted","addDeferredProperties","updateDom","findOldIndex","addChild","insertBeforeDomNode","childrenArray","nextIndex","insertBeforeChildren","insertBefore","parentElement","createDom","afterRenderCallbacks","childToRemove","addChildren","nextSiblings","domElement","toUpperCase","initPropertiesAndChildren","parentInstanceData","renderQueue","scheduleRender","__render__","filteredRendered","addRoot","mergeElement","ownerDocument","createElementNS","appendChild","newDomNode","createTextNode","replaceChild","previous","oldNextSiblings","previousRendered","updated","current","newProperties","buildPreviousProperties","updateAnimation","vnode","decoratedDeferredProperties","runDeferredRenderCallbacks","runAfterRenderCallbacks","requestIdleCallback","setTimeout","renderScheduled","renders","sort","a","b","previouslyRendered","dom","finalProjectorOptions","projectorOptions","defaults","getProjectionOptions","rootNode","projection","widgetFactory","registerCustomElement","defaultExport","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","nextTick","title","browser","env","argv","version","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","t","desc","r","Reflect","decorate","setPrototypeOf","g","Function","eval","Menu","__WEBPACK_IMPORTED_MODULE_3__dojo_framework_widget_core_mixins_Themed__","__WEBPACK_IMPORTED_MODULE_4__dojo_framework_widget_core_WidgetBase__","_selectedId","onSelected","items","index","_onSelected","selected","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_widget_core_d__","__WEBPACK_IMPORTED_MODULE_5__menu_m_css__","__WEBPACK_IMPORTED_MODULE_2__dojo_framework_widget_core_decorators_customElement__"," _key","menuContainer"],"mappings":";;;;;;;;aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,wFC7DA,IAAAC,EAAA3B,EAAA,gDAAA4B,EAAA5B,EAAA,mDAKA,SAAA6B,IACA,OAAWD,EAAA,EAAOE,SAAA,GAKlB,SAAAC,IACA,UAAAC,MAAA,uCAEOC,EAIPC,cACAC,KAAAC,WAQAF,IAAAE,GACA,MAAAC,EAAAC,MAAAC,QAAAH,GAAgDtB,OAAAa,EAAA,EAAAb,IAAqBsB,MACtDA,QAAAI,GAAoBL,KAEnC,OADAK,EAAAC,KAAAJ,IAEAH,UACAM,EAAAE,OAAAF,EAAAG,QAAAN,IACAA,EAAAO,YASAV,UACA,WAAmBN,EAAA,EAAOE,IAC1BK,KAAAC,QAAAS,QAAAR,IACAA,KAAAO,SAAAP,EAAAO,YAEAT,KAAAS,QAAAf,EACAM,KAAAW,IAAAf,EACAD,GAAA,MAGCiB,EAAA,EAAAd,kFCrDD,IAAAe,EAAAhD,EAAA,+CAAAiD,EAAAjD,EAAA,uDAKA,MAAAkD,EAAA,IAAqBF,EAAA,QAyBdG,UAAsBF,EAAA,EAC7Bf,cACAkB,SAAAC,WAIAlB,KAAAmB,aAAA,IAAgCN,EAAA,EAEhCd,KAAAqB,GACApB,KAAAmB,aAAAT,QAAA,CAAAW,EAAAC,MA5BO,SAAAC,EAAAC,GACP,oBAAAA,GAAA,iBAAAD,IAAA,IAAAA,EAAAf,QAAA,MACA,IAAAiB,EAQA,OAPAV,EAAAW,IAAAH,GACAE,EAAAV,EAAAhC,IAAAwC,IAGAE,EAAA,IAAAE,WAAmCJ,EAAAK,QAAA,gBACnCb,EAAAc,IAAAN,EAAAE,IAEAA,EAAAK,KAAAN,GAGA,OAAAD,IAAAC,GAgBAO,CAAAT,EAAAF,EAAAE,WACAD,GAAAX,QAAAsB,IACAA,EAAA5D,KAAA4B,KAAAoB,OAKArB,GAAAuB,EAAAW,GACA,GAAA9B,MAAAC,QAAA6B,GAAA,CACA,MAAAhC,EAAAgC,EAAAC,IAAAD,GAAAjC,KAAAmC,aAAAb,EAAAW,IACA,OACAlC,UACAE,EAAAS,QAAAR,KAAAO,aAIA,OAAAT,KAAAmC,aAAAb,EAAAW,GAEAlC,aAAAuB,EAAAW,GACA,MAAAG,EAAApC,KAAAmB,aAAApC,IAAAuC,OAGA,OAFAc,EAAA9B,KAAA2B,GACAjC,KAAAmB,aAAAU,IAAAP,EAAAc,IAEA3B,QAAA,KACA,MAAA2B,EAAApC,KAAAmB,aAAApC,IAAAuC,OACAc,EAAA7B,OAAA6B,EAAA5B,QAAAyB,GAAA,MAICrB,EAAA,EAAAI,+ECrEDJ,EAAA,EA4LO,YAAAX,GACP,OAlBO,SAAAoC,GACP,IAAAC,GAAA,EACA,OACA7B,QAAA,WACA6B,IACAA,GAAA,EACAD,OAYAE,CAAA,WACA,QAAAtE,EAAA,EAAuBA,EAAAgC,EAAAuC,OAAoBvE,IAC3CgC,EAAAhC,GAAAwC,aA/LA,IAAAgC,EAAA5E,EAAA,kDAAAA,EAAAU,EAAAqC,EAAA,sBAAA6B,EAAA,IAEAtC,MAAAf,UAAAsD,MACA/D,OAAAS,UAAAC,2FCHA,SAAAsD,EAAAC,GAAAhC,EAAA,EAAAiC,EAAAjC,EAAA,EAAAc,EAMO,MAAAoB,KAIAC,KAKPC,KAIAC,EAEA,oBAAAC,OAEAA,YAEA,IAAAP,EAEAA,EAEA,oBAAAQ,KAEAA,SAMAC,eAAOA,GAAiBH,EAAAI,uBAExB,uBAAAJ,UACAA,EAAAI,mBAeA,MAAAC,EAAAF,EANA,mBAOAA,EACAA,EAAAG,MAAAN,GACAG,KA8EO,SAAAP,EAAAW,EAAAC,EAAAC,GAAA,GACP,MAAAC,EAAAH,EAAAI,cACA,GArBO,SAAAJ,GACP,MAAAG,EAAAH,EAAAI,cACA,OAAAC,QAAAF,KAAAL,GAAAK,KAAAb,GAAAC,EAAAY,IAmBAG,CAAAH,KAAAD,KAAAC,KAAAL,GACA,UAAAS,sBAAwCP,qCAExC,mBAAAC,EACAV,EAAAY,GAAAF,GA9IA,SAAAA,GACA,OAAAA,KAAAO,KA+IAC,CAAAR,IASAX,EAAAa,GAAAF,SACAV,EAAAY,IATAX,EAAAQ,GAAAC,EAAAO,KAAAE,IACApB,EAAAU,GAAAU,SACAlB,EAAAQ,IACS,YACTR,EAAAQ,KAae,SAAA9B,EAAA8B,GACf,IAAAW,EACA,MAAAR,EAAAH,EAAAI,cACA,GAAAD,KAAAL,EACAa,EAAAb,EAAAK,QAEA,GAAAZ,EAAAY,GACAQ,EAAArB,EAAAa,GAAAZ,EAAAY,GAAAvF,KAAA,aACA2E,EAAAY,OAEA,MAAAA,KAAAb,GAGA,IAAAU,KAAAR,EACA,SAGA,UAAAe,yDAA2EP,MAN3EW,EAAArB,EAAAa,GAQA,OAAAQ,EAOAtB,EAAA,YAEAA,EAAA,mCAAAuB,UAAA,oBAAAC,UAEAxB,EAAA,uBACA,oBAAAD,KAAA0B,UAAA1B,EAAA0B,SAAAC,KACA,OAAA3B,EAAA0B,SAAAC,kLClMA1G,EAAAU,EAAAqC,EAAA,sBAAA4D,IAAA3G,EAAA,wDAAA4G,EAAA5G,EAAA,kDAAAA,EAAA,kDAAAA,EAAA,uDAAAA,EAAA,kDAKO,IAAA2G,EAAUC,EAAA,EAAMD,IAwFR5D,EAAA,oFC7Ff,IAAA8D,EAAA7G,EAAA,kDAAAA,EAAA,yDAAAA,EAAA,kDAAAA,EAAA,uDAIO,IAAA8G,EAAkBD,EAAA,EAAME,QAgMhBhE,EAAA,mFCpMf/C,EAAA,2DAAA4G,EAAA5G,EAAA,kDAAAgH,EAAAhH,EAAA,wDAGO,IAAAiH,EAAaL,EAAA,EAAMK,QA2H1B,cACA,qBACA,WACA,UACA,UACA,SACA,QACA,QACA,cACA,cACA,cACA,cACApE,QAAAqE,IACAD,EAAAC,IACApG,OAAAC,eAAAkG,EAAAC,EAAiDpG,OAAAkG,EAAA,EAAAlG,CAAkBmG,EAAAE,IAAAD,IAAA,SAGpDnE,EAAA,oFC/If,IAAA8D,EAAA7G,EAAA,kDAAAA,EAAA,oDAAAA,EAAA,uDAAAA,EAAA,kDAIO,IAAAoH,EAAcP,EAAA,EAAMO,QAyGZrE,EAAA,kFC7Gf/C,EAAAU,EAAAqC,EAAA,sBAAAsE,IAAA,IAAAR,EAAA7G,EAAA,kDAAAsH,GAAAtH,EAAA,oDAAAA,EAAA,kDAAAA,EAAA,uDAAAA,EAAA,yDAKO,IAAAqH,EAOAE,EAWAC,EAUAC,EASAC,EAUAC,EAUAC,EAEPP,EAAWR,EAAA,EAAMvE,MAAA+E,KACjBE,EAASV,EAAA,EAAMvE,MAAAiF,GACfC,EAAiB1G,OAAAwG,EAAA,EAAAxG,CAAW+F,EAAA,EAAMvE,MAAAf,UAAAiG,YAClCC,EAAW3G,OAAAwG,EAAA,EAAAxG,CAAW+F,EAAA,EAAMvE,MAAAf,UAAAkG,MAC5BC,EAAW5G,OAAAwG,EAAA,EAAAxG,CAAW+F,EAAA,EAAMvE,MAAAf,UAAAmG,MAC5BC,EAAgB7G,OAAAwG,EAAA,EAAAxG,CAAW+F,EAAA,EAAMvE,MAAAf,UAAAoG,WAkJjCC,EAAe9G,OAAAwG,EAAA,EAAAxG,CAAW+F,EAAA,EAAMvE,MAAAf,UAAAqG,0FCvNhC,SAAA9C,GAAA,MAAA+C,EAIA,oBAAAvC,KACAA,KAEA,oBAAAD,OACAA,YAEA,IAAAP,EACAA,OADA,EAIe/B,EAAA,6ICdf/C,EAAA,kDAAAA,EAAA,iICAAA,EAAA,kDAQO8H,KAAAC,IAAA,qFCRP/H,EAAAU,EAAAqC,EAAA,sBAAAiF,IAAA,IAAAnB,EAAA7G,EAAA,kDAAAA,EAAA,uDAAAA,EAAA,kDAGO,IAAAgI,EAQAC,EAMAC,EAKAC,EAMAC,EAKAC,EAEAC,EACAC,EACAC,EACP,CACA,MAAAX,EAAyBhB,EAAA,EAAM/F,OAC/BkH,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,yBACAC,EAAAL,EAAAK,oBACAC,EAAAN,EAAAM,sBACAC,EAAAP,EAAAO,GACAC,EAAAR,EAAAQ,KA6CA,CACA,MAAAR,EAAyBhB,EAAA,EAAM/F,OAC/BwH,EAAAT,EAAAS,0BACAC,EAAAV,EAAAU,QACAC,EAAAX,EAAAW,uFC9FA,IAAA3B,EAAA7G,EAAA,kDAAAgH,GAAAhH,EAAA,uDAAAA,EAAA,yDAMyC+C,EAAA,EAAlC,MAIkCA,EAAA,EAAlC,MAeA,IAAA0F,EAQAC,EASAC,EAMAC,EASAhB,EAQAiB,EAMAC,EAMAC,EAcAC,EAaAC,EAEPR,EAAoB5B,EAAA,EAAMqC,OAAAT,cAC1BC,EAAU7B,EAAA,EAAMqC,OAAAR,IAChBC,EAAkB7H,OAAAkG,EAAA,EAAAlG,CAAW+F,EAAA,EAAMqC,OAAA3H,UAAAoH,aACnCC,EAAe9H,OAAAkG,EAAA,EAAAlG,CAAW+F,EAAA,EAAMqC,OAAA3H,UAAAqH,UAChChB,EAAe9G,OAAAkG,EAAA,EAAAlG,CAAW+F,EAAA,EAAMqC,OAAA3H,UAAAqG,UAChCiB,EAAgB/H,OAAAkG,EAAA,EAAAlG,CAAW+F,EAAA,EAAMqC,OAAA3H,UAAAsH,WACjCC,EAAahI,OAAAkG,EAAA,EAAAlG,CAAW+F,EAAA,EAAMqC,OAAA3H,UAAAuH,QAC9BC,EAAiBjI,OAAAkG,EAAA,EAAAlG,CAAW+F,EAAA,EAAMqC,OAAA3H,UAAAwH,YA2IlCC,EAAalI,OAAAkG,EAAA,EAAAlG,CAAW+F,EAAA,EAAMqC,OAAA3H,UAAAyH,QAC9BC,EAAenI,OAAAkG,EAAA,EAAAlG,CAAW+F,EAAA,EAAMqC,OAAA3H,UAAA0H,8FC7PhC,IAAAE,EAAAnJ,EAAA,8CAAA4G,EAAA5G,EAAA,kDAEemJ,EAAG,EAIlBrI,OAAAqI,EAAA,EAAArI,CAAG,iBACH,aAAAsI,MAAAC,QAAiDzC,EAAA,EAAMtE,SACvD,iCAAA8G,MAAAC,QAAkEzC,EAAA,EAAMtE,MAAAf,YACvE,GACDT,OAAAqI,EAAA,EAAArI,CAAG,qBACH,SAAkB8F,EAAA,EAAMtE,MAAAf,WAExB,QAAAkG,KAAA,EAAA6B,OAAAC,mBAAA,IAGC,GACDzI,OAAAqI,EAAA,EAAArI,CAAG,6BAAkC8F,EAAA,EAAMtE,MAAAf,WAAA,GAE3CT,OAAAqI,EAAA,EAAArI,CAAG,eACH,GAAqB,mBAAN8F,EAAA,EAAMD,IAMrB,IACA,MAAAtC,EAAA,IAA4BuC,EAAA,EAAMD,MAAA,OAClC,OAAAtC,EAAAR,IAAA,IACA,mBAAAQ,EAAAgE,MAEA,mBAAAhE,EAAAmE,QACA,mBAAAnE,EAAAkE,QAEA,MAAAiB,GAEA,SAGA,WACC,GAED1I,OAAAqI,EAAA,EAAArI,CAAG,gBAEH,QACA,OACA,QACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,SACA,OACA,SACAsI,MAAAzI,GAAmC,mBAANiG,EAAA,EAAMkB,KAAAnH,KAClC,GACDG,OAAAqI,EAAA,EAAArI,CAAG,oBACH,SAAkB8F,EAAA,EAAMkB,OAExB,IAAAA,KAAA2B,KAAA,eAGC,GAED3I,OAAAqI,EAAA,EAAArI,CAAG,kBAEH,wDAAAsI,MAAAzI,GAAiG,mBAANiG,EAAA,EAAM9F,OAAAH,KAChG,GACDG,OAAAqI,EAAA,EAAArI,CAAG,qBACH,gDAAAsI,MAAAzI,GAA2F,mBAANiG,EAAA,EAAM9F,OAAAH,KAC1F,GAEDG,OAAAqI,EAAA,EAAArI,CAAG,yBAAqC,IAAN8F,EAAA,EAAM8C,YAAA,GAExC5I,OAAAqI,EAAA,EAAArI,CAAG,uBAAmC,IAAN8F,EAAA,EAAMG,UAAA,MAEtCjG,OAAAqI,EAAA,EAAArI,CAAG,eACH,GAAqB,mBAAN8F,EAAA,EAAM+C,IAAA,CAErB,MAAA3F,EAAA,IAAwB4C,EAAA,EAAM+C,KAAA,IAC9B,OAAA3F,EAAAH,IAAA,aAAAG,GAAA,mBAAAA,EAAAqE,OAAA,EAEA,WACC,GAEDvH,OAAAqI,EAAA,EAAArI,CAAG,kBAGH,iBACAsI,MAAAC,GAAkC,mBAANzC,EAAA,EAAMsC,OAAAG,MAGlC,cACA,YACA,SACA,aACA,WACA,YACAD,MAAAC,GAAsC,mBAANzC,EAAA,EAAMsC,OAAA3H,UAAA8H,KACrC,GACDvI,OAAAqI,EAAA,EAAArI,CAAG,sBACH,SAAA8I,EAAAC,KAAAC,GACA,MAAAxD,MAAAuD,GAEA,OADAvD,EAAAoC,IAAAmB,EAAAnB,IACApC,EAEA,WAAiBM,EAAA,EAAMsC,OAAA,CACvB,IACAW,EAAAD,OADA,IAIA,OAFAC,EAAAnB,KAAA,QACoC,UAAN9B,EAAA,EAAMsC,OAAAR,IAAAmB,EAAA,IAGpC,WACC,GACD/I,OAAAqI,EAAA,EAAArI,CAAG,qBACH,qBAAAsI,MAAAC,GAA8D,mBAANzC,EAAA,EAAMsC,OAAA3H,UAAA8H,KAC7D,GAEDvI,OAAAqI,EAAA,EAAArI,CAAG,sBAAkC,IAAN8F,EAAA,EAAMK,QAAA,iBAAAA,UAAA,GAErCnG,OAAAqI,EAAA,EAAArI,CAAG,mBACH,QAAqB,IAAN8F,EAAA,EAAMQ,QAAA,CAErB,MAAA2C,KACAC,KACA3F,EAAA,IAAwBuC,EAAA,EAAMQ,UAAA2C,EAAA,KAE9B,OADAjJ,OAAAmJ,OAAAF,GACA,IAAA1F,EAAAnD,IAAA6I,IAAA1F,EAAAL,IAAAgG,EAAA,KAAA3F,IAAA,EAEA,WACC,GAEDvD,OAAAqI,EAAA,EAAArI,CAAG,wBACHA,OAAAqI,EAAA,EAAArI,CAAG,uBAGqB,IAAN8F,EAAA,EAAMvB,QAAwC,mBAANuB,EAAA,EAAMsD,aAC/D,GACDpJ,OAAAqI,EAAA,EAAArI,CAAG,UAA2B,mBAAN8F,EAAA,EAAMuD,uBAAA,GAC9BrJ,OAAAqI,EAAA,EAAArI,CAAG,wBAAoC,IAAN8F,EAAA,EAAMwD,cAAA,GAEvCtJ,OAAAqI,EAAA,EAAArI,CAAG,4BACH,GAAAkF,QAAwBY,EAAA,EAAMyD,kBAAqBzD,EAAA,EAAM0D,wBAAA,CAKzD,MAAAC,EAAAhE,SAAAiE,cAAA,OAGAC,EAAA,IADqC7D,EAAA,EAAMyD,kBAAqBzD,EAAA,EAAM0D,wBACtE,cAGA,OAFAG,EAAAC,QAAAH,GAAmCI,YAAA,IACnCJ,EAAAK,MAAAC,YAAA,mBACA7E,QAAAyE,EAAAK,cAAAnG,QAEA,WACC,GACD7D,OAAAqI,EAAA,EAAArI,CAAG,4BAAyCiK,IAANnE,EAAA,EAAMoE,gBAAkCD,IAANnE,EAAA,EAAMqE,gBAAA,GAC9EnK,OAAAqI,EAAA,EAAArI,CAAG,4BAAwC,IAAN8F,EAAA,EAAMsE,iBAC3CpK,OAAAqI,EAAA,EAAArI,CAAG,wBAAoC,IAAN8F,EAAA,EAAMuE,mGCtKvC,IAAAtE,EAAA7G,EAAA,kDAAAA,EAAA,uDAEA,SAAAoL,EAAAC,GACAA,KAAAC,UAAAD,EAAAE,UACAF,EAAAE,WAGA,SAAAC,EAAAH,EAAA7G,GACA,OACA5B,QAAA,WACAT,KAAAS,QAAA,aACAyI,EAAAC,UAAA,EACAD,EAAAE,SAAA,KACA/G,GACAA,OAaO,WACP,IAAAA,EACAiH,EAEA,CACA,MAAAC,KACQ7E,EAAA,EAAM8E,iBAAA,mBAAApI,GAEdA,EAAAqI,SAAiC/E,EAAA,GAAM,uBAAAtD,EAAAsI,OACvCtI,EAAAuI,kBACAJ,EAAA/G,QACAyG,EAAAM,EAAAK,YAIAN,EAAA,SAAAJ,GACAK,EAAAjJ,KAAA4I,GACYxE,EAAA,EAAMqD,YAAA,2BAelB,SAAA8B,EAAAT,GACA,MAAAF,GACAC,UAAA,EACAC,YAEAU,EAAAR,EAAAJ,GACA,OAAAG,EAAAH,EAAA7G,GACA,WACAA,EAAAyH,MAxCO,IAgFA,WAIP,SAAAC,EAAAX,GACA,MAAAF,GACAC,UAAA,EACAC,YAEAY,EAAAhC,sBAAAiB,EAAAgB,KAAA,KAAAf,IACA,OAAAG,EAAAH,EAAA,WACAgB,qBAAAF,MAXO,IAgCA,WACP,IAAAV,EAOAA,EAAA,SAAAJ,GACYxE,EAAA,EAAME,QAAAjF,QAAAuJ,GAAAlF,KAAAiF,IATX,wFC3IPrI,EAAA,EASO,SAAA6C,EAAA3E,GAAA,EAAAqL,GAAA,EAAAtL,GAAA,GACP,OACA4E,QACA3E,aACAqL,WACAtL,iBAdA+B,EAAA,EAiBO,SAAAwJ,GACP,gBAAAC,KAAAC,GACA,OAAAF,EAAA7G,MAAA8G,EAAAC,6FCnBA,IAAAC,EAAA1M,EAAA,yDACO2M,UAAuBD,EAAA,EAC9BxK,YAAA0K,GACAxJ,QACAjB,KAAA0K,SAAAD,EAEA1K,eAAA4K,GACA3K,KAAA4K,aAAAD,EAEA5K,MACA,OAAAC,KAAA0K,SAEA3K,IAAA0K,GACAzK,KAAA0K,SAAAD,EACAzK,KAAA4K,cACA5K,KAAA4K,gBAGChK,EAAA,EAAA4J,6FClBD,IAOOK,EAPPN,EAAA1M,EAAA,mDAAAiN,EAAAjN,EAAA,gDAQA,SAAAgN,GACAA,EAAA,sBACAA,EAAA,gBAFA,CAGCA,WA0BcjK,EAAA,gBAzBkB2J,EAAA,EACjCxK,cACAkB,SAAAC,WACAlB,KAAA+K,SAAA,IAA4BD,EAAA,EAE5B/K,IAAAmH,GACA,OAAAlH,KAAA+K,SAAAhM,IAAAmI,GAEAnH,IAAAmH,GACA,OAAAlH,KAAA+K,SAAArJ,IAAAwF,GAEAnH,IAAAiL,EAAA9D,GACAlH,KAAA+K,SAAAlJ,IAAAqF,EAAA8D,GACAhL,KAAAiL,MAAmB3J,KAAA4F,IAEnBnH,UACAC,KAAAiL,MAAmB3J,KAAAuJ,EAAAK,SAEnBnL,eACAC,KAAAiL,MAAmB3J,KAAAuJ,EAAAM,YAEnBpL,QACAC,KAAA+K,SAAAK,kGClCAxK,EAAA,EAAAyK,EAAA,IAAAC,EAAAzN,EAAA,mDAAAiN,EAAAjN,EAAA,+CAAA0N,EAAA1N,EAAA,kDAAA2N,EAAA3N,EAAA,mDAOO,MAAA4N,EAAyB9M,OAAA4M,EAAA,EAAA5M,CAAM,eAO/B,SAAA0M,EAAAnC,GACP,OAAArF,QAAAqF,KAAAwC,QAAAD,GARsD7K,EAAA,EAAA6K,QAmB/CE,UAAuBH,EAAA,EAI9BzL,gBAAA6L,EAAA1C,GACAlJ,KAAAiL,MACA3J,KAAAsK,EACAC,OAAA,SACA3C,SAGAnJ,OAAA+L,EAAA5C,GAIA,QAHAN,IAAA5I,KAAA+L,kBACA/L,KAAA+L,gBAAA,IAAuCjB,EAAA,GAEvC9K,KAAA+L,gBAAArK,IAAAoK,GACA,UAAAjM,iDAAuEiM,EAAAE,eAEvEhM,KAAA+L,gBAAAlK,IAAAiK,EAAA5C,GACAA,aAA4BoC,EAAA,EAC5BpC,EAAAlF,KAAAiI,IACAjM,KAAA+L,gBAAAlK,IAAAiK,EAAAG,GACAjM,KAAAkM,gBAAAJ,EAAAG,GACAA,GACaE,IACb,MAAAA,IAGAd,EAAAnC,IACAlJ,KAAAkM,gBAAAJ,EAAA5C,GAGAnJ,eAAA+L,EAAAM,GAIA,QAHAxD,IAAA5I,KAAAqM,oBACArM,KAAAqM,kBAAA,IAAyCvB,EAAA,GAEzC9K,KAAAqM,kBAAA3K,IAAAoK,GACA,UAAAjM,mDAAyEiM,EAAAE,eAEzE,MAAArB,EAAA,IAAgCa,EAAA,EAChCc,GACAC,SAAAH,EAAA,IAAAzB,EAAAM,MAA8D3J,KAAA,gBAC9DqJ,eAEA3K,KAAAqM,kBAAAxK,IAAAiK,EAAAQ,GACAtM,KAAAkM,gBAAAJ,EAAAQ,GAEAvM,IAAA+L,GACA,IAAA9L,KAAA+L,kBAAA/L,KAAA0B,IAAAoK,GACA,YAEA,MAAA5C,EAAAlJ,KAAA+L,gBAAAhN,IAAA+M,GACA,GAAAT,EAAAnC,GACA,OAAAA,EAEA,GAAAA,aAA4BoC,EAAA,EAC5B,YAEA,MAAAkB,EAAAtD,IAYA,OAXAlJ,KAAA+L,gBAAAlK,IAAAiK,EAAAU,GACAA,EAAAxI,KAAAiI,KArEO,SAAA/C,GACP,OAAArF,QAAAqF,GACAA,EAAA7J,eAAA,eACA6J,EAAA7J,eAAA,YACAgM,EAAAnC,EAAAuD,WAkEAC,CAAAT,KACAA,IAAAQ,SAEAzM,KAAA+L,gBAAAlK,IAAAiK,EAAAG,GACAjM,KAAAkM,gBAAAJ,EAAAG,GACAA,GACSE,IACT,MAAAA,IAEA,KAEApM,YAAA+L,GACA,OAAA9L,KAAAqM,mBAAArM,KAAA2M,YAAAb,GAGA9L,KAAAqM,kBAAAtN,IAAA+M,GAFA,KAIA/L,IAAA+L,GACA,OAAAjI,QAAA7D,KAAA+L,iBAAA/L,KAAA+L,gBAAArK,IAAAoK,IAEA/L,YAAA+L,GACA,OAAAjI,QAAA7D,KAAAqM,mBAAArM,KAAAqM,kBAAA3K,IAAAoK,KAEClL,EAAA,EAAA+K,EACc/K,EAAA,mGC/Gf,IAAAC,EAAAhD,EAAA,+CAAA+O,EAAA/O,EAAA,mDAAAgP,EAAAhP,EAAA,2DAsEe+C,EAAA,gBAnEsBgM,EAAA,EACrC7M,cACAkB,QACAjB,KAAA8M,UAAA,IAA6BD,EAAA,EAC7B7M,KAAA+M,wBAAA,IAA2ClM,EAAA,EAC3Cb,KAAAgN,0BAAA,IAA6CnM,EAAA,EAC7Cb,KAAAW,IAAAX,KAAA8M,WAQA9M,KAAAW,KAAkBF,QAPlB,KACAT,KAAAiN,eACAjN,KAAA+M,wBAAAG,OAAAlN,KAAAiN,cACAjN,KAAAgN,0BAAAE,OAAAlN,KAAAiN,cACAjN,KAAAiN,kBAAArE,MAKAuE,SAAAF,GACAjN,KAAAiN,eACAjN,KAAA+M,wBAAAG,OAAAlN,KAAAiN,cACAjN,KAAAgN,0BAAAE,OAAAlN,KAAAiN,eAEAjN,KAAAiN,eAEAlN,OAAA+L,EAAAsB,GACApN,KAAA8M,UAAAO,OAAAvB,EAAAsB,GAEArN,eAAA+L,EAAAS,GACAvM,KAAA8M,UAAAQ,eAAAxB,EAAAS,GAEAxM,IAAA+L,GACA,OAAA9L,KAAA8M,UAAApL,IAAAoK,IAAAjI,QAAA7D,KAAAiN,cAAAjN,KAAAiN,aAAAvL,IAAAoK,IAEA/L,YAAA+L,GACA,OAAA9L,KAAA8M,UAAAH,YAAAb,IAAAjI,QAAA7D,KAAAiN,cAAAjN,KAAAiN,aAAAN,YAAAb,IAEA/L,IAAA+L,EAAAyB,GAAA,GACA,OAAAvN,KAAAwN,KAAA1B,EAAAyB,EAAA,MAAAvN,KAAA+M,yBAEAhN,YAAA+L,EAAAyB,GAAA,GACA,OAAAvN,KAAAwN,KAAA1B,EAAAyB,EAAA,cAAAvN,KAAAgN,2BAEAjN,KAAA+L,EAAAyB,EAAAE,EAAAC,GACA,MAAAC,EAAAJ,GAAAvN,KAAAiN,aAAAjN,KAAA8M,YAAA9M,KAAA8M,UAAA9M,KAAAiN,cACA,QAAAhP,EAAA,EAAuBA,EAAA0P,EAAAnL,OAAuBvE,IAAA,CAC9C,MAAA2P,EAAAD,EAAA1P,GACA,IAAA2P,EACA,SAEA,MAAA1E,EAAA0E,EAAAH,GAAA3B,GACA+B,EAAAH,EAAA3O,IAAA6O,OACA,GAAA1E,EACA,OAAAA,EAEA,QAAA2E,EAAArN,QAAAsL,GAAA,CACA,MAAA5L,EAAA0N,EAAAE,GAAAhC,EAAA1K,IACA,WAAAA,EAAAyK,QACA7L,KAAAyN,GAAA3B,EAAAyB,KAAAnM,EAAA8H,MACAlJ,KAAAiL,MAAmC3J,KAAA,iBAGnCtB,KAAAW,IAAAT,GACAwN,EAAA7L,IAAA+L,MAAAC,EAAA/B,KAGA,wGCnEA,IAAAjL,EAAAhD,EAAA,+CAAAkQ,EAAAlQ,EAAA,mDAAA0N,EAAA1N,EAAA,kDAAAmQ,EAAAnQ,EAAA,oDAAAoQ,EAAApQ,EAAA,uDAAAqQ,EAAArQ,EAAA,kEAAAsQ,EAAAtQ,EAAA,8DAAAuQ,EAAAvQ,EAAA,uDAAAwQ,EAAAxQ,EAAA,2DASA,MAAAyQ,EAAA,IAAyBzN,EAAA,EACzB0N,EAAkBN,EAAA,EAAIhE,KAAA,MACfuE,EAAejD,EAAA,EAAMvG,IAAA,cAAmBpE,EAAA,EAAA4N,QAIxCC,EAIP1O,cAIAC,KAAA0O,oBAAA,EAIA1O,KAAA2O,wBACA3O,KAAA4O,aAAA,IAAgCT,EAAA,EAChCnO,KAAAK,YACAL,KAAA6O,aACA7O,KAAA8O,gBAAA,IAAmCjO,EAAA,EACnCb,KAAA+O,eACA/O,KAAAgP,iBAAAhP,KAAAiP,OAAAhF,KAAAjK,MACAA,KAAAkP,iBAAAlP,KAAAmP,WAAAlF,KAAAjK,MACQoO,EAAA,EAAiBvM,IAAA7B,MACzBoP,OAAA,EACAC,SAAA,KACArP,KAAAqP,YAEAC,SAAA,KACAtP,KAAAsP,WACAtP,KAAAS,WAEA8O,YAAAvP,KAAA4O,aACAhB,SAAA,IACA5N,KAAA4N,SAEA4B,kBACAC,WAAA,EACAC,qBAEA1P,KAAA2P,wBAEA5P,KAAA6P,QACAhH,IAAA5I,KAAA6P,WACA7P,KAAA6P,SAAA,IAAgChP,EAAA,GAEhC,IAAAiP,EAAA9P,KAAA6P,SAAA9Q,IAAA6Q,GAUA,OATAE,IACAA,EAAA,IAAAF,GACAT,WAAAnP,KAAAkP,iBACAK,YAAAvP,KAAA4O,aACA3E,KAAAjK,OAEAA,KAAAW,IAAAmP,GACA9P,KAAA6P,SAAAhO,IAAA+N,EAAAE,IAEAA,EAEA/P,YAGAA,YAGAgQ,iBACA,OAAA/P,KAAA+O,YAEAiB,0BACA,UAAAhQ,KAAA2O,sBAEA5O,sBAAAyP,GACA,MAAAvC,aAAeA,GAAeuC,EAC9BS,EAA6B7B,EAAA,EAAiBrP,IAAAiB,MAC9CiQ,EAAAT,eAAAvC,wBACArE,IAAA5I,KAAA8M,YACA9M,KAAA8M,UAAA,IAAqCoB,EAAA,EACrClO,KAAAW,IAAAX,KAAA8M,WACA9M,KAAAW,IAAAX,KAAA8M,UAAAgB,GAAA,aAAA9N,KAAAkP,oBAEAlP,KAAA8M,UAAAK,KAAAF,EACAjN,KAAAmP,cAEAc,EAAAT,iBAEAzP,kBAAAmQ,GACA,MAAAD,EAA6B7B,EAAA,EAAiBrP,IAAAiB,MAC9CiQ,EAAAP,gBAAAQ,EACA,MAAAH,EAAA/P,KAAAmQ,qBAAAD,GACAE,EAAApQ,KAAAqQ,aAAA,0BACAL,KACAM,EAAA3R,OAAAuH,KAAA6J,GACA,QAAA/P,KAAA0O,oBAAA,IAAA0B,EAAA5N,OAAA,CACA,MAAA+N,MAAAD,KAAA3R,OAAAuH,KAAAlG,KAAA+O,cACAyB,KACAC,KACA,IAAAC,GAAA,EACA,QAAAzS,EAAA,EAA2BA,EAAAsS,EAAA/N,OAA0BvE,IAAA,CACrD,MAAA0S,EAAAJ,EAAAtS,GACA,QAAAuS,EAAAhQ,QAAAmQ,GACA,SAEAH,EAAAlQ,KAAAqQ,GACA,MAAAC,EAAA5Q,KAAA+O,YAAA4B,GACAE,EAAA7Q,KAAA8Q,sBAAAf,EAAAY,GAAAV,EAAAT,eAAAvF,MACA,QAAAmG,EAAA5P,QAAAmQ,GAAA,CACAD,GAAA,EACA,MAAAK,EAAA/Q,KAAAqQ,6BAA4EM,KAC5E,QAAA1S,EAAA,EAAmCA,EAAA8S,EAAAvO,OAA0BvE,IAAA,CAC7D,MAAAkG,EAAA4M,EAAA9S,GAAA2S,EAAAC,GACA1M,EAAA6M,UAAA,IAAAhB,EAAAxP,QAAAmQ,IACAX,EAAA1P,KAAAqQ,GAEAA,KAAAZ,IACAU,EAAAE,GAAAxM,EAAAV,YAIA,CACA,MAAAU,EAAAoK,EAAAqC,EAAAC,GACA1M,EAAA6M,UAAA,IAAAhB,EAAAxP,QAAAmQ,IACAX,EAAA1P,KAAAqQ,GAEAA,KAAAZ,IACAU,EAAAE,GAAAxM,EAAAV,QAIA,GAAAiN,EAAA,CACA,MACAO,KADAjR,KAAAqQ,aAAA,gBAEA3P,QAAA,EAA4CwQ,WAAAP,mBAC5C,MAAAQ,GAAA,IAAAnB,EAAAxP,QAAAmQ,GACAS,GAAA,IAAAH,EAAAzQ,QAAA0Q,GACAC,IAAAC,IACAF,EAAA9S,KAAA4B,UAAA+O,YAAA0B,GACAQ,EAAA3Q,KAAA4Q,MAIAlR,KAAA+O,YAAA0B,EACAzQ,KAAA2O,qBAAAqB,MAEA,CACAhQ,KAAA0O,oBAAA,EACA,QAAAzQ,EAAA,EAA2BA,EAAAqS,EAAA9N,OAA0BvE,IAAA,CACrD,MAAA0S,EAAAL,EAAArS,GACA,mBAAA8R,EAAAY,GACAZ,EAAAY,GAAA3Q,KAAA8Q,sBAAAf,EAAAY,GAAAV,EAAAT,eAAAvF,MAGA+F,EAAA1P,KAAAqQ,GAGA3Q,KAAA2O,qBAAAqB,EACAhQ,KAAA+O,YAAApQ,OAAAkH,UAA+CkK,GAE/C/P,KAAA2O,qBAAAnM,OAAA,GACAxC,KAAAmP,aAGAkC,eACA,OAAArR,KAAA6O,UAEA9O,gBAAAsR,IACArR,KAAA6O,UAAArM,OAAA,GAAA6O,EAAA7O,OAAA,KACAxC,KAAA6O,UAAAwC,EACArR,KAAAmP,cAGApP,aAC6BqO,EAAA,EAAiBrP,IAAAiB,MAC9CoP,OAAA,EAEA,IAAAkC,EADAtR,KAAAuR,mBACAtC,GAGA,OAFAqC,EAAAtR,KAAAwR,gBAAAF,GACAtR,KAAA4O,aAAAxD,QACAkG,EAEAvR,aACA,MAAAkQ,EAA6B7B,EAAA,EAAiBrP,IAAAiB,MAC9CiQ,EAAAd,YACAc,EAAAd,aAGApP,SACA,OAAepB,OAAAqP,EAAA,EAAArP,CAAC,SAAUqB,KAAAqR,UAQ1BtR,aAAA0R,EAAAhO,GAEA,GADAA,EAAAtD,MAAAC,QAAAqD,SACAzD,KAAAX,eAAA,gBACA,IAAAqS,EAAApD,EAAAvP,IAAAiB,KAAA2R,aACAD,IACAA,EAAA,IAAoC7Q,EAAA,EACpCyN,EAAAzM,IAAA7B,KAAA2R,YAAAD,IAEA,IAAAE,EAAAF,EAAA3S,IAAA0S,GACAG,IACAA,KACAF,EAAA7P,IAAA4P,EAAAG,IAEAA,EAAAtR,QAAAmD,OAEA,CACA,MAAAoO,EAAA7R,KAAAqQ,aAAAoB,GACAzR,KAAA8O,gBAAAjN,IAAA4P,MAAAI,KAAApO,KAUA1D,oBAAA0R,GACA,MAAAK,KACA,IAAAH,EAAA3R,KAAA2R,YACA,KAAAA,GAAA,CACA,MAAAI,EAAAzD,EAAAvP,IAAA4S,GACA,GAAAI,EAAA,CACA,MAAAF,EAAAE,EAAAhT,IAAA0S,GACAI,GACAC,EAAAE,WAAAH,GAGAF,EAAAhT,OAAAsT,eAAAN,GAEA,OAAAG,EAQA/R,aAAA0R,GACA,IAAAK,EAAA9R,KAAA8O,gBAAA/P,IAAA0S,GACA,YAAA7I,IAAAkJ,EACAA,GAEAA,EAAA9R,KAAAkS,oBAAAT,GACAzR,KAAA8O,gBAAAjN,IAAA4P,EAAAK,GACAA,GAOA/R,sBAAAZ,EAAA8K,GACA,sBAAA9K,MAAAqP,KAA0F,IAAvB7P,OAAA0P,EAAA,EAAA1P,CAAuBQ,GAAA,MAC1FyJ,IAAA5I,KAAAmS,2BACAnS,KAAAmS,yBAAA,IAAoDpE,EAAA,GAEpD,MAAAqE,EAAApS,KAAAmS,yBAAApT,IAAAI,OACA,IAAAkT,UAAiBA,EAAAC,SAAmBF,EAKpC,YAJAxJ,IAAAyJ,GAAAC,IAAArI,IACAoI,EAAAlT,EAAA8K,QACAjK,KAAAmS,yBAAAtQ,IAAA1C,GAA6DkT,YAAAC,MAAArI,KAE7DoI,EAEA,OAAAlT,EAEAyO,eAMA,YALAhF,IAAA5I,KAAA8M,YACA9M,KAAA8M,UAAA,IAAiCoB,EAAA,EACjClO,KAAAW,IAAAX,KAAA8M,WACA9M,KAAAW,IAAAX,KAAA8M,UAAAgB,GAAA,aAAA9N,KAAAkP,oBAEAlP,KAAA8M,UAEA/M,qBAAAgQ,GACA,MAAAwC,EAAAvS,KAAAqQ,aAAA,oBACA,OAAAkC,EAAA/P,OAAA,EACA+P,EAAAC,OAAA,CAAAzC,EAAA0C,IACA9T,OAAAkH,UAAuCkK,EAAA0C,EAAArU,KAAA4B,KAAA+P,IAC1BpR,OAAAkH,UAAkBkK,IAE/BA,EAKAhQ,oBACA,MAAA2S,EAAA1S,KAAAqQ,aAAA,gBACA,OAAAqC,EAAAlQ,OAAA,EACAkQ,EAAAF,OAAA,CAAAvD,EAAA0D,KACA,MAAAC,EAAAD,EAAAvU,KAAA4B,KAAAiP,EAAAjP,KAAA+O,YAAA/O,KAAA6O,WACA,OAAA+D,IACAC,QAAAC,KAAA,yEACA7D,IAGajP,KAAAgP,kBAEbhP,KAAAgP,iBAOAjP,gBAAAuR,GACA,MAAAyB,EAAA/S,KAAAqQ,aAAA,eAWA,OAVA0C,EAAAvQ,OAAA,IACA8O,EAAAyB,EAAAP,OAAA,CAAAlB,EAAA0B,IACAA,EAAA5U,KAAA4B,KAAAsR,GACaA,SAEb1I,IAAA5I,KAAA6P,UACA7P,KAAA6P,SAAAnP,QAAAuS,IACAA,EAAAC,gBAGA5B,EAEAvR,wBACA,MAAAoT,EAAAnT,KAAAqQ,aAAA,oBACA8C,EAAA3Q,OAAA,GACA2Q,EAAAzS,QAAA0S,KAAAhV,KAAA4B,OAGAD,IAAAG,GACAF,KAAAK,SAAAC,KAAAJ,GAEAH,UACA,KAAAC,KAAAK,SAAAmC,OAAA,IACA,MAAAtC,EAAAF,KAAAK,SAAAgT,MACAnT,GACAA,EAAAO,YAICG,EAAA,EAAA6N,EAIDA,EAAA/C,MAAmB2C,EAAA,2GCpWnB,IAAAiF,EAAA,GACAC,EAAA,GAcA,SAAAC,EAAAxI,GACA,KAAAuI,GAdA,SAAAvI,GACA,wBAAAA,EAAAvC,MACA6K,EAAA,sBACAC,EAAA,yBAEA,qBAAAvI,EAAAvC,OAAA,kBAAAuC,EAAAvC,OAKA,UAAA5I,MAAA,iCAJAyT,EAAA,gBACAC,EAAA,gBAQAE,CAAAzI,GAGA,SAAA0I,EAAA1I,EAAA2I,EAAAC,GACAJ,EAAAxI,GACA,IAAA6I,GAAA,EACAC,EAAA,WACAD,IACAA,GAAA,EACA7I,EAAA+I,oBAAAT,EAAAQ,GACA9I,EAAA+I,oBAAAR,EAAAO,GACAF,MAGAD,IACA3I,EAAAxB,iBAAA+J,EAAAO,GACA9I,EAAAxB,iBAAA8J,EAAAQ,GAyBelT,EAAA,GACfoT,MAbA,SAAAzP,EAAAwL,EAAAkE,GACA,MAAAC,EAAAnE,EAAAoE,yBAA8DF,WAC9DP,EAAAnP,EAAA,KACAA,EAAA6P,UAAAvR,IAAAoR,GACAjM,sBAAA,WACAzD,EAAA6P,UAAAvR,IAAAqR,MAEK,KACL3P,EAAA6P,UAAAC,OAAAJ,GACA1P,EAAA6P,UAAAC,OAAAH,MAKAI,KAzBA,SAAA/P,EAAAwL,EAAAwE,EAAAC,GACA,MAAAN,EAAAnE,EAAA0E,wBAA6DF,WAC7Db,EAAAnP,EAAA,KACAA,EAAA6P,UAAAvR,IAAA0R,GACAvM,sBAAA,WACAzD,EAAA6P,UAAAvR,IAAAqR,MAEK,KACLM,yFC3CA5T,EAAA,EAAA8T,EAAA9T,EAAA,EAAA+T,EAAA/T,EAAA,EA4BO,SAAAgU,GACP,OAAA/Q,QAAA+Q,GAAA,iBAAAA,KAAAtT,OAAAuT,IA7BAjU,EAAA,EAiEO,SAAAkU,EAAA/E,EAAAsB,MACP,OACAA,WACAyD,oBACA/E,aACAzO,KAAAyT,IAtEAnU,EAAA,EAyEO,SAAAoU,EAAAC,KAAyC5D,GAChD,IACA6D,EADAnF,EAAAkF,EAEA9U,MAAAC,QAAA6U,KACA5D,EAAA4D,EACAlF,MAEA,mBAAAA,IACAmF,EAAAnF,EACAA,MAEA,OACAiF,MACAE,6BACA7D,WACAtB,aACAzO,KAAA6T,IAzFAvU,EAAA,EA+FO,UAAA2D,KAAcA,EAAA6Q,WAAiBC,WAAYvH,QAASwH,WAAA,QAAqBjE,GAChF,OACA2D,IAAAO,EAAAhR,KAAAiR,QAAA5R,cAAA,GACAmM,WAAAsF,EACA7M,WAAA4M,EACAK,OAAA3H,EACAuD,WACA/P,KAAAuT,EACAa,QAAAnR,EACAoR,KAAAJ,EAAAhR,QAAAqE,EAAArE,EAAAmF,KACA4L,aAzGA,IAAAM,EAAA/X,EAAA,kDAIO,MAAAkX,EAAcpW,OAAAiX,EAAA,EAAAjX,CAAM,2BAA4BiC,EAAA,EAAAmU,EAIhD,MAAAI,EAAcxW,OAAAiX,EAAA,EAAAjX,CAAM,2BAA4BiC,EAAA,EAAAuU,EAIhD,MAAAN,EAAiBlW,OAAAiX,EAAA,EAAAjX,CAAM,sDAIvB,SAAA+V,EAAAE,GACP,OAAA/Q,QAAA+Q,GAAA,iBAAAA,KAAAtT,OAAAyT,GAKO,SAAAJ,EAAAC,GACP,OAAA/Q,QAAA+Q,GAAA,iBAAAA,MAAAtT,OAAA6T,GAAAP,EAAAtT,OAAAuT,IAQO,SAAAU,EAAA9R,GACP,QAAAA,EAAA+R,+GChCA5U,EAAA,EAAAsS,EAAA,IAAA2C,EAAAhY,EAAA,6EACO,SAAAqV,EAAAlR,GACP,OAAWrD,OAAAkX,EAAA,EAAAlX,CAAe,CAAA0L,EAAAyL,KAC1BzL,EAAA0L,aAAA,cAAAD,EAAAzL,EAAAyL,GAAA9T,6GCHApB,EAAA,EAAAoV,EAAA,IAAAH,EAAAhY,EAAA,6EAAAoY,EAAApY,EAAA,8EAEO,SAAAmY,IACP,OAAWrX,OAAAkX,EAAA,EAAAlX,CAAe,CAAA0L,EAAAyL,KAClBnX,OAAAsX,EAAA,EAAAtX,CAAgB,WACxBqB,KAAAmP,cADQxQ,CAEC0L,iHCNTzJ,EAAA,EAAA2R,EAAA,IAAAsD,EAAAhY,EAAA,6EACO,SAAA0U,EAAAvQ,GACP,OAAWrD,OAAAkX,EAAA,EAAAlX,CAAe,CAAA0L,EAAAyL,KAC1BzL,EAAA0L,aAAA,mBAAAD,EAAAzL,EAAAyL,GAAA9T,8GCHApB,EAAA,EAAAsV,EAAA,IAAAC,EAAAtY,EAAA,wEAAAuY,EAAAvY,EAAA,2DAMO,SAAAqY,GAAAlB,IAAwBA,EAAAjF,gBAAAvH,gBAAAiN,YAAAY,YAAiEF,EAAA,uBAAsBG,KAAAC,kBAAA,SAAmCH,EAAA,KACzJ,gBAAA/L,GACAA,EAAAjL,UAAAoX,2BACAhB,QAAAR,EACAxM,aACAuH,aACA0F,SACAY,YACAE,4HCdA3V,EAAA,EAAA6V,EAAA,IAAAZ,EAAAhY,EAAA,6EAAA6Y,EAAA7Y,EAAA,uDASO,SAAA4Y,EAAA9F,EAAAgG,EAAmDD,EAAA,EAAIE,GAC9D,OAAWjY,OAAAkX,EAAA,EAAAlX,CAAe,CAAA0L,EAAAyL,KAC1BzL,EAAA0L,6BAA4CpF,IAAagG,EAAA1M,KAAA,OACzDI,EAAA0L,aAAA,yBAAApF,IACAiG,GAAAd,IACAzL,EAAA0L,aAAA,gBACApF,eACAO,SAAA4E,EAAAzL,EAAAyL,GAAAc,iHCVO,SAAAC,EAAAC,GACP,gBAAAzM,EAAAyL,EAAAiB,GACA,mBAAA1M,EACAyM,EAAAzM,EAAAjL,eAAAwJ,GAGAkO,EAAAzM,EAAAyL,IAZAlV,EAAA,EAAAiW,mGCAAjW,EAAA,EAAAoW,EAAA,IAAAC,EAAApZ,EAAA,mDAAAqZ,EAAArZ,EAAA,6EAAAsZ,EAAAtZ,EAAA,8EAMA,MAAAuZ,EAAA,IAAmCH,EAAA,EAQ5B,SAAAD,GAAAxY,KAAiBA,EAAA6Y,kBACxB,OAAW1Y,OAAAuY,EAAA,EAAAvY,CAAe,CAAA0L,EAAAyL,KAClBnX,OAAAwY,EAAA,EAAAxY,CAAgB,SAAAoR,GACxB,MAAAzD,EAAAtM,KAAA4N,SAAA0J,YAAA9Y,GACA,GAAA8N,EAAA,CACA,MAAAC,SAAuBA,EAAA5B,eAAwB2B,EAC/CiL,EAAAH,EAAArY,IAAAiB,UAUA,OATA,IAAAuX,EAAA/U,QACA4U,EAAAvV,IAAA7B,KAAAuX,IAEA,IAAAA,EAAA/W,QAAA8L,KACAtM,KAAAW,IAAAgK,EAAAmD,GAAA,kBACA9N,KAAAmP,gBAEAoI,EAAAjX,KAAAgM,IAEA+K,EAAA9K,IAAAwD,KAdQpR,CAgBC0L,0FChCTzJ,EAAA,EAAA4W,EAAA5W,EAAA,EA+CO,SAAAgQ,EAAAC,GACP,IAAA1M,EAGAA,EAFA,mBAAA0M,EACAA,EAAAnF,QAAkC+L,EAAA,EAClCC,EAAA9G,EAAAC,GAzCO,SAAAD,EAAAC,GACP,OACAG,SAAA,EACAvN,MAAAoN,GAyCA8G,CAAA/G,EAAAC,GAGA+G,EAAA/G,GACA2G,EAAA5G,EAAAC,GAGA6G,EAAA9G,EAAAC,GAEA,OAAA1M,GA/DA,IAAAsT,EAAA5Z,EAAA,2DACA,SAAA+Z,EAAAnU,GACA,0BAAA9E,OAAAS,UAAA4M,SAAA5N,KAAAqF,IAAAtD,MAAAC,QAAAqD,GAcO,SAAAiU,EAAA9G,EAAAC,GACP,OACAG,QAAAJ,IAAAC,EACApN,MAAAoN,GAGO,SAAA2G,EAAA5G,EAAAC,GACP,IAAAG,GAAA,EACA,MAAA6G,EAAAjH,GAAAgH,EAAAhH,GACAkH,EAAAjH,GAAA+G,EAAA/G,GACA,IAAAgH,IAAAC,EACA,OACA9G,SAAA,EACAvN,MAAAoN,GAGA,MAAAkH,EAAApZ,OAAAuH,KAAA0K,GACAoH,EAAArZ,OAAAuH,KAAA2K,GASA,OACAG,QARAA,EADA+G,EAAAvV,SAAAwV,EAAAxV,QAIAwV,EAAAC,KAAA/Q,GACA2J,EAAA3J,KAAA0J,EAAA1J,IAKAzD,MAAAoN,oGC5CAjQ,EAAA,EAAAsX,EAAA,IASOC,EAQAC,EAjBPC,EAAAxa,EAAA,qCAAAya,EAAAza,EAAA,gDAAA0a,EAAA1a,EAAA,4EAAA2a,EAAA3a,EAAA,yEAAA4a,EAAA5a,EAAA,oDAAA6a,EAAA7a,EAAA,uDAsBO,SAAAqa,EAAAS,SACPxN,UAAAwN,EACA5Y,eAAAuK,GACArJ,SAAAqJ,GACAtK,KAAA4Y,MAAAxU,SAAAyU,KACA7Y,KAAA8Y,QAAA,EACA9Y,KAAA+Y,wBACA/Y,KAAAgZ,oBACAC,YAA6BV,EAAA,GAE7BvY,KAAAkZ,KAAA9U,SAAAyU,KACA7Y,KAAAmZ,eAAAhB,EAAAiB,SAEArZ,OAAAmZ,GACA,MAAAG,GACA/X,KAAA8W,EAAAkB,OACAJ,QAEA,OAAAlZ,KAAAuZ,QAAAF,GAEAtZ,MAAAmZ,GACA,MAAAG,GACA/X,KAAA8W,EAAAoB,MACAN,QAEA,OAAAlZ,KAAAuZ,QAAAF,GAEAH,YACA,GAAAlZ,KAAAmZ,iBAAAhB,EAAAsB,SACA,UAAA5Z,MAAA,0DAEAG,KAAA4Y,MAAAM,EAEAA,WACA,OAAAlZ,KAAA4Y,MAEAc,YACA,OAAA1Z,KAAA8Y,OAEAY,aACA,GAAA1Z,KAAAmZ,iBAAAhB,EAAAsB,SACA,UAAA5Z,MAAA,wDAEAG,KAAA8Y,OAAAY,EAEA3Z,QAAA4Z,EAAAvV,UACA,GAAApE,KAAAmZ,iBAAAhB,EAAAsB,SACA,UAAA5Z,MAAA,qDAEAG,KAAA8Y,QAAA,EACA,MAAAc,EAAA5Z,KAAAkZ,KAEAlZ,KAAAW,KACAF,QAAA,KACAT,KAAA4Y,MAAAgB,KAGA5Z,KAAAuZ,SAEAL,KAAAS,EAAAE,yBACAvY,KAAA8W,EAAAkB,SAGAvZ,YAAAsR,GACArR,KAAA8Z,gBAAAzI,GAEAtR,cAAAgQ,GACA/P,KAAA+Z,kBAAAhK,GAEAhQ,kBAAAgQ,GACA/P,KAAA+Y,sBAAA/Y,KAAA+Y,qBAAAnL,WAAAmC,EAAAnC,UACA5N,KAAA+Y,qBAAAnL,UACA5N,KAAA+Y,qBAAAnL,SAAAnN,UAGAT,KAAA+Y,qBAAwCpa,OAAA2Z,EAAA,EAAA3Z,IAASoR,GACjD9O,MAAA+Y,uBAAyC/P,KAAAjK,KAAAiN,aAAA8C,EAAAnC,WACzC3M,MAAA8Y,kBAAAhK,GAEAhQ,SACA,GAAAC,KAAAmZ,iBAAAhB,EAAAsB,WAAAzZ,KAAAia,YACA,UAAApa,MAAA,0EAEA,OAAAG,KAAAia,YAAAvE,QAAAwE,WAAA,GAAAC,UAEApa,YAAAoE,GACA,IAAAI,EAAAJ,EAIA,MAHA,iBAAAA,GAAA,OAAAA,QAAAyE,IAAAzE,IACAI,EAAuB5F,OAAA8Z,EAAA,EAAA9Z,CAAC,WAAWwF,KAEnCI,EAEAxE,UACAkB,MAAAR,UAEAV,SAAAuB,KAAiBA,EAAA4X,SAIjB,GAHAA,IACAlZ,KAAAkZ,QAEAlZ,KAAAoa,cACA,OAAApa,KAAAoa,cAEApa,KAAAmZ,eAAAhB,EAAAsB,SACA,MAAAvZ,GACAO,QAAA,KACAT,KAAAmZ,iBAAAhB,EAAAsB,WACAzZ,KAAAia,iBAAArR,EACA5I,KAAAmZ,eAAAhB,EAAAiB,YAOA,OAHApZ,KAAAW,IAAAT,GACAF,KAAAoa,cAAAla,EACAF,KAAAgZ,mBAAAra,OAAAkH,UAAsD7F,KAAAgZ,oBAA4BqB,MAAAra,KAAA8Y,SAClFxX,GACA,KAAA8W,EAAAkB,OACAtZ,KAAAia,YAAuCvB,EAAA,EAAG4B,OAAAta,KAAAkZ,KAAAlZ,UAAAgZ,oBAC1C,MACA,KAAAZ,EAAAoB,MACAxZ,KAAAia,YAAuCvB,EAAA,EAAG6B,MAAAva,KAAAkZ,KAAAlZ,UAAAgZ,oBAG1C,OAAAhZ,KAAAoa,eAMA,OAHI/B,EAAA,GACI1Z,OAAA6Z,EAAA,EAAA7Z,IACRwM,EAAA/L,UAAA,oBACA+L,GA5IA,SAAAgN,GACAA,IAAA,uBACAA,IAAA,uBAFA,CAGCA,WAKD,SAAAC,GACAA,IAAA,mBACAA,IAAA,iBAFA,CAGCA,wGCrBDxX,EAAA,EAWO,SAAA4Z,GACP,OAAW7b,OAAA8b,EAAA,EAAA9b,CAAe0L,IAC1BA,EAAA0L,aAAA,mBAAAyE,MAbA5Z,EAAA,EAwCO,SAAA4Z,EAAAE,GACP,MAAAC,EAAA,IAA8BC,EAAA,EAAQJ,GAKtC,OAJAE,EAAApN,eAAAuN,EAAAlQ,IACAgQ,EAAAG,eAAAnQ,GACA,IAAAgQ,EAAA5b,QAEA4b,GA9CA/Z,EAAA,EAAAma,EAAA,IAAA1C,EAAAxa,EAAA,qCAAA+c,EAAA/c,EAAA,2DAAAmd,EAAAnd,EAAA,oEAAA4c,EAAA5c,EAAA,6EAAAod,EAAApd,EAAA,0EAAAqd,EAAArd,EAAA,uDAMA,MAAAsd,EAAA,QACON,EAAA/V,OAAA,SA4CA,SAAAiW,EAAApC,GACP,IAAAyC,gBAAAzC,EACA5Y,cACAkB,SAAAC,WAIAlB,KAAAqb,4BAIArb,KAAAsb,qBAAA,EAIAtb,KAAAub,UAEAxb,MAAAyb,GAIA,OAHAxb,KAAAsb,qBACAtb,KAAAyb,2BAEAtb,MAAAC,QAAAob,GACAA,EAAAtZ,IAAAwZ,GAAA1b,KAAA2b,eAAAD,IAEA1b,KAAA2b,eAAAH,GAKAzb,sBACAC,KAAAsb,qBAAA,EAEAvb,eAAA2b,GACA,QAAA9S,IAAA8S,GAAA,OAAAA,EACA,OAAAA,EAEA,MAAAE,EAAA5b,KAAA+P,WAAA6L,iBACAC,EAAA7b,KAAA8b,+BAAAJ,GACA,IAAAK,KACA,OAAAF,GAIAD,EAAAC,IACAE,EAAAzb,KAAAsb,EAAAC,IAEA7b,KAAAub,OAAAM,GACAE,EAAAzb,KAAAN,KAAAub,OAAAM,IAGAE,EAAAzb,KAAAN,KAAAgc,qBAAAH,IAEAE,EAAAE,KAAA,OAZApJ,QAAAC,qBAA6C4I,yBAC7C,MAaA3b,2BACA,MAAAya,MAAmBA,MAAaxa,KAAA+P,WAChCmM,EAAAlc,KAAAqQ,aAAA,oBACArQ,KAAAgc,uBACAhc,KAAAgc,qBAAAE,EAAA1J,OAAA,CAAA2J,EAAAC,KACA,MAAAC,EAAAlB,EAAAjU,EAAAkV,EAAAC,GAAAb,EAAyEnD,EAAA,EAAc+D,GAAA,iBAAAC,MAAA,KAEvF,OADArc,KAAAqb,yBAAA/a,KAAA4G,GACAvI,OAAAkH,UAA2CsW,EAAAX,QAE3Cxb,KAAA8b,+BAAAI,EA3FA1J,OAAA,CAAA8J,EAAAC,KACA5d,OAAAuH,KAAAqW,GAAA7b,QAAAwG,IACAoV,EAAAC,EAAArV,QAEAoV,QAyFAtc,KAAAub,OAAAvb,KAAAqb,yBAAA7I,OAAA,CAAA4J,EAAAI,IACA7d,OAAAkH,UAAuCuW,EAAA5B,EAAAgC,QAEvCxc,KAAAsb,qBAAA,IAkBA,OAfIjD,EAAA,GACI1Z,OAAAsc,EAAA,EAAAtc,CAAY,QAAUuc,EAAA,GACtBvc,OAAAsc,EAAA,EAAAtc,CAAY,eAAiBuc,EAAA,IACrCE,EAAAhc,UAAA,4BACAgc,EAAa/C,EAAA,GACL1Z,OAAAqc,EAAA,EAAArc,EACRH,KAAAqc,EACAxD,cAAA,CAAAmD,EAAAzK,IACAA,EAAAyK,UAC4BA,YAK5BY,yGCxIAzc,OAAAC,eAAAgC,EAAA,cAAA6C,OAAA,IAAA5F,EAAAU,EAAAqC,EAAA,2CAAA6b,IAAA7b,EAAA,mBAAA8b,EAAA9b,EAAA,OAAA+b,EAAA/b,EAAA,SAAAgc,EAAA,IAQOH,EARPpE,EAAAxa,EAAA,qCAAAgf,EAAAhf,EAAA,6DAAAif,EAAAjf,EAAA,mEAAAkf,EAAAlf,EAAA,iDAAA4a,EAAA5a,EAAA,oDAAAmf,EAAAnf,EAAA,kDAAAof,EAAApf,EAAA,gEAAAqf,EAAArf,EAAA,0EAcO,SAAA6e,EAAAhH,GACP,IAAAgH,gBAA8DG,EAAA,EAC9D9c,SACA,MAAAgQ,EAAApR,OAAAuH,KAAAlG,KAAA+P,YAAAyC,OAAA,CAAA6C,EAAAnO,KACA,MAAAzD,EAAAzD,KAAA+P,WAAA7I,GAKA,OAJA,IAAAA,EAAA1G,QAAA,QACA0G,OAA+BA,KAE/BmO,EAAAnO,GAAAzD,EACA4R,OAEA,OAAmB1W,OAAA8Z,EAAA,EAAA9Z,EAAK4F,KAAAmR,EAAAL,MAAAtF,EAAAuF,SAAA,QAExBI,qBACA,OAAAA,IAMA,OAHAgH,EAAyBrE,EAAA,GACjB1Z,OAAAue,EAAA,EAAAve,IACR+d,GAGO,SAAAC,EAAA5F,EAAAoG,GACP,MAAA3U,WAAWA,EAAA6N,YAAAE,mBAAyCQ,EACpDqG,KAKA,OAJA5U,EAAA9H,QAAAiQ,IACA,MAAA0M,EAAA1M,EAAA/M,cACAwZ,EAAAC,GAAA1M,kBAEA2M,YACAvd,cACAkB,SAAAC,WACAlB,KAAA+O,eACA/O,KAAA6O,aACA7O,KAAAud,oBACAvd,KAAAwd,cAAA,EAEAzd,oBACA,GAAAC,KAAAwd,aACA,OAEA,MAAAC,MACAjV,WAAmBA,EAAAuH,aAAA0F,UAAiCsB,EACpD/W,KAAA+O,YAAApQ,OAAAkH,UAA+C7F,KAAA+O,YAAA/O,KAAA0d,wBAAAlV,QAC/CA,KAAAuH,GAAArP,QAAAiQ,IACA,MAAAlN,EAAAzD,KAAA2Q,GACAgN,EAAAhN,EAAA/O,QAAA,iBACAgH,IAAAnF,IACAzD,KAAA+O,YAAA4B,GAAAlN,GAEAka,IAAAhN,IACA8M,EAAAE,IACA5e,IAAA,IAAAiB,KAAA4d,aAAAjN,GACA9O,IAAA4B,GAAAzD,KAAA6d,aAAAlN,EAAAlN,KAGAga,EAAA9M,IACA5R,IAAA,IAAAiB,KAAA4d,aAAAjN,GACA9O,IAAA4B,GAAAzD,KAAA6d,aAAAlN,EAAAlN,MAGAgS,EAAA/U,QAAAiQ,IACA,MAAAmN,EAAAnN,EAAA/O,QAAA,UAAAgC,cACA+Z,EAAAhN,EAAA/O,QAAA,cACA6b,EAAAE,IACA5e,IAAA,IAAAiB,KAAA+d,kBAAApN,GACA9O,IAAA4B,GAAAzD,KAAAge,kBAAArN,EAAAlN,IAEAzD,KAAAud,iBAAA5M,QAAA/H,EACA5I,KAAA+O,YAAA4B,GAAA,KAAArG,KACA,MAAA2T,EAAAje,KAAA+d,kBAAApN,GACA,mBAAAsN,GACAA,KAAA3T,GAEAtK,KAAAke,cAAA,IAAAC,YAAAL,GACAM,SAAA,EACAC,OAAA/T,SAIA3L,OAAA2f,iBAAAte,KAAAyd,GACA,MAAApM,EAAAgF,IAAAoG,EAAA8B,KAAAve,KAAAka,WAAAla,KAAAqR,SACY1S,OAAAoe,EAAA,EAAApe,CAAI0S,GAAA3Q,QAAA8d,IAChBnI,IAAAoG,EAAAnG,MACAkI,EAAAhV,iBAAA,qBAAAxJ,KAAAye,WACAD,EAAAhV,iBAAA,wBAAAxJ,KAAAye,WACAze,KAAA6O,UAAAvO,KAAAoc,EAAA8B,KAGAxe,KAAA6O,UAAAvO,KAAwC3B,OAAA8Z,EAAA,EAAA9Z,EAAK4F,KAAAia,EAAAlJ,SAAA,WAG7CtV,KAAAwJ,iBAAA,oBAAAnC,GAAArH,KAAA0e,gBAAArX,IACA,MAAAsX,EAAA3e,KAAA+O,YACA6P,EAAA,IAAA5e,KAAA6e,eAMAjR,EAAA2I,IACAuI,EAAiCngB,OAAAse,EAAA,EAAAte,CAAqBqB,KAAA+e,YAAAnR,GAC1CoP,EAAA,EAAMxT,iBAAA,qBAAAsV,EAAAjd,IAAA7B,KAAA+e,cAClB,MAAA5T,EAA8BxM,OAAAme,EAAA,EAAAne,eARYke,EAAA,EAC1C9c,SACA,OAA2BpB,OAAA8Z,EAAA,EAAA9Z,CAACwe,EAAAwB,EAAAC,QAO5B5e,KAAAgf,WAAA,IAAA7T,EACAnL,KAAAgf,WAAAC,eAA2CrR,aAC3C5N,KAAAgf,WAAA1E,OAAAta,MACAA,KAAAwd,cAAA,EACAxd,KAAAke,cAAA,IAAAC,YAAA,qBACAC,SAAA,EACAC,OAAAre,QAGAD,YACA,GAAgBid,EAAA,GAAUA,EAAA,EAAMkC,QAAWlC,EAAA,EAAMkC,OAAA1E,MACjD,OAAuBwC,EAAA,EAAMkC,OAAAC,OAAenC,EAAA,EAAMkC,OAAA1E,OAGlDza,gBAAAsH,GACA,MAAA9C,EAAA8C,EAAAgX,OACA,GAAA9Z,EAAA6a,aAAApf,KAAA,CACAA,KAAA6O,UAAAoJ,KAAArD,KAAAc,UAAAnR,KAEAA,EAAAiF,iBAAA,qBAAAxJ,KAAAye,WACAze,KAAA6O,UAAAvO,KAAAoc,EAAAnY,IACAvE,KAAAye,YAIA1e,UACAC,KAAAgf,aACAhf,KAAAgf,WAAA7P,aACAnP,KAAAke,cAAA,IAAAC,YAAA,kBACAC,SAAA,EACAC,OAAAre,SAIAD,iBACA,OAAApB,OAAAkH,UAAmC7F,KAAA+O,YAAA/O,KAAAud,kBAEnCxd,eACA,OAAAsW,IAAAoG,EAAAnG,KACAtW,KAAA6O,UAAAwQ,OAAAC,KAAA5J,QAAA6J,UAAArd,IAAAod,IACA,MAAA5J,QAA2BA,GAAU4J,EACrC,OAA2B3gB,OAAA8Z,EAAA,EAAA9Z,CAAC2gB,EAAA3gB,OAAAkH,UAAwB6P,EAAA8J,sBAAA9J,EAAAmJ,mBAIpD7e,KAAA6O,UAGA9O,yBAAAvB,EAAAihB,EAAAhc,GACA,MAAAkN,EAAAyM,EAAA5e,GACAwB,KAAA6d,aAAAlN,EAAAlN,GAEA1D,kBAAA4Q,EAAAlN,GACAzD,KAAAud,iBAAA5M,GAAAlN,EAEA1D,kBAAA4Q,GACA,OAAA3Q,KAAAud,iBAAA5M,GAEA5Q,aAAA4Q,EAAAlN,GACA,mBAAAA,IACAA,EAAsBoZ,EAAA,IAAM,GAE5B7c,KAAA+O,YAAA4B,GAAAlN,EACAzD,KAAAye,UAEA1e,aAAA4Q,GACA,OAAA3Q,KAAA+O,YAAA4B,GAEA5Q,wBAAAyI,GACA,OAAAA,EAAAgK,OAAA,CAAAzC,EAAAY,KACA,MAAA0M,EAAA1M,EAAA/M,cACAH,EAAAzD,KAAA0f,aAAArC,GAIA,OAHA,OAAA5Z,IACAsM,EAAAY,GAAAlN,GAEAsM,OAGA4P,gCACA,OAAAhhB,OAAAuH,KAAAkX,GAEAmC,eACA,WAIO,SAAA3C,EAAAO,GACP,MAAApG,EAAAoG,EAAA/d,WAAA+d,EAAA/d,UAAAoX,0BACA,IAAAO,EACA,UAAAlX,MAAA,yGAEImd,EAAA,EAAM4C,eAAAvS,OAAA0J,EAAAvB,QAAAmH,EAAA5F,EAAAoG,KAxMV,SAAAV,GACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YAHA,CAICA,WAsMc7b,EAAA,8FCnNf,IAAAif,EAAAhiB,EAAA,kDAAAiiB,EAAAjiB,EAAA,iDAAAkiB,EAAAliB,EAAA,oDAAAmiB,EAAAniB,EAAA,2DAAAoiB,EAAApiB,EAAA,mDAKA,MACAqiB,EAAAC,6BACAC,EAAAD,+BACAE,KACAC,GAAA,yCACOC,EAAA,IAA8BN,EAAA,EAAUrf,EAAA,EAAA2f,EAC/C,MAAAxO,EAAA,IAAwBkO,EAAA,EACxBO,EAAA,IAA2BP,EAAA,EAC3BQ,EAAA,IAA8BR,EAAA,EAC9B,SAAAS,EAAAC,EAAAC,GACA,OAAQjiB,OAAAohB,EAAA,EAAAphB,CAAOgiB,IAAYhiB,OAAAohB,EAAA,EAAAphB,CAAOiiB,KACtBjiB,OAAAohB,EAAA,EAAAphB,CAAUgiB,KAAYhiB,OAAAohB,EAAA,EAAAphB,CAAUiiB,IAC5CD,EAAAjL,UAAAkL,EAAAlL,WAIAiL,EAAA3L,MAAA4L,EAAA5L,KAGA2L,EAAA5Q,WAAA7I,MAAA0Z,EAAA7Q,WAAA7I,QAKavI,OAAAohB,EAAA,EAAAphB,CAAOgiB,KAAYhiB,OAAAohB,EAAA,EAAAphB,CAAOiiB,YACvChY,IAAA+X,EAAAE,UAAA,iBAAAD,EAAA9L,qBAGA6L,EAAA7L,oBAAA8L,EAAA9L,mBAGA6L,EAAA5Q,WAAA7I,MAAA0Z,EAAA7Q,WAAA7I,MAOA,MAAA4Z,EAAA,WACA,UAAAjhB,MAAA,2EAmBA,SAAAkhB,EAAAC,GACA,oBAAAA,EACA,UAAAnhB,MAAA,gCAGA,SAAAohB,EAAAvL,EAAAoI,EAAAoD,EAAAC,EAAAlX,EAAAmX,GACA,MAAAjI,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACAC,EAAAnI,EAAAoI,QAAAxiB,IAAA2W,IAAA,IAAgEuK,EAAA,EAChE,GAAAmB,EAAA,CACA,MAAAI,EAAAF,EAAAviB,IAAAqiB,GACA1L,EAAA3B,oBAAA+J,EAAA0D,GAEA,IAAApY,EAAA8X,EAAAjX,QACA,UAAA6T,IACA1U,EAAA,SAAAqY,GACAP,EAAA9iB,KAAA4B,KAAAyhB,GACAA,EAAApX,OAAA,iBAAAoX,EAAApX,OAAA5G,OACSwG,SAETyL,EAAAlM,iBAAAsU,EAAA1U,GACAkY,EAAAzf,IAAAqf,EAAA9X,GACA+P,EAAAoI,QAAA1f,IAAA6T,EAAA4L,GAEA,SAAAI,EAAAhM,EAAA8F,GACA,GAAAA,EAAA,CACA,MAAAmG,EAAAnG,EAAAoG,MAAA,KACA,QAAA3jB,EAAA,EAAuBA,EAAA0jB,EAAAnf,OAAuBvE,IAC9CyX,EAAAtB,UAAAvR,IAAA8e,EAAA1jB,KAIA,SAAA4jB,EAAAnM,EAAA8F,GACA,GAAAA,EAAA,CACA,MAAAmG,EAAAnG,EAAAoG,MAAA,KACA,QAAA3jB,EAAA,EAAuBA,EAAA0jB,EAAAnf,OAAuBvE,IAC9CyX,EAAAtB,UAAAC,OAAAsN,EAAA1jB,KAgCA,SAAA6jB,EAAAC,EAAAC,EAAAZ,EAAA1L,EAAAyL,GACA,IAAAhd,EAOA,SALAA,EADA,mBAAA6d,EACAA,IAGAA,IAAAZ,GAEA,CACAX,EAAA1hB,IAAAoiB,EAAAE,mBACAY,wBAAA3hB,KAAA,KACAoV,EAAAqM,QAIA,SAAAG,EAAAxM,EAAAyM,EAAApS,EAAAoR,EAAAiB,GAAA,GACA,MACAd,EADAb,EAAA1hB,IAAAoiB,EAAAE,mBACAE,QAAAxiB,IAAA2W,GACA4L,GACA3iB,OAAAuH,KAAAic,GAAAzhB,QAAAqhB,IACA,MAAAM,EAAA,OAAAN,EAAAO,OAAA,MAAAF,EACAtE,EAAAsE,EAAAL,IAAAO,OAAA,GACA,GAAAD,IAAAtS,EAAAgS,GAAA,CACA,MAAA9D,EAAAqD,EAAAviB,IAAAojB,EAAAJ,IACA9D,GACAvI,EAAA3B,oBAAA+J,EAAAG,MAMA,SAAAsE,EAAA7M,EAAA8M,EAAAC,EAAAtB,GACAA,EAAAuB,YAAAxC,GAAA,SAAAsC,EACA9M,EAAAiN,eAAAvC,EAAAoC,EAAAC,GAEA,SAAAD,GAAA,KAAAC,QAAA7Z,IAAA6Z,EACA/M,EAAAkN,gBAAAJ,GAGA9M,EAAAmN,aAAAL,EAAAC,GAGA,SAAAK,EAAApN,EAAAqN,EAAAva,EAAA2Y,GACA,MAAA6B,EAAArkB,OAAAuH,KAAAsC,GACAya,EAAAD,EAAAxgB,OACA,QAAAvE,EAAA,EAAmBA,EAAAglB,EAAehlB,IAAA,CAClC,MAAAukB,EAAAQ,EAAA/kB,GACAwkB,EAAAja,EAAAga,GAEAC,IADAM,EAAAP,IAEAD,EAAA7M,EAAA8M,EAAAC,EAAAtB,IAIA,SAAA+B,EAAAxN,EAAAyM,EAAApS,EAAAoR,EAAAgC,GAAA,GACA,IAAAC,GAAA,EACA,MAAAC,EAAA1kB,OAAAuH,KAAA6J,GACAuT,EAAAD,EAAA7gB,OACA,QAAA6gB,EAAA7iB,QAAA,YAAA2hB,EAAA3G,QACA,GAAArb,MAAAC,QAAA+hB,EAAA3G,SACA,QAAAvd,EAAA,EAA2BA,EAAAkkB,EAAA3G,QAAAhZ,OAAuCvE,IAClE4jB,EAAAnM,EAAAyM,EAAA3G,QAAAvd,SAIA4jB,EAAAnM,EAAAyM,EAAA3G,SAGA2H,GAAAjB,EAAAxM,EAAAyM,EAAApS,EAAAoR,GACA,QAAAljB,EAAA,EAAmBA,EAAAqlB,EAAerlB,IAAA,CAClC,MAAA8jB,EAAAsB,EAAAplB,GACA,IAAA+jB,EAAAjS,EAAAgS,GACA,MAAAX,EAAAe,EAAAJ,GACA,eAAAA,EAAA,CACA,MAAAwB,EAAApjB,MAAAC,QAAAghB,SACAoC,EAAArjB,MAAAC,QAAA4hB,SACA,GAAAuB,KAAA/gB,OAAA,EACA,GAAAwf,GAAA,IAAAA,EAAAxf,OAKA,CACA,MAAAihB,MAAAD,GACA,QAAAvlB,EAAA,EAAmCA,EAAAslB,EAAA/gB,OAA4BvE,IAAA,CAC/D,MAAAylB,EAAAH,EAAAtlB,GACA,GAAAylB,EAAA,CACA,MAAAC,EAAAF,EAAAjjB,QAAAkjB,IACA,IAAAC,EACA9B,EAAAnM,EAAAgO,GAGAD,EAAAljB,OAAAojB,EAAA,IAIA,QAAA1lB,EAAA,EAAmCA,EAAAwlB,EAAAjhB,OAAuBvE,IAC1DyjB,EAAAhM,EAAA+N,EAAAxlB,SAnBA,QAAAA,EAAA,EAAmCA,EAAAslB,EAAA/gB,OAA4BvE,IAC/D4jB,EAAAnM,EAAA6N,EAAAtlB,SAuBA,QAAAA,EAAA,EAA+BA,EAAAulB,EAAAhhB,OAA2BvE,IAC1DyjB,EAAAhM,EAAA8N,EAAAvlB,SAIA,QAAAqiB,EAAA9f,QAAAuhB,GACAD,EAAAC,EAAAC,EAAAZ,EAAA1L,EAAAyL,QAEA,cAAAY,EAAA,CACA,MAAA6B,EAAAjlB,OAAAuH,KAAA8b,GACA6B,EAAAD,EAAAphB,OACA,QAAAshB,EAAA,EAA2BA,EAAAD,EAAgBC,IAAA,CAC3C,MAAAC,EAAAH,EAAAE,GACAE,EAAAhC,EAAA+B,GAEAC,KADA5C,KAAA2C,MAIAX,GAAA,EACAY,GACAjD,EAAAiD,GACA7C,EAAA8C,aAAAvO,EAAAqO,EAAAC,IAGA7C,EAAA8C,aAAAvO,EAAAqO,EAAA,WAQA,GAHA/B,GAAA,iBAAAZ,IACAY,EAAA,IAEA,UAAAD,EAAA,CACA,MAAAmC,EAAAxO,EAAAqM,GACAmC,IAAAlC,IACAtM,EAAA,iBACAwO,IAAAxO,EAAA,iBACAsM,IAAAZ,KACA1L,EAAAqM,GAAAC,EACAtM,EAAA,sBAAA9M,GAEAoZ,IAAAZ,IACAgC,GAAA,QAGA,WAAArB,GAAAC,IAAAZ,EAAA,CACA,MAAA9f,SAAA0gB,EACA,aAAA1gB,GAAA,IAAAygB,EAAAoC,YAAA,SAAAhB,EACAlC,EAAAvL,EAAAqM,EAAAO,OAAA,GAAAN,EAAAb,EAAApR,EAAA9F,KAAAmX,GAEA,WAAA9f,GAAA,cAAAygB,GAAAoB,EACAZ,EAAA7M,EAAAqM,EAAAC,EAAAb,GAEA,eAAAY,GAAA,cAAAA,EACArM,EAAAqM,KAAAC,IACAtM,EAAAqM,GAAAC,GAIAtM,EAAAqM,GAAAC,EAEAoB,GAAA,GAIA,OAAAA,EAEA,SAAAgB,EAAA/S,EAAAgT,EAAAC,GACA,QAAArmB,EAAAqmB,EAAuBrmB,EAAAoT,EAAA7O,OAAqBvE,IAC5C,GAAAyiB,EAAArP,EAAApT,GAAAomB,GACA,OAAApmB,EAGA,SAqBA,SAAAsmB,EAAA1D,EAAA5Q,GACA,OACA4Q,WACA2D,YACAhV,eAAAS,EAAAT,eACA6B,SAAAwP,EAAAxP,SACAyD,kBAAA+L,EAAAlP,YACA5B,WAAAE,EAAAP,gBACApO,KAAcye,EAAA,GAGP,SAAA0E,EAAApT,EAAAwP,GACP,QAAAjY,IAAAyI,EACA,OAAAgP,EAEAhP,EAAAlR,MAAAC,QAAAiR,SACA,QAAApT,EAAA,EAAmBA,EAAAoT,EAAA7O,QAAqB,CACxC,MAAAoS,EAAAvD,EAAApT,GACA,QAAA2K,IAAAgM,GAAA,OAAAA,EAAA,CAIA,oBAAAA,EACAvD,EAAApT,IA/BA+W,IAAA,GACAjF,cACAsB,cAAAzI,EACA+M,QA4BAf,IA3BAc,aAAA9M,EACAtH,KAAcye,EAAA,QA6Bd,GAAgBphB,OAAAohB,EAAA,EAAAphB,CAAOiW,QACvBhM,IAAAgM,EAAA7E,WAAA9F,OACA2K,EAAA7E,WAAA9F,KAAA4W,EACAjM,EAAAvD,UAAAuD,EAAAvD,SAAA7O,OAAA,GACAiiB,EAAA7P,EAAAvD,SAAAwP,QAIA,CACA,IAAAjM,EAAApF,eAAA,CACA,MAAAS,EAAAsQ,EAAAxhB,IAAA8hB,GACAjM,EAAApF,gBACAvF,KAAA4W,EACA5T,aAAAgD,EAAAT,eAAAvC,cAGA2H,EAAAvD,UAAAuD,EAAAvD,SAAA7O,OAAA,GACAiiB,EAAA7P,EAAAvD,SAAAwP,GAIA5iB,SA5BAoT,EAAA9Q,OAAAtC,EAAA,GA8BA,OAAAoT,EAEA,SAAAqT,EAAAC,EAAA1L,GACA,GAAQta,OAAAohB,EAAA,EAAAphB,CAAOgmB,MAAA5U,WAAA,CACf,MAAAkE,EAAA0Q,EAAA5U,WAAAkE,eACAA,IACA,mBAAAA,EACAA,EAAA0Q,EAAAjP,QAAAiP,EAAA5U,YAGAkJ,EAAAjF,MAAA2Q,EAAAjP,QAAAiP,EAAA5U,WAAAkE,KAKA,SAAA2Q,EAAAD,EAAA1L,EAAAkI,GACA,GAAQxiB,OAAAohB,EAAA,EAAAphB,CAAOgmB,GAAA,CACf,MAAAzb,EAAA6I,EAAAhT,IAAA4lB,EAAA9D,UACA2D,GAAAtb,IAAAyb,MAAAH,SAAAG,EAAAH,WAAAnE,EACA,GAAAsE,EAAA9D,SAAA,CACAN,EAAAxhB,IAAA4lB,EAAA9D,UACAvR,WACAyC,EAAA7E,OAAAyX,EAAA9D,UAEA,QAAA5iB,EAAA,EAAuBA,EAAAumB,EAAAhiB,OAAqBvE,IAC5C2mB,EAAAJ,EAAAvmB,GAAAgb,EAAAkI,OAGA,CACA,MAAAzL,EAAAiP,EAAAjP,QACA3F,EAAA4U,EAAA5U,WACA,GAAA4U,EAAAtT,UAAAsT,EAAAtT,SAAA7O,OAAA,EACA,QAAAvE,EAAA,EAA2BA,EAAA0mB,EAAAtT,SAAA7O,OAA2BvE,IACtD2mB,EAAAD,EAAAtT,SAAApT,GAAAgb,EAAAkI,GAGA,MAAA5M,EAAAxE,EAAAwE,cACA,GAAAxE,GAAAwE,EAAA,CACAmB,EAAAjN,MAAAoc,cAAA,OACA,MAAAC,EAAA,WACApP,KAAA0J,YAAA1J,EAAA0J,WAAA2F,YAAArP,GACAiP,EAAAjP,aAAA9M,GAEA,yBAAA2L,OACAA,EAAAmB,EAAAoP,EAAA/U,QAIAkJ,EAAA3E,KAAAqQ,EAAAjP,QAAA3F,EAAAwE,EAAAuQ,GAIApP,KAAA0J,YAAA1J,EAAA0J,WAAA2F,YAAArP,GACAiP,EAAAjP,aAAA9M,GAGA,SAAAoc,EAAA9K,EAAA+K,EAAAC,GACA,MAAA1G,EAAAtE,EAAA+K,GACA,GAAQtmB,OAAAohB,EAAA,EAAAphB,CAAO6f,OAAAxJ,IACf,OAEA,MAAA9N,IAAWA,GAAMsX,EAAAzO,WACjB,QAAAnH,IAAA1B,GAAA,OAAAA,EACA,QAAAjJ,EAAA,EAAuBA,EAAAic,EAAA1X,OAAuBvE,IAC9C,GAAAA,IAAAgnB,EAAA,CAEA,GAAAvE,EADAxG,EAAAjc,GACAugB,GAAA,CACA,IAAA2G,EACA,MAAAC,EAAAF,EAAAvT,YAAAnT,MAAA,UAEA2mB,EADwBxmB,OAAAohB,EAAA,EAAAphB,CAAO6f,GAC/BA,EAAA1J,kBAAAtW,MAAA,UAGAggB,EAAAxJ,IAEAnC,QAAAC,kBAA8CsS,oLAA6LD,iCAC3O,QAMA,SAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAP,EAAA/D,GAEAsE,IACA,MAAAC,GAFAF,KAAAnF,GAEA7d,OACAmjB,EAAAF,EAAAjjB,OACAyW,EAAAkI,EAAAlI,YACAE,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACAF,EAAAxiB,OAAAkH,UAAwCsb,GAAsByE,MAAAzE,EAAAyE,MAAA,IAC9D,IAEA3nB,EAFA4nB,EAAA,EACAC,EAAA,EAEAC,GAAA,EACA,KAAAD,EAAAH,GAAA,CACA,IAAAK,EAAAH,EAAAH,EAAAF,EAAAK,QAAAjd,EACA,MAAAqd,EAAAR,EAAAK,GAKA,GAJYnnB,OAAAohB,EAAA,EAAAphB,CAAOsnB,IAAA,mBAAAA,EAAA/Q,6BACnB+Q,EAAAC,SAAgCvnB,OAAAohB,EAAA,EAAAphB,CAAOqnB,MAAAE,SACvCC,EAAAF,EAAA9E,SAEAvY,IAAAod,GAAAtF,EAAAsF,EAAAC,GAAA,CACAJ,IACAC,IACAC,EACAK,EAAAJ,EAAAC,EAAA9E,EAAAmE,EAAAJ,EAAAM,EAAA9iB,MAAAmjB,GAAAJ,EAAA/iB,MAAAojB,KAAAC,EACA,SAEA,MAAAM,EAAAjC,EAAAoB,EAAAS,EAAAJ,EAAA,GACAS,EAAA,KACA,IAAAC,OAAA3d,EACA4d,EAAAhB,EACAiB,EAAAZ,EAAA,EACAjR,EAAA4Q,EAAAK,GAMA,GALAjR,IACAA,EAAA2Q,EAAA,GACAkB,EAAA,EACAD,EAAAjB,GAEA3Q,EAAA,CACA,IAAA8R,GAAA9R,GACA,KAAA8R,EAAAlkB,QAAA,CACA,MAAAmkB,EAAAD,EAAA9c,QACA,GAAwBjL,OAAAohB,EAAA,EAAAphB,CAAOgoB,GAAA,CAC/B,MAAAzd,EAAA6I,EAAAhT,IAAA4nB,EAAA9F,UACA3X,KAAAyb,MAAAH,UACAkC,EAAApmB,QAAA4I,EAAAyb,MAAAH,eAIA,GAAAmC,EAAAjR,QAAA,CACA,GAAAiR,EAAAjR,QAAAkR,gBAAAtB,EAAA5P,QACA,MAEA6Q,EAAAI,EAAAjR,QACA,MAGA,IAAAgR,EAAAlkB,QAAAgkB,EAAAC,KACAC,EAAApmB,KAAAkmB,EAAAC,IACAA,MAIAI,EAAAZ,EAAAX,EAAAG,EAAA/iB,MAAAojB,EAAA,GAAAS,EAAApF,EAAA+D,GACAR,EAAAuB,EAAAhN,GACA,MAAAgM,EAAAa,EACA3M,EAAA2N,qBAAAxmB,KAAA,KACA0kB,EAAAS,EAAAR,EAAAC,MAGA,IAAAc,IAAA,IAAAK,EAAA,CACAC,IACAR,IACA,SAEA,MAAAf,EAAA,KACA,MAAAE,EAAAY,EAIA,GAHA1M,EAAA2N,qBAAAxmB,KAAA,KACA0kB,EAAAQ,EAAAP,EAAAC,KAEgBvmB,OAAAohB,EAAA,EAAAphB,CAAOqnB,GAAA,CACvB,MAAA9c,EAAA6I,EAAAhT,IAAAinB,EAAAnF,UACA3X,IACA8c,EAAA9c,EAAAyb,OAGAC,EAAAoB,EAAA/M,EAAAkI,KAGA,IADAiD,EAAAqB,EAAAO,EAAAF,EAAA,IAMAQ,IACAvB,IACAc,IACAC,MAPAf,IACAc,KAQA,GAAAH,EAAAG,EAEA,IAAA5nB,EAAA4nB,EAA0B5nB,EAAAynB,EAAuBznB,IAAA,CACjD,MAAAgnB,EAAAhnB,EACAkb,EAAA2N,qBAAAxmB,KAAA,KACA0kB,EAAAQ,EAAAP,EAAAC,KAEA,IAAA6B,EAAAvB,EAAAvnB,GACA,GAAgBU,OAAAohB,EAAA,EAAAphB,CAAOooB,GAAA,CACvB,MAAA7d,EAAA6I,EAAAhT,IAAAgoB,EAAAlG,UACA3X,IACA6d,EAAA7d,EAAAyb,OAGAC,EAAAmC,EAAA9N,EAAAkI,GAGA,OAAA4E,EAEA,SAAAiB,EAAA1B,EAAAjU,EAAA8P,EAAA+D,EAAAyB,EAAAzM,GACA,QAAAtR,IAAAyI,EACA,OAEA,MAAA8H,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACAlI,EAAAoB,YAAA3R,IAAAsR,IACAA,EAAqBvb,OAAAmhB,EAAA,EAAAnhB,CAAS2mB,EAAA5P,QAAAwE,aAE9B,MAAAjB,EAAAkI,EAAAlI,YACAkI,EAAAxiB,OAAAkH,UAAwCsb,GAAsByE,MAAAzE,EAAAyE,MAAA,IAC9D,QAAA3nB,EAAA,EAAmBA,EAAAoT,EAAA7O,OAAqBvE,IAAA,CACxC,MAAA2W,EAAAvD,EAAApT,GACAgpB,EAAA5V,EAAA3O,MAAAzE,EAAA,GACA,GAAYU,OAAAohB,EAAA,EAAAphB,CAAOiW,GAAA,CACnB,GAAAuE,EAAAoB,OAAAL,EAAA,CACA,IAAAgN,OAAAte,EACA,UAAAA,IAAAgM,EAAAc,SAAAwE,EAAA1X,OAAA,IACA0kB,EAAAhN,EAAAtQ,UACAsd,EAAA1R,WAAAZ,EAAAI,IAAAmS,oBAAAve,KACAgM,EAAAc,QAAAwR,GAIAL,EAAAjS,EAAA0Q,EAAA2B,EAAAN,EAAAxF,EAAA+D,QAGA2B,EAAAjS,EAAA0Q,EAAA2B,EAAAN,EAAAxF,EAAA+D,EAAAhL,GAEAwK,EAAA9P,EAAAqE,IAGA,SAAAmO,EAAA1R,EAAAiP,EAAAO,EAAA/D,GAKA,GAJA6F,EAAArC,IAAAtT,SAAA8P,EAAA+D,OAAAtc,GACA,mBAAA+b,EAAAzP,iCAAAtM,IAAA+b,EAAAuB,UACAC,EAAAxB,EAAAxD,GAEAwD,EAAAnc,YAAAmc,EAAAlP,OAAA,CACAqN,EAAApN,KAAoCiP,EAAAnc,WAAA2Y,GACpC+B,EAAAxN,KAAoCiP,EAAA5U,WAAAoR,GAAA,GACpCe,EAAAxM,KAAwCiP,EAAAlP,OAAA0L,GAAA,GACxC,MAAA1L,EAAAkP,EAAAlP,OACA9W,OAAAuH,KAAAuP,GAAA/U,QAAAU,IACA6f,EAAAvL,EAAAtU,EAAAqU,EAAArU,GAAA+f,EAAAwD,EAAA5U,WAAA9F,aAIAiZ,EAAAxN,KAAoCiP,EAAA5U,WAAAoR,GAEpC,UAAAwD,EAAA5U,WAAA7I,UAAA0B,IAAA+b,EAAA5U,WAAA7I,IAAA,CACAqZ,EAAAxhB,IAAAmmB,GACA3V,YAAA1M,IAAA6S,KAAiDiP,EAAA5U,WAAA7I,OAEjDyd,EAAAuB,UAAA,EAEA,SAAAW,EAAAlC,EAAAW,EAAA2B,EAAAN,EAAAxF,EAAA+D,EAAAhL,GACA,IAAAxE,EACA,MAAAyD,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACA,GAAQ1iB,OAAAohB,EAAA,EAAAphB,CAAOgmB,GAAA,CACf,IAAA7P,kBAAaA,GAAoB6P,EACjC,MAAA0C,EAAA9G,EAAAxhB,IAAAmmB,GACA,IAAavmB,OAAAqhB,EAAA,EAAArhB,CAAuBmW,GAAA,CACpC,MAAA5L,EAAAme,EAAAzZ,WAAA7O,IAAA+V,GACA,UAAA5L,EACA,OAEA4L,EAAA5L,EAEA,MAAA2X,EAAA,IAAA/L,EACA6P,EAAA9D,WACAL,EAAA3e,IAAAgf,EAAAoG,GACA,MAAAhX,EAAAsQ,EAAAxhB,IAAA8hB,GACA5Q,EAAAd,WAAA,MACAc,EAAAb,OAAA,GACA,IAAAa,EAAAR,YACA0J,EAAAmO,YAAAhnB,MAAiDugB,WAAA+E,MAAAzE,EAAAyE,QACjD2B,EAAApG,MAGAlR,EAAAR,WAAA,EACAoR,EAAA7G,sBAAA2K,EAAAnV,gBACAqR,EAAA/G,gBAAA6K,EAAAtT,UACAwP,EAAA9G,kBAAA4K,EAAA5U,YACA,MAAAyU,EAAA3D,EAAA2G,aAEA,GADAvX,EAAAR,WAAA,EACA+U,EAAA,CACA,MAAAiD,EAAAhD,EAAAD,EAAA3D,GACA8D,EAAAH,SAAAiD,EACAT,EAAA1B,EAAAmC,EAAAtG,EAAAN,EAAA8F,EAAAzM,GAEAnI,EAAAlQ,IAAAgf,GAAmC8D,QAAAW,gBACnCrV,EAAAV,YAAAmY,UACAvO,EAAA2N,qBAAAxmB,KAAA,KACA2P,EAAAZ,iBAGA,CACA,GAAA8J,EAAAoB,YAAA3R,IAAAuQ,EAAAwO,aAIA,OAHAjS,EAAAiP,EAAAjP,QAAAyL,EAAAwG,aACAxO,EAAAwO,kBAAA/e,OACAwe,EAAA1R,EAAAiP,EAAAO,EAAA/D,GAGA,MAAAxH,EAAA2L,EAAA5P,QAAAkS,cACA,GAAAjD,EAAA3P,KAAA,iBAAA2P,EAAAhP,UAuBA/M,IAAA+b,EAAAjP,SACA,QAAAiP,EAAA3P,MACAmM,EAAAxiB,OAAAkH,UAAwDsb,GAAsBuB,UAAAxC,KAG9ExK,OADA9M,IAAAuY,EAAAuB,UACAiC,EAAAjP,QAAAiE,EAAAkO,gBAAA1G,EAAAuB,UAAAiC,EAAA3P,KAGA2P,EAAAjP,QAAAiP,EAAAjP,SAAAiE,EAAAtR,cAAAsc,EAAA3P,MAIAU,EAAAiP,EAAAjP,QAEA0R,EAAA1R,EAAAiP,EAAAO,EAAA/D,QACAvY,IAAA+d,EACArB,EAAA5P,QAAAiR,aAAAjR,EAAAiR,GAEAjR,EAAA0J,aAAAkG,EAAA5P,SACA4P,EAAA5P,QAAAoS,YAAApS,QAzCA,QAAA9M,IAAA+b,EAAAjP,SAAA4P,EAAA5P,QAAA,CACA,MAAAqS,EAAApD,EAAAjP,QAAAkS,cAAAI,eAAArD,EAAAhP,MACA2P,EAAA5P,UAAAiP,EAAAjP,QAAA0J,WACAkG,EAAA5P,QAAAuS,aAAAF,EAAApD,EAAAjP,UAGA4P,EAAA5P,QAAAoS,YAAAC,GACApD,EAAAjP,QAAA0J,YAAAuF,EAAAjP,QAAA0J,WAAA2F,YAAAJ,EAAAjP,UAEAiP,EAAAjP,QAAAqS,OAGArS,EAAAiP,EAAAjP,QAAAiE,EAAAqO,eAAArD,EAAAhP,WACA/M,IAAA+d,EACArB,EAAA5P,QAAAiR,aAAAjR,EAAAiR,GAGArB,EAAA5P,QAAAoS,YAAApS,IA6BA,SAAA0Q,EAAA8B,EAAAvD,EAAAxD,EAAAmE,EAAAJ,EAAAiD,EAAAlB,GACA,GAAQtoB,OAAAohB,EAAA,EAAAphB,CAAOgmB,GAAA,CACf,MAAA9D,SAAeA,GAAWqH,GAC1B5C,YAAeA,EAAAX,MAAApgB,GAA2BwN,EAAAhT,IAAA8hB,GAC1CuH,EAAA7jB,IAAAigB,SAAA0D,EAAA1D,SACAvU,EAAAsQ,EAAAxhB,IAAA8hB,GAOA,GANA5Q,EAAAR,WAAA,EACAoR,EAAA7G,sBAAA2K,EAAAnV,gBACAqR,EAAA/G,gBAAA6K,EAAAtT,UACAwP,EAAA9G,kBAAA4K,EAAA5U,YACAyQ,EAAA3e,IAAAgf,EAAAoG,GACAtC,EAAA9D,YACA,IAAA5Q,EAAAb,MAAA,CACA,MAAAoV,EAAA3D,EAAA2G,aACAvX,EAAAR,WAAA,EACAkV,EAAAH,SAAAC,EAAAD,EAAA3D,GACAwE,EAAAC,EAAA6C,EAAAC,EAAAzD,EAAAH,SAAA3D,EAAAM,QAGAlR,EAAAR,WAAA,EACAkV,EAAAH,SAAA4D,EAEArW,EAAAlQ,IAAAgf,GAAmC8D,QAAAW,gBACnCrV,EAAAV,YAAAmY,cAEA,CACA,GAAAQ,IAAAvD,EACA,SAEA,MAAAjP,EAAAiP,EAAAjP,QAAAwS,EAAAxS,QACA,IAAAqQ,GAAA,EACAsC,GAAA,EACA,GAAA1D,EAAA3P,KAAA,iBAAA2P,EAAAhP,KASA,CAIA,GAHAgP,EAAA3P,KAAA,IAAA2P,EAAA3P,IAAAmP,YAAA,WACAhD,EAAAxiB,OAAAkH,UAAoDsb,GAAsBuB,UAAAxC,KAE1EgI,EAAA7W,WAAAsT,EAAAtT,SAAA,CACA,MAAAA,EAAAoT,EAAAE,EAAAtT,SAAA6T,GACAP,EAAAtT,WACAgX,EACAhD,EAAAV,EAAAwD,EAAAD,EAAA7W,WAAA6T,EAAA/D,IAAAkH,EAEA,MAAAlG,EAjqBA,SAAAzM,EAAAwS,EAAAI,GACA,MAAAhT,SAAWA,EAAAvF,aAAAvH,cAAmC8f,EAC9C,IAAAhT,GAAA,SAAAA,EACA,OAAgBvF,WAAAmY,EAAAnY,WAAAvH,WAAA0f,EAAA1f,WAAAiN,OAAAyS,EAAAzS,QAEhB,YAAAH,EACA,OAAgBvF,cAAevH,WAAA0f,EAAA1f,mBAAsCI,EAAA6M,OAAAyS,EAAAzS,QAErE,IAAA8S,GACAxY,eAEA,OAAAvH,GACA+f,EAAA/f,cACA+f,EAAA9S,OAAAyS,EAAAzS,OACA9W,OAAAuH,KAAA6J,GAAArP,QAAAqhB,IACAwG,EAAAxY,WAAAgS,GAAArM,EAAAqM,KAEApjB,OAAAuH,KAAAsC,GAAA9H,QAAA8hB,IACA+F,EAAA/f,WAAAga,GAAA9M,EAAAgK,aAAA8C,KAEA+F,IAEAA,EAAAxY,WAAApR,OAAAuH,KAAA6J,GAAAyC,OAAA,CAAA6C,EAAAlW,KACAkW,EAAAlW,GAAAuW,EAAAgK,aAAAvgB,IAAAuW,EAAAvW,GACAkW,OAEAkT,GAuoBAC,CAAA9S,EAAAwS,EAAAvD,GACA,GAAAA,EAAAnc,YAAAmc,EAAAlP,OAAA,CACAqN,EAAApN,EAAAyM,EAAA3Z,WAAAmc,EAAAnc,WAAA2Y,GACAkH,EACAnF,EAAAxN,EAAAyM,EAAApS,WAAA4U,EAAA5U,WAAAoR,GAAA,IAAAkH,EACAnG,EAAAxM,EAAAyM,EAAA1M,OAAAkP,EAAAlP,OAAA0L,GAAA,GACA,MAAA1L,EAAAkP,EAAAlP,OACA9W,OAAAuH,KAAAuP,GAAA/U,QAAAU,IACA6f,EAAAvL,EAAAtU,EAAAqU,EAAArU,GAAA+f,EAAAwD,EAAA5U,WAAA9F,KAAAkY,EAAA1M,OAAArU,WAIAinB,EACAnF,EAAAxN,EAAAyM,EAAApS,WAAA4U,EAAA5U,WAAAoR,IACAkH,EAEA,UAAA1D,EAAA5U,WAAA7I,UAAA0B,IAAA+b,EAAA5U,WAAA7I,IAAA,CACAqZ,EAAAxhB,IAAAmmB,GACA3V,YAAA1M,IAAA6S,KAAyDiP,EAAA5U,WAAA7I,aApCzD,GAAAyd,EAAAhP,OAAAuS,EAAAvS,KAAA,CACA,MAAAoS,EAAArS,EAAAkS,cAAAI,eAAArD,EAAAhP,MAIA,OAHAD,EAAA0J,WAAA6I,aAAAF,EAAArS,GACAiP,EAAAjP,QAAAqS,EACAhC,GAAA,EAmCAsC,GAAA1D,EAAA5U,YAAA4U,EAAA5U,WAAA0Y,iBACA9D,EAAA5U,WAAA0Y,gBAAA/S,EAAAiP,EAAA5U,WAAAmY,EAAAnY,aAIA,SAAAoW,EAAAuC,EAAAvH,GAEAuH,EAAAC,4BAAAD,EAAA3Y,WACA,MAAAA,EAAA2Y,EAAAxT,6BAAAwT,EAAAxC,UACA/M,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACAqH,EAAA3Y,WAAApR,OAAAkH,UAAuCkK,EAAA2Y,EAAAC,6BACvCxP,EAAA8I,wBAAA3hB,KAAA,KACA,MAAAyP,EAAApR,OAAAkH,UAA2C6iB,EAAAxT,6BAAAwT,EAAAxC,UAAAwC,EAAAC,6BAC3CzF,EAAAwF,EAAAhT,QAAAgT,EAAA3Y,aAAAoR,GACAuH,EAAA3Y,eAGA,SAAA6Y,EAAAzH,GACA,MAAAhI,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACA,GAAAlI,EAAA8I,wBAAAzf,OACA,GAAA2e,EAAA9G,KACA,KAAAlB,EAAA8I,wBAAAzf,QAAA,CACA,MAAA4G,EAAA+P,EAAA8I,wBAAArY,QACAR,YAIYyW,EAAA,EAAM7X,sBAAA,KAClB,KAAAmR,EAAA8I,wBAAAzf,QAAA,CACA,MAAA4G,EAAA+P,EAAA8I,wBAAArY,QACAR,UAMA,SAAAyf,EAAA1H,GACA,MAAAhI,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACA,GAAAF,EAAA9G,KACA,KAAAlB,EAAA2N,qBAAAtkB,QAAA,CACA,MAAA4G,EAAA+P,EAAA2N,qBAAAld,QACAR,YAIYyW,EAAA,EAAMiJ,oBACNjJ,EAAA,EAAMiJ,oBAAA,KAClB,KAAA3P,EAAA2N,qBAAAtkB,QAAA,CACA,MAAA4G,EAAA+P,EAAA2N,qBAAAld,QACAR,UAKA2f,WAAA,KACA,KAAA5P,EAAA2N,qBAAAtkB,QAAA,CACA,MAAA4G,EAAA+P,EAAA2N,qBAAAld,QACAR,UAMA,SAAAme,EAAApG,GACA,MAAAhI,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACAF,EAAA9G,KACApL,EAAAkS,QAEAvY,IAAAuQ,EAAA6P,kBACA7P,EAAA6P,gBAAyCnJ,EAAA,EAAM7X,sBAAA,KAC/CiH,EAAAkS,MAIA,SAAAlS,EAAAkS,GACA,MAAAhI,EAAAsH,EAAA1hB,IAAAoiB,EAAAE,mBACAlI,EAAA6P,qBAAApgB,EACA,MACAqgB,MADA9P,EAAAmO,aAEAnO,EAAAmO,eACA2B,EAAAC,KAAA,CAAAC,EAAAC,IAAAD,EAAAvD,MAAAwD,EAAAxD,OACA,MAAAyD,KACA,KAAAJ,EAAAzmB,QAAA,CACA,MAAAqe,SAAeA,GAAWoI,EAAArf,QAC1B,GAAAmI,EAAArQ,IAAAmf,KAAA,IAAAwI,EAAA7oB,QAAAqgB,GAAA,CACAwI,EAAA/oB,KAAAugB,GACA,MAAAyE,YAAmBA,EAAAX,SAAqB5S,EAAAhT,IAAA8hB,GACxC5Q,EAAAsQ,EAAAxhB,IAAA8hB,GACAoG,EAAAzG,EAAAzhB,IAAA8hB,GACAuF,EAAAzB,EAAAJ,EAAA1D,EAAA5Q,GAAAkR,EAAAmE,EAAAzE,EAAAoG,MAGA4B,EAAA1H,GACAyH,EAAAzH,GAEO,MAAAmI,GACPhP,OAAA,SAAA8E,EAAAyB,EAAAM,MACA,MAAAlR,EAAAsQ,EAAAxhB,IAAA8hB,GACA0I,EAh1BA,SAAAC,EAAAnI,GACA,MAAAoI,GACA/G,eAAA9Z,EACAqb,aAAA,SAAAvO,EAAAqO,EAAAtgB,GACAiS,EAAAjN,MAAAsb,GAAAtgB,GAEAwV,aACAjF,MAAA8M,EACAxM,KAAAwM,GAEA8E,MAAA,EACArL,OAAA,EACAF,MAAA,EACAgH,qBAEA,OAAA1iB,OAAAkH,UAA2B4jB,EAAAD,GAi0B3BE,CAAAvI,EAAAN,GACA1H,GACA2N,wBACA7E,2BACAV,QAAA,IAAyBtB,EAAA,EACzB+I,qBAAApgB,EACA0e,eACA/M,MAAA4G,EAAA5G,QAAA,EACAoN,aAAAxG,EAAAwG,cAEAlH,EAAA5e,IAAAgf,EAAA1H,GACAoQ,EAAAI,SAAAvK,EACA,MAAAkG,GArlBAtQ,IAAA,GACAjF,cACAsB,cAAAzI,EACA8M,QAklBA6T,EAAAI,SAjlBAroB,KAAcye,EAAA,GAklBd,MAAAxb,EAAAggB,EAAA1D,EAAA5Q,GAeA,OAdA8B,EAAAlQ,IAAAgf,GAAmC8D,MAAApgB,EAAA+gB,gBACnCrV,EAAAd,WAAA,MACAc,EAAAb,OAAA,GACA,IAAAa,EAAAR,YACA0J,EAAAmO,YAAAhnB,MAAiDugB,WAAA+E,MAAA2D,EAAA3D,QACjD2B,EAAAgC,MAGAnD,EAAA7hB,IAAAglB,EAAAjE,EAAAzE,SACA1H,EAAA2N,qBAAAxmB,KAAA,KACA2P,EAAAZ,aAEAuZ,EAAAW,GACAV,EAAAU,IAEA7T,QAAA6T,EAAAI,WAGAhN,OAAA,SAAAkE,EAAAM,GACA,OAAAnhB,KAAAsa,OAAAlW,SAAAiE,cAAA,OAAAwY,EAAAM,IAEA5G,MAAA,SAAAvP,EAAA6V,EAAAM,MACAA,EAAA5G,OAAA,EACA4G,EAAAwG,aAAA3c,EACA,MAAA4e,EAAA5pB,KAAAsa,OAAAtP,EAAAoU,WAAAyB,EAAAM,GAGA,OAFAV,EAAA1hB,IAAA8hB,GACAtG,OAAA,EACAqP,IAEEhpB,EAAA,EAAA0oB,yJCx6BF,IAAAO,EAAoBhsB,EAAQ,sBAE5BisB,EAA4BjsB,EAAQ,wEAAmD4O,QAEvFsd,EAAAF,EAAApd,QACAsd,GAAAD,EAAAC,sDCLA,IAOAC,EACAC,EARArnB,EAAA5E,EAAAD,WAUA,SAAAmsB,IACA,UAAArqB,MAAA,mCAEA,SAAAsqB,IACA,UAAAtqB,MAAA,qCAsBA,SAAAuqB,EAAAC,GACA,GAAAL,IAAAjB,WAEA,OAAAA,WAAAsB,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAjB,WAEA,OADAiB,EAAAjB,WACAA,WAAAsB,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAAhjB,GACL,IAEA,OAAA2iB,EAAA5rB,KAAA,KAAAisB,EAAA,GACS,MAAAhjB,GAET,OAAA2iB,EAAA5rB,KAAA4B,KAAAqqB,EAAA,MAvCA,WACA,IAEAL,EADA,mBAAAjB,WACAA,WAEAmB,EAEK,MAAA7iB,GACL2iB,EAAAE,EAEA,IAEAD,EADA,mBAAAK,aACAA,aAEAH,EAEK,MAAA9iB,GACL4iB,EAAAE,GAjBA,GAwEA,IAEAI,EAFAhhB,KACAihB,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAD,IAGAC,GAAA,EACAD,EAAA/nB,OACA+G,EAAAghB,EAAAI,OAAAphB,GAEAkhB,GAAA,EAEAlhB,EAAA/G,QACAooB,KAIA,SAAAA,IACA,IAAAJ,EAAA,CAGA,IAAAK,EAAAT,EAAAM,GACAF,GAAA,EAGA,IADA,IAAAM,EAAAvhB,EAAA/G,OACAsoB,GAAA,CAGA,IAFAP,EAAAhhB,EACAA,OACAkhB,EAAAK,GACAP,GACAA,EAAAE,GAAAM,MAGAN,GAAA,EACAK,EAAAvhB,EAAA/G,OAEA+nB,EAAA,KACAC,GAAA,EAnEA,SAAAQ,GACA,GAAAf,IAAAK,aAEA,OAAAA,aAAAU,GAGA,IAAAf,IAAAE,IAAAF,IAAAK,aAEA,OADAL,EAAAK,aACAA,aAAAU,GAEA,IAEAf,EAAAe,GACK,MAAA3jB,GACL,IAEA,OAAA4iB,EAAA7rB,KAAA,KAAA4sB,GACS,MAAA3jB,GAGT,OAAA4iB,EAAA7rB,KAAA4B,KAAAgrB,KAgDAC,CAAAJ,IAiBA,SAAAK,EAAAb,EAAAc,GACAnrB,KAAAqqB,MACArqB,KAAAmrB,QAYA,SAAAzrB,KA5BAkD,EAAAwoB,SAAA,SAAAf,GACA,IAAA/f,EAAA,IAAAnK,MAAAe,UAAAsB,OAAA,GACA,GAAAtB,UAAAsB,OAAA,EACA,QAAAvE,EAAA,EAAuBA,EAAAiD,UAAAsB,OAAsBvE,IAC7CqM,EAAArM,EAAA,GAAAiD,UAAAjD,GAGAsL,EAAAjJ,KAAA,IAAA4qB,EAAAb,EAAA/f,IACA,IAAAf,EAAA/G,QAAAgoB,GACAJ,EAAAQ,IASAM,EAAA9rB,UAAA2rB,IAAA,WACA/qB,KAAAqqB,IAAA9mB,MAAA,KAAAvD,KAAAmrB,QAEAvoB,EAAAyoB,MAAA,UACAzoB,EAAA0oB,SAAA,EACA1oB,EAAA2oB,OACA3oB,EAAA4oB,QACA5oB,EAAA6oB,QAAA,GACA7oB,EAAA0B,YAIA1B,EAAAkL,GAAApO,EACAkD,EAAA8oB,YAAAhsB,EACAkD,EAAA+oB,KAAAjsB,EACAkD,EAAAgpB,IAAAlsB,EACAkD,EAAAipB,eAAAnsB,EACAkD,EAAAkpB,mBAAApsB,EACAkD,EAAAqI,KAAAvL,EACAkD,EAAAmpB,gBAAArsB,EACAkD,EAAAopB,oBAAAtsB,EAEAkD,EAAAR,UAAA,SAAA5D,GAAqC,UAErCoE,EAAAqpB,QAAA,SAAAztB,GACA,UAAAqB,MAAA,qCAGA+C,EAAAspB,IAAA,WAA2B,WAC3BtpB,EAAAupB,MAAA,SAAAC,GACA,UAAAvsB,MAAA,mCAEA+C,EAAAypB,MAAA,WAA4B,4ECvL5BzrB,EAAA,EAkCO,SAAArB,EAAA8H,GACP,IAAAilB,KACA,QAAAhtB,KAAAC,EAAAZ,OAAAS,UAAAC,eAAAjB,KAAAmB,EAAAD,IAAA+H,EAAA7G,QAAAlB,GAAA,IACAgtB,EAAAhtB,GAAAC,EAAAD,IACA,SAAAC,GAAA,mBAAAZ,OAAAqH,sBACA,QAAA/H,EAAA,EAAAqB,EAAAX,OAAAqH,sBAAAzG,GAA4DtB,EAAAqB,EAAAkD,OAAcvE,IAAAoJ,EAAA7G,QAAAlB,EAAArB,IAAA,IAC1EquB,EAAAhtB,EAAArB,IAAAsB,EAAAD,EAAArB,KACA,OAAAquB,GAzCA1rB,EAAA,EA4CO,SAAAiR,EAAAxH,EAAAnD,EAAAqlB,GACP,IAAAhuB,EAAAD,EAAA4C,UAAAsB,OAAAgqB,EAAAluB,EAAA,EAAA+L,EAAA,OAAAkiB,IAAA5tB,OAAAmH,yBAAAuE,EAAAnD,GAAAqlB,EACA,oBAAAE,SAAA,mBAAAA,QAAAC,SAAAF,EAAAC,QAAAC,SAAA7a,EAAAxH,EAAAnD,EAAAqlB,QACA,QAAAtuB,EAAA4T,EAAArP,OAAA,EAA4CvE,GAAA,EAAQA,KAAAM,EAAAsT,EAAA5T,MAAAuuB,GAAAluB,EAAA,EAAAC,EAAAiuB,GAAAluB,EAAA,EAAAC,EAAA8L,EAAAnD,EAAAslB,GAAAjuB,EAAA8L,EAAAnD,KAAAslB,GACpD,OAAAluB,EAAA,GAAAkuB,GAAA7tB,OAAAC,eAAAyL,EAAAnD,EAAAslB;;;;;;;;;;;;;;;AAhCA7tB,OAAAguB,gBACsBxsB,MASfxB,OAAAkH,iEC1BP,IAAA+mB,EAGAA,EAAA,WACA,OAAA5sB,KADA,GAIA,IAEA4sB,KAAAC,SAAA,cAAAA,KAAA,EAAAC,MAAA,QACC,MAAAzlB,GAED,iBAAAnE,SACA0pB,EAAA1pB,QAOAlF,EAAAD,QAAA6uB,seCFA,IAAaG,gBAAapuB,OAAAquB,EAAA,EAAAruB,CAAYsuB,EAAA,IAG7BltB,YAAY+J,EAAYJ,GAC/B1J,KAAKktB,YAAcpjB,EACnB9J,KAAK+P,WAAWod,WAAWzjB,GAC3B1J,KAAKmP,aAGIpP,SACT,MAAMqtB,EAAQptB,KAAKqR,SAASnP,IAAI,CAAC0S,EAAOyY,KACvC,GAAIzY,EAAO,CACV,MAAM7E,GACLod,WAAazjB,IACZ1J,KAAKstB,YAAYD,EAAO3jB,UAGDd,IAArB5I,KAAKktB,cACRnd,EAAWwd,SAAWF,IAAUrtB,KAAKktB,aAEtCtY,EAAM7E,WAAUpR,OAAAkH,UAAQ+O,EAAM7E,WAAeA,GAE9C,OAAO6E,IAGR,OAAOjW,OAAA6uB,EAAA,EAAA7uB,CAAE,OAAS6c,QAASxb,KAAKwa,MAAMiT,EAAA,QACrC9uB,OAAA6uB,EAAA,EAAA7uB,CACC,MAEC6c,QAASxb,KAAKwa,MAAMiT,EAAA,gBAErBL,OA/BSL,EAAI1U,EAAA,GALhB1Z,OAAA+uB,EAAA,EAAA/uB,EACAqW,IAAK,YACLS,QAAS,gBAET9W,OAAAquB,EAAA,EAAAruB,CAAM8uB,IACMV,GAqCEnsB,EAAA,iDCtDf5C,EAAAD,SAAkB4vB,QAAA,gBAAAzU,KAAA,sBAAA0U,cAAA","file":"menu-1.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a59a9399cca9f1d650e4","import { createCompositeHandle } from './lang';\nimport Promise from '../shim/Promise';\n/**\n * No operation function to replace own once instance is destoryed\n */\nfunction noop() {\n    return Promise.resolve(false);\n}\n/**\n * No op function used to replace own, once instance has been destoryed\n */\nfunction destroyed() {\n    throw new Error('Call made to destroyed method');\n}\nexport class Destroyable {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.handles = [];\n    }\n    /**\n     * Register handles for the instance that will be destroyed when `this.destroy` is called\n     *\n     * @param {Handle} handle The handle to add for the instance\n     * @returns {Handle} a handle for the handle, removes the handle for the instance and calls destroy\n     */\n    own(handles) {\n        const handle = Array.isArray(handles) ? createCompositeHandle(...handles) : handles;\n        const { handles: _handles } = this;\n        _handles.push(handle);\n        return {\n            destroy() {\n                _handles.splice(_handles.indexOf(handle));\n                handle.destroy();\n            }\n        };\n    }\n    /**\n     * Destrpys all handers registered for the instance\n     *\n     * @returns {Promise<any} a promise that resolves once all handles have been destroyed\n     */\n    destroy() {\n        return new Promise((resolve) => {\n            this.handles.forEach((handle) => {\n                handle && handle.destroy && handle.destroy();\n            });\n            this.destroy = noop;\n            this.own = destroyed;\n            resolve(true);\n        });\n    }\n}\nexport default Destroyable;\n//# sourceMappingURL=Destroyable.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/Destroyable.mjs\n// module id = ./node_modules/@dojo/framework/core/Destroyable.mjs\n// module chunks = menu","import Map from '../shim/Map';\nimport { Destroyable } from './Destroyable';\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map();\n/**\n * Determines is the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString, targetString) {\n    if (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n        let regex;\n        if (regexMap.has(globString)) {\n            regex = regexMap.get(globString);\n        }\n        else {\n            regex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n            regexMap.set(globString, regex);\n        }\n        return regex.test(targetString);\n    }\n    else {\n        return globString === targetString;\n    }\n}\n/**\n * Event Class\n */\nexport class Evented extends Destroyable {\n    constructor() {\n        super(...arguments);\n        /**\n         * map of listeners keyed by event type\n         */\n        this.listenersMap = new Map();\n    }\n    emit(event) {\n        this.listenersMap.forEach((methods, type) => {\n            if (isGlobMatch(type, event.type)) {\n                [...methods].forEach((method) => {\n                    method.call(this, event);\n                });\n            }\n        });\n    }\n    on(type, listener) {\n        if (Array.isArray(listener)) {\n            const handles = listener.map((listener) => this._addListener(type, listener));\n            return {\n                destroy() {\n                    handles.forEach((handle) => handle.destroy());\n                }\n            };\n        }\n        return this._addListener(type, listener);\n    }\n    _addListener(type, listener) {\n        const listeners = this.listenersMap.get(type) || [];\n        listeners.push(listener);\n        this.listenersMap.set(type, listeners);\n        return {\n            destroy: () => {\n                const listeners = this.listenersMap.get(type) || [];\n                listeners.splice(listeners.indexOf(listener), 1);\n            }\n        };\n    }\n}\nexport default Evented;\n//# sourceMappingURL=Evented.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/Evented.mjs\n// module id = ./node_modules/@dojo/framework/core/Evented.mjs\n// module chunks = menu","import { assign } from '../shim/object';\nexport { assign } from '../shim/object';\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction copyArray(array, inherited) {\n    return array.map(function (item) {\n        if (Array.isArray(item)) {\n            return copyArray(item, inherited);\n        }\n        return !shouldDeepCopyObject(item)\n            ? item\n            : _mixin({\n                deep: true,\n                inherited: inherited,\n                sources: [item],\n                target: {}\n            });\n    });\n}\nfunction _mixin(kwArgs) {\n    const deep = kwArgs.deep;\n    const inherited = kwArgs.inherited;\n    const target = kwArgs.target;\n    const copied = kwArgs.copied || [];\n    const copiedClone = [...copied];\n    for (let i = 0; i < kwArgs.sources.length; i++) {\n        const source = kwArgs.sources[i];\n        if (source === null || source === undefined) {\n            continue;\n        }\n        for (let key in source) {\n            if (inherited || hasOwnProperty.call(source, key)) {\n                let value = source[key];\n                if (copiedClone.indexOf(value) !== -1) {\n                    continue;\n                }\n                if (deep) {\n                    if (Array.isArray(value)) {\n                        value = copyArray(value, inherited);\n                    }\n                    else if (shouldDeepCopyObject(value)) {\n                        const targetValue = target[key] || {};\n                        copied.push(source);\n                        value = _mixin({\n                            deep: true,\n                            inherited: inherited,\n                            sources: [value],\n                            target: targetValue,\n                            copied\n                        });\n                    }\n                }\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport function create(prototype, ...mixins) {\n    if (!mixins.length) {\n        throw new RangeError('lang.create requires at least one mixin object.');\n    }\n    const args = mixins.slice();\n    args.unshift(Object.create(prototype));\n    return assign.apply(null, args);\n}\nexport function deepAssign(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: false,\n        sources: sources,\n        target: target\n    });\n}\nexport function deepMixin(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Creates a new object using the provided source's prototype as the prototype for the new object, and then\n * deep copies the provided source's values into the new target.\n *\n * @param source The object to duplicate\n * @return The new object\n */\nexport function duplicate(source) {\n    const target = Object.create(Object.getPrototypeOf(source));\n    return deepMixin(target, source);\n}\n/**\n * Determines whether two values are the same value.\n *\n * @param a First value to compare\n * @param b Second value to compare\n * @return true if the values are the same; false otherwise\n */\nexport function isIdentical(a, b) {\n    return (a === b ||\n        /* both values are NaN */\n        (a !== a && b !== b));\n}\n/**\n * Returns a function that binds a method to the specified object at runtime. This is similar to\n * `Function.prototype.bind`, but instead of a function it takes the name of a method on an object.\n * As a result, the function returned by `lateBind` will always call the function currently assigned to\n * the specified property on the object as of the moment the function it returns is called.\n *\n * @param instance The context object\n * @param method The name of the method on the context object to bind to itself\n * @param suppliedArgs An optional array of values to prepend to the `instance[method]` arguments list\n * @return The bound function\n */\nexport function lateBind(instance, method, ...suppliedArgs) {\n    return suppliedArgs.length\n        ? function () {\n            const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n            // TS7017\n            return instance[method].apply(instance, args);\n        }\n        : function () {\n            // TS7017\n            return instance[method].apply(instance, arguments);\n        };\n}\nexport function mixin(target, ...sources) {\n    return _mixin({\n        deep: false,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction, ...suppliedArgs) {\n    return function () {\n        const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n        return targetFunction.apply(this, args);\n    };\n}\n/**\n * Returns an object with a destroy method that, when called, calls the passed-in destructor.\n * This is intended to provide a unified interface for creating \"remove\" / \"destroy\" handlers for\n * event listeners, timers, etc.\n *\n * @param destructor A function that will be called when the handle's `destroy` method is invoked\n * @return The handle object\n */\nexport function createHandle(destructor) {\n    let called = false;\n    return {\n        destroy: function () {\n            if (!called) {\n                called = true;\n                destructor();\n            }\n        }\n    };\n}\n/**\n * Returns a single handle that can be used to destroy multiple handles simultaneously.\n *\n * @param handles An array of handles with `destroy` methods\n * @return The handle object\n */\nexport function createCompositeHandle(...handles) {\n    return createHandle(function () {\n        for (let i = 0; i < handles.length; i++) {\n            handles[i].destroy();\n        }\n    });\n}\n//# sourceMappingURL=lang.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/lang.mjs\n// module id = ./node_modules/@dojo/framework/core/lang.mjs\n// module chunks = menu","function isFeatureTestThenable(value) {\n    return value && value.then;\n}\n/**\n * A cache of results of feature tests\n */\nexport const testCache = {};\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions = {};\n/**\n * A cache of unresolved thenables (probably promises)\n * @type {{}}\n */\nconst testThenables = {};\n/**\n * A reference to the global scope (`window` in a browser, `global` in NodeJS)\n */\nconst globalScope = (function () {\n    /* istanbul ignore else */\n    if (typeof window !== 'undefined') {\n        // Browsers\n        return window;\n    }\n    else if (typeof global !== 'undefined') {\n        // Node\n        return global;\n    }\n    else if (typeof self !== 'undefined') {\n        // Web workers\n        return self;\n    }\n    /* istanbul ignore next */\n    return {};\n})();\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures } = globalScope.DojoHasEnvironment || {};\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in globalScope) {\n    delete globalScope.DojoHasEnvironment;\n}\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache = staticFeatures\n    ? isStaticFeatureFunction(staticFeatures)\n        ? staticFeatures.apply(globalScope)\n        : staticFeatures\n    : {}; /* Providing an empty cache, if none was in the environment\n\n/**\n* AMD plugin function.\n*\n* Conditional loads modules based on a has feature test value.\n*\n* @param resourceId Gives the resolved module id to load.\n* @param require The loader require function with respect to the module that contained the plugin resource in its\n*                dependency list.\n* @param load Callback to loader that consumes result of plugin demand.\n*/\nexport function load(resourceId, require, load, config) {\n    resourceId ? require([resourceId], load) : load();\n}\n/**\n * AMD plugin function.\n *\n * Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n * value(s).\n *\n * @param resourceId The id of the module\n * @param normalize Resolves a relative module id into an absolute module id\n */\nexport function normalize(resourceId, normalize) {\n    const tokens = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n    let i = 0;\n    function get(skip) {\n        const term = tokens[i++];\n        if (term === ':') {\n            // empty string module name, resolves to null\n            return null;\n        }\n        else {\n            // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n            if (tokens[i++] === '?') {\n                if (!skip && has(term)) {\n                    // matched the feature, get the first value from the options\n                    return get();\n                }\n                else {\n                    // did not match, get the second value, passing over the first\n                    get(true);\n                    return get(skip);\n                }\n            }\n            // a module\n            return term;\n        }\n    }\n    const id = get();\n    return id && normalize(id);\n}\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature) {\n    const normalizedFeature = feature.toLowerCase();\n    return Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature, value, overwrite = false) {\n    const normalizedFeature = feature.toLowerCase();\n    if (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n        throw new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n    }\n    if (typeof value === 'function') {\n        testFunctions[normalizedFeature] = value;\n    }\n    else if (isFeatureTestThenable(value)) {\n        testThenables[feature] = value.then((resolvedValue) => {\n            testCache[feature] = resolvedValue;\n            delete testThenables[feature];\n        }, () => {\n            delete testThenables[feature];\n        });\n    }\n    else {\n        testCache[normalizedFeature] = value;\n        delete testFunctions[normalizedFeature];\n    }\n}\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name (if a string) or identifier (if an integer) of the feature to test.\n */\nexport default function has(feature) {\n    let result;\n    const normalizedFeature = feature.toLowerCase();\n    if (normalizedFeature in staticCache) {\n        result = staticCache[normalizedFeature];\n    }\n    else if (testFunctions[normalizedFeature]) {\n        result = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n        delete testFunctions[normalizedFeature];\n    }\n    else if (normalizedFeature in testCache) {\n        result = testCache[normalizedFeature];\n    }\n    else if (feature in testThenables) {\n        return false;\n    }\n    else {\n        throw new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n    }\n    return result;\n}\n/*\n * Out of the box feature tests\n */\n/* Environments */\n/* Used as a value to provide a debug only code path */\nadd('debug', true);\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function () {\n    if (typeof process === 'object' && process.versions && process.versions.node) {\n        return process.versions.node;\n    }\n});\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/has/has.mjs\n// module id = ./node_modules/@dojo/framework/has/has.mjs\n// module chunks = menu","import { isArrayLike, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from './support/has';\nimport './Symbol';\nexport let Map = global.Map;\nif (!true) {\n    Map = (_a = class Map {\n            constructor(iterable) {\n                this._keys = [];\n                this._values = [];\n                this[Symbol.toStringTag] = 'Map';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            const value = iterable[i];\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                }\n            }\n            /**\n             * An alternative to Array.prototype.indexOf using Object.is\n             * to check for equality. See http://mzl.la/1zuKO2V\n             */\n            _indexOfKey(keys, key) {\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    if (objectIs(keys[i], key)) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            get size() {\n                return this._keys.length;\n            }\n            clear() {\n                this._keys.length = this._values.length = 0;\n            }\n            delete(key) {\n                const index = this._indexOfKey(this._keys, key);\n                if (index < 0) {\n                    return false;\n                }\n                this._keys.splice(index, 1);\n                this._values.splice(index, 1);\n                return true;\n            }\n            entries() {\n                const values = this._keys.map((key, i) => {\n                    return [key, this._values[i]];\n                });\n                return new ShimIterator(values);\n            }\n            forEach(callback, context) {\n                const keys = this._keys;\n                const values = this._values;\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    callback.call(context, values[i], keys[i], this);\n                }\n            }\n            get(key) {\n                const index = this._indexOfKey(this._keys, key);\n                return index < 0 ? undefined : this._values[index];\n            }\n            has(key) {\n                return this._indexOfKey(this._keys, key) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._keys);\n            }\n            set(key, value) {\n                let index = this._indexOfKey(this._keys, key);\n                index = index < 0 ? this._keys.length : index;\n                this._keys[index] = key;\n                this._values[index] = value;\n                return this;\n            }\n            values() {\n                return new ShimIterator(this._values);\n            }\n            [Symbol.iterator]() {\n                return this.entries();\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Map;\nvar _a;\n//# sourceMappingURL=Map.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Map.mjs\n// module id = ./node_modules/@dojo/framework/shim/Map.mjs\n// module chunks = menu","import global from './global';\nimport { queueMicroTask } from './support/queue';\nimport './Symbol';\nimport has from './support/has';\nexport let ShimPromise = global.Promise;\nexport const isThenable = function isThenable(value) {\n    return value && typeof value.then === 'function';\n};\nif (!true) {\n    global.Promise = ShimPromise = (_a = class Promise {\n            /**\n             * Creates a new Promise.\n             *\n             * @constructor\n             *\n             * @param executor\n             * The executor function is called immediately when the Promise is instantiated. It is responsible for\n             * starting the asynchronous operation when it is invoked.\n             *\n             * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n             * successfully, or the `reject` function when the operation fails.\n             */\n            constructor(executor) {\n                /**\n                 * The current state of this promise.\n                 */\n                this.state = 1 /* Pending */;\n                this[Symbol.toStringTag] = 'Promise';\n                /**\n                 * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n                 */\n                let isChained = false;\n                /**\n                 * Whether or not this promise is in a resolved state.\n                 */\n                const isResolved = () => {\n                    return this.state !== 1 /* Pending */ || isChained;\n                };\n                /**\n                 * Callbacks that should be invoked once the asynchronous operation has completed.\n                 */\n                let callbacks = [];\n                /**\n                 * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n                 * enqueues callbacks for execution on the next event loop turn.\n                 */\n                let whenFinished = function (callback) {\n                    if (callbacks) {\n                        callbacks.push(callback);\n                    }\n                };\n                /**\n                 * Settles this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const settle = (newState, value) => {\n                    // A promise can only be settled once.\n                    if (this.state !== 1 /* Pending */) {\n                        return;\n                    }\n                    this.state = newState;\n                    this.resolvedValue = value;\n                    whenFinished = queueMicroTask;\n                    // Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n                    // wait an extra turn.\n                    if (callbacks && callbacks.length > 0) {\n                        queueMicroTask(function () {\n                            if (callbacks) {\n                                let count = callbacks.length;\n                                for (let i = 0; i < count; ++i) {\n                                    callbacks[i].call(null);\n                                }\n                                callbacks = null;\n                            }\n                        });\n                    }\n                };\n                /**\n                 * Resolves this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const resolve = (newState, value) => {\n                    if (isResolved()) {\n                        return;\n                    }\n                    if (isThenable(value)) {\n                        value.then(settle.bind(null, 0 /* Fulfilled */), settle.bind(null, 2 /* Rejected */));\n                        isChained = true;\n                    }\n                    else {\n                        settle(newState, value);\n                    }\n                };\n                this.then = (onFulfilled, onRejected) => {\n                    return new Promise((resolve, reject) => {\n                        // whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n                        // promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n                        // event loop.\n                        whenFinished(() => {\n                            const callback = this.state === 2 /* Rejected */ ? onRejected : onFulfilled;\n                            if (typeof callback === 'function') {\n                                try {\n                                    resolve(callback(this.resolvedValue));\n                                }\n                                catch (error) {\n                                    reject(error);\n                                }\n                            }\n                            else if (this.state === 2 /* Rejected */) {\n                                reject(this.resolvedValue);\n                            }\n                            else {\n                                resolve(this.resolvedValue);\n                            }\n                        });\n                    });\n                };\n                try {\n                    executor(resolve.bind(null, 0 /* Fulfilled */), resolve.bind(null, 2 /* Rejected */));\n                }\n                catch (error) {\n                    settle(2 /* Rejected */, error);\n                }\n            }\n            static all(iterable) {\n                return new this(function (resolve, reject) {\n                    const values = [];\n                    let complete = 0;\n                    let total = 0;\n                    let populating = true;\n                    function fulfill(index, value) {\n                        values[index] = value;\n                        ++complete;\n                        finish();\n                    }\n                    function finish() {\n                        if (populating || complete < total) {\n                            return;\n                        }\n                        resolve(values);\n                    }\n                    function processItem(index, item) {\n                        ++total;\n                        if (isThenable(item)) {\n                            // If an item Promise rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(fulfill.bind(null, index), reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(fulfill.bind(null, index));\n                        }\n                    }\n                    let i = 0;\n                    for (const value of iterable) {\n                        processItem(i, value);\n                        i++;\n                    }\n                    populating = false;\n                    finish();\n                });\n            }\n            static race(iterable) {\n                return new this(function (resolve, reject) {\n                    for (const item of iterable) {\n                        if (item instanceof Promise) {\n                            // If a Promise item rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(resolve, reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(resolve);\n                        }\n                    }\n                });\n            }\n            static reject(reason) {\n                return new this(function (resolve, reject) {\n                    reject(reason);\n                });\n            }\n            static resolve(value) {\n                return new this(function (resolve) {\n                    resolve(value);\n                });\n            }\n            catch(onRejected) {\n                return this.then(undefined, onRejected);\n            }\n        },\n        _a[Symbol.species] = ShimPromise,\n        _a);\n}\nexport default ShimPromise;\nvar _a;\n//# sourceMappingURL=Promise.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Promise.mjs\n// module id = ./node_modules/@dojo/framework/shim/Promise.mjs\n// module chunks = menu","import has from './support/has';\nimport global from './global';\nimport { getValueDescriptor } from './support/util';\nexport let Symbol = global.Symbol;\nif (!true) {\n    /**\n     * Throws if the value is not a symbol, used internally within the Shim\n     * @param  {any}    value The value to check\n     * @return {symbol}       Returns the symbol or throws\n     */\n    const validateSymbol = function validateSymbol(value) {\n        if (!isSymbol(value)) {\n            throw new TypeError(value + ' is not a symbol');\n        }\n        return value;\n    };\n    const defineProperties = Object.defineProperties;\n    const defineProperty = Object.defineProperty;\n    const create = Object.create;\n    const objPrototype = Object.prototype;\n    const globalSymbols = {};\n    const getSymbolName = (function () {\n        const created = create(null);\n        return function (desc) {\n            let postfix = 0;\n            let name;\n            while (created[String(desc) + (postfix || '')]) {\n                ++postfix;\n            }\n            desc += String(postfix || '');\n            created[desc] = true;\n            name = '@@' + desc;\n            // FIXME: Temporary guard until the duplicate execution when testing can be\n            // pinned down.\n            if (!Object.getOwnPropertyDescriptor(objPrototype, name)) {\n                defineProperty(objPrototype, name, {\n                    set: function (value) {\n                        defineProperty(this, name, getValueDescriptor(value));\n                    }\n                });\n            }\n            return name;\n        };\n    })();\n    const InternalSymbol = function Symbol(description) {\n        if (this instanceof InternalSymbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        return Symbol(description);\n    };\n    Symbol = global.Symbol = function Symbol(description) {\n        if (this instanceof Symbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        const sym = Object.create(InternalSymbol.prototype);\n        description = description === undefined ? '' : String(description);\n        return defineProperties(sym, {\n            __description__: getValueDescriptor(description),\n            __name__: getValueDescriptor(getSymbolName(description))\n        });\n    };\n    /* Decorate the Symbol function with the appropriate properties */\n    defineProperty(Symbol, 'for', getValueDescriptor(function (key) {\n        if (globalSymbols[key]) {\n            return globalSymbols[key];\n        }\n        return (globalSymbols[key] = Symbol(String(key)));\n    }));\n    defineProperties(Symbol, {\n        keyFor: getValueDescriptor(function (sym) {\n            let key;\n            validateSymbol(sym);\n            for (key in globalSymbols) {\n                if (globalSymbols[key] === sym) {\n                    return key;\n                }\n            }\n        }),\n        hasInstance: getValueDescriptor(Symbol.for('hasInstance'), false, false),\n        isConcatSpreadable: getValueDescriptor(Symbol.for('isConcatSpreadable'), false, false),\n        iterator: getValueDescriptor(Symbol.for('iterator'), false, false),\n        match: getValueDescriptor(Symbol.for('match'), false, false),\n        observable: getValueDescriptor(Symbol.for('observable'), false, false),\n        replace: getValueDescriptor(Symbol.for('replace'), false, false),\n        search: getValueDescriptor(Symbol.for('search'), false, false),\n        species: getValueDescriptor(Symbol.for('species'), false, false),\n        split: getValueDescriptor(Symbol.for('split'), false, false),\n        toPrimitive: getValueDescriptor(Symbol.for('toPrimitive'), false, false),\n        toStringTag: getValueDescriptor(Symbol.for('toStringTag'), false, false),\n        unscopables: getValueDescriptor(Symbol.for('unscopables'), false, false)\n    });\n    /* Decorate the InternalSymbol object */\n    defineProperties(InternalSymbol.prototype, {\n        constructor: getValueDescriptor(Symbol),\n        toString: getValueDescriptor(function () {\n            return this.__name__;\n        }, false, false)\n    });\n    /* Decorate the Symbol.prototype */\n    defineProperties(Symbol.prototype, {\n        toString: getValueDescriptor(function () {\n            return 'Symbol (' + validateSymbol(this).__description__ + ')';\n        }),\n        valueOf: getValueDescriptor(function () {\n            return validateSymbol(this);\n        })\n    });\n    defineProperty(Symbol.prototype, Symbol.toPrimitive, getValueDescriptor(function () {\n        return validateSymbol(this);\n    }));\n    defineProperty(Symbol.prototype, Symbol.toStringTag, getValueDescriptor('Symbol', false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toPrimitive, getValueDescriptor(Symbol.prototype[Symbol.toPrimitive], false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toStringTag, getValueDescriptor(Symbol.prototype[Symbol.toStringTag], false, false, true));\n}\n/**\n * A custom guard function that determines if an object is a symbol or not\n * @param  {any}       value The value to check to see if it is a symbol or not\n * @return {is symbol}       Returns true if a symbol or not (and narrows the type guard)\n */\nexport function isSymbol(value) {\n    return (value && (typeof value === 'symbol' || value['@@toStringTag'] === 'Symbol')) || false;\n}\n/**\n * Fill any missing well known symbols if the native Symbol is missing them\n */\n[\n    'hasInstance',\n    'isConcatSpreadable',\n    'iterator',\n    'species',\n    'replace',\n    'search',\n    'split',\n    'match',\n    'toPrimitive',\n    'toStringTag',\n    'unscopables',\n    'observable'\n].forEach((wellKnown) => {\n    if (!Symbol[wellKnown]) {\n        Object.defineProperty(Symbol, wellKnown, getValueDescriptor(Symbol.for(wellKnown), false, false));\n    }\n});\nexport default Symbol;\n//# sourceMappingURL=Symbol.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Symbol.mjs\n// module id = ./node_modules/@dojo/framework/shim/Symbol.mjs\n// module chunks = menu","import global from './global';\nimport { isArrayLike } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let WeakMap = global.WeakMap;\nif (!true) {\n    const DELETED = {};\n    const getUID = function getUID() {\n        return Math.floor(Math.random() * 100000000);\n    };\n    const generateName = (function () {\n        let startId = Math.floor(Date.now() % 100000000);\n        return function generateName() {\n            return '__wm' + getUID() + (startId++ + '__');\n        };\n    })();\n    WeakMap = class WeakMap {\n        constructor(iterable) {\n            this[Symbol.toStringTag] = 'WeakMap';\n            this._name = generateName();\n            this._frozenEntries = [];\n            if (iterable) {\n                if (isArrayLike(iterable)) {\n                    for (let i = 0; i < iterable.length; i++) {\n                        const item = iterable[i];\n                        this.set(item[0], item[1]);\n                    }\n                }\n                else {\n                    for (const [key, value] of iterable) {\n                        this.set(key, value);\n                    }\n                }\n            }\n        }\n        _getFrozenEntryIndex(key) {\n            for (let i = 0; i < this._frozenEntries.length; i++) {\n                if (this._frozenEntries[i].key === key) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        delete(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                entry.value = DELETED;\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                this._frozenEntries.splice(frozenIndex, 1);\n                return true;\n            }\n            return false;\n        }\n        get(key) {\n            if (key === undefined || key === null) {\n                return undefined;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                return entry.value;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return this._frozenEntries[frozenIndex].value;\n            }\n        }\n        has(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return true;\n            }\n            return false;\n        }\n        set(key, value) {\n            if (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n                throw new TypeError('Invalid value used as weak map key');\n            }\n            let entry = key[this._name];\n            if (!entry || entry.key !== key) {\n                entry = Object.create(null, {\n                    key: { value: key }\n                });\n                if (Object.isFrozen(key)) {\n                    this._frozenEntries.push(entry);\n                }\n                else {\n                    Object.defineProperty(key, this._name, {\n                        value: entry\n                    });\n                }\n            }\n            entry.value = value;\n            return this;\n        }\n    };\n}\nexport default WeakMap;\n//# sourceMappingURL=WeakMap.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/WeakMap.mjs\n// module id = ./node_modules/@dojo/framework/shim/WeakMap.mjs\n// module chunks = menu","import global from './global';\nimport { isArrayLike, isIterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\nexport let from;\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of;\n/* ES6 Array instance methods */\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin;\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill;\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find;\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex;\n/* ES7 Array instance methods */\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes;\nif (true && true) {\n    from = global.Array.from;\n    of = global.Array.of;\n    copyWithin = wrapNative(global.Array.prototype.copyWithin);\n    fill = wrapNative(global.Array.prototype.fill);\n    find = wrapNative(global.Array.prototype.find);\n    findIndex = wrapNative(global.Array.prototype.findIndex);\n}\nelse {\n    // It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n    // To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        if (isNaN(length)) {\n            return 0;\n        }\n        length = Number(length);\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    /**\n     * From ES6 7.1.4 ToInteger()\n     *\n     * @param value A value to convert\n     * @return An integer\n     */\n    const toInteger = function toInteger(value) {\n        value = Number(value);\n        if (isNaN(value)) {\n            return 0;\n        }\n        if (value === 0 || !isFinite(value)) {\n            return value;\n        }\n        return (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n    };\n    /**\n     * Normalizes an offset against a given length, wrapping it if negative.\n     *\n     * @param value The original offset\n     * @param length The total length to normalize against\n     * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n     */\n    const normalizeOffset = function normalizeOffset(value, length) {\n        return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n    };\n    from = function from(arrayLike, mapFunction, thisArg) {\n        if (arrayLike == null) {\n            throw new TypeError('from: requires an array-like object');\n        }\n        if (mapFunction && thisArg) {\n            mapFunction = mapFunction.bind(thisArg);\n        }\n        /* tslint:disable-next-line:variable-name */\n        const Constructor = this;\n        const length = toLength(arrayLike.length);\n        // Support extension\n        const array = typeof Constructor === 'function' ? Object(new Constructor(length)) : new Array(length);\n        if (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n            return array;\n        }\n        // if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n        // with the iteration on IE when using a NaN array length.\n        if (isArrayLike(arrayLike)) {\n            if (length === 0) {\n                return [];\n            }\n            for (let i = 0; i < arrayLike.length; i++) {\n                array[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n            }\n        }\n        else {\n            let i = 0;\n            for (const value of arrayLike) {\n                array[i] = mapFunction ? mapFunction(value, i) : value;\n                i++;\n            }\n        }\n        if (arrayLike.length !== undefined) {\n            array.length = length;\n        }\n        return array;\n    };\n    of = function of(...items) {\n        return Array.prototype.slice.call(items);\n    };\n    copyWithin = function copyWithin(target, offset, start, end) {\n        if (target == null) {\n            throw new TypeError('copyWithin: target must be an array-like object');\n        }\n        const length = toLength(target.length);\n        offset = normalizeOffset(toInteger(offset), length);\n        start = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        let count = Math.min(end - start, length - offset);\n        let direction = 1;\n        if (offset > start && offset < start + count) {\n            direction = -1;\n            start += count - 1;\n            offset += count - 1;\n        }\n        while (count > 0) {\n            if (start in target) {\n                target[offset] = target[start];\n            }\n            else {\n                delete target[offset];\n            }\n            offset += direction;\n            start += direction;\n            count--;\n        }\n        return target;\n    };\n    fill = function fill(target, value, start, end) {\n        const length = toLength(target.length);\n        let i = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        while (i < end) {\n            target[i++] = value;\n        }\n        return target;\n    };\n    find = function find(target, callback, thisArg) {\n        const index = findIndex(target, callback, thisArg);\n        return index !== -1 ? target[index] : undefined;\n    };\n    findIndex = function findIndex(target, callback, thisArg) {\n        const length = toLength(target.length);\n        if (!callback) {\n            throw new TypeError('find: second argument must be a function');\n        }\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        for (let i = 0; i < length; i++) {\n            if (callback(target[i], i, target)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\nif (true) {\n    includes = wrapNative(global.Array.prototype.includes);\n}\nelse {\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        length = Number(length);\n        if (isNaN(length)) {\n            return 0;\n        }\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    includes = function includes(target, searchElement, fromIndex = 0) {\n        let len = toLength(target.length);\n        for (let i = fromIndex; i < len; ++i) {\n            const currentElement = target[i];\n            if (searchElement === currentElement ||\n                (searchElement !== searchElement && currentElement !== currentElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n//# sourceMappingURL=array.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/array.mjs\n// module id = ./node_modules/@dojo/framework/shim/array.mjs\n// module chunks = menu","const globalObject = (function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n})();\nexport default globalObject;\n//# sourceMappingURL=global.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/global.mjs\n// module id = ./node_modules/@dojo/framework/shim/global.mjs\n// module chunks = menu","import './Symbol';\nimport { HIGH_SURROGATE_MAX, HIGH_SURROGATE_MIN } from './string';\nconst staticDone = { done: true, value: undefined };\n/**\n * A class that _shims_ an iterator interface on array like objects.\n */\nexport class ShimIterator {\n    constructor(list) {\n        this._nextIndex = -1;\n        if (isIterable(list)) {\n            this._nativeIterator = list[Symbol.iterator]();\n        }\n        else {\n            this._list = list;\n        }\n    }\n    /**\n     * Return the next iteration result for the Iterator\n     */\n    next() {\n        if (this._nativeIterator) {\n            return this._nativeIterator.next();\n        }\n        if (!this._list) {\n            return staticDone;\n        }\n        if (++this._nextIndex < this._list.length) {\n            return {\n                done: false,\n                value: this._list[this._nextIndex]\n            };\n        }\n        return staticDone;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n/**\n * A type guard for checking if something has an Iterable interface\n *\n * @param value The value to type guard against\n */\nexport function isIterable(value) {\n    return value && typeof value[Symbol.iterator] === 'function';\n}\n/**\n * A type guard for checking if something is ArrayLike\n *\n * @param value The value to type guard against\n */\nexport function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n}\n/**\n * Returns the iterator for an object\n *\n * @param iterable The iterable object to return the iterator for\n */\nexport function get(iterable) {\n    if (isIterable(iterable)) {\n        return iterable[Symbol.iterator]();\n    }\n    else if (isArrayLike(iterable)) {\n        return new ShimIterator(iterable);\n    }\n}\n/**\n * Shims the functionality of `for ... of` blocks\n *\n * @param iterable The object the provides an interator interface\n * @param callback The callback which will be called for each item of the iterable\n * @param thisArg Optional scope to pass the callback\n */\nexport function forOf(iterable, callback, thisArg) {\n    let broken = false;\n    function doBreak() {\n        broken = true;\n    }\n    /* We need to handle iteration of double byte strings properly */\n    if (isArrayLike(iterable) && typeof iterable === 'string') {\n        const l = iterable.length;\n        for (let i = 0; i < l; ++i) {\n            let char = iterable[i];\n            if (i + 1 < l) {\n                const code = char.charCodeAt(0);\n                if (code >= HIGH_SURROGATE_MIN && code <= HIGH_SURROGATE_MAX) {\n                    char += iterable[++i];\n                }\n            }\n            callback.call(thisArg, char, iterable, doBreak);\n            if (broken) {\n                return;\n            }\n        }\n    }\n    else {\n        const iterator = get(iterable);\n        if (iterator) {\n            let result = iterator.next();\n            while (!result.done) {\n                callback.call(thisArg, result.value, iterable, doBreak);\n                if (broken) {\n                    return;\n                }\n                result = iterator.next();\n            }\n        }\n    }\n}\n//# sourceMappingURL=iterator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/iterator.mjs\n// module id = ./node_modules/@dojo/framework/shim/iterator.mjs\n// module chunks = menu","import global from './global';\n/**\n * The smallest interval between two representable numbers.\n */\nexport const EPSILON = 1;\n/**\n * The maximum safe integer in JavaScript\n */\nexport const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n/**\n * The minimum safe integer in JavaScript\n */\nexport const MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n/**\n * Determines whether the passed value is NaN without coersion.\n *\n * @param value The value to test\n * @return true if the value is NaN, false if it is not\n */\nexport function isNaN(value) {\n    return typeof value === 'number' && global.isNaN(value);\n}\n/**\n * Determines whether the passed value is a finite number without coersion.\n *\n * @param value The value to test\n * @return true if the value is finite, false if it is not\n */\nexport function isFinite(value) {\n    return typeof value === 'number' && global.isFinite(value);\n}\n/**\n * Determines whether the passed value is an integer.\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isInteger(value) {\n    return isFinite(value) && Math.floor(value) === value;\n}\n/**\n * Determines whether the passed value is an integer that is 'safe,' meaning:\n *   1. it can be expressed as an IEEE-754 double precision number\n *   2. it has a one-to-one mapping to a mathematical integer, meaning its\n *      IEEE-754 representation cannot be the result of rounding any other\n *      integer to fit the IEEE-754 representation\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isSafeInteger(value) {\n    return isInteger(value) && Math.abs(value) <= MAX_SAFE_INTEGER;\n}\n//# sourceMappingURL=number.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/number.mjs\n// module id = ./node_modules/@dojo/framework/shim/number.mjs\n// module chunks = menu","import global from './global';\nimport has from './support/has';\nimport { isSymbol } from './Symbol';\nexport let assign;\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor;\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames;\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols;\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is;\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys;\n/* ES7 Object static methods */\nexport let getOwnPropertyDescriptors;\nexport let entries;\nexport let values;\nif (true) {\n    const globalObject = global.Object;\n    assign = globalObject.assign;\n    getOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n    getOwnPropertyNames = globalObject.getOwnPropertyNames;\n    getOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n    is = globalObject.is;\n    keys = globalObject.keys;\n}\nelse {\n    keys = function symbolAwareKeys(o) {\n        return Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    assign = function assign(target, ...sources) {\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        const to = Object(target);\n        sources.forEach((nextSource) => {\n            if (nextSource) {\n                // Skip over if undefined or null\n                keys(nextSource).forEach((nextKey) => {\n                    to[nextKey] = nextSource[nextKey];\n                });\n            }\n        });\n        return to;\n    };\n    getOwnPropertyDescriptor = function getOwnPropertyDescriptor(o, prop) {\n        if (isSymbol(prop)) {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n        else {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n    };\n    getOwnPropertyNames = function getOwnPropertyNames(o) {\n        return Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return Object.getOwnPropertyNames(o)\n            .filter((key) => Boolean(key.match(/^@@.+/)))\n            .map((key) => Symbol.for(key.substring(2)));\n    };\n    is = function is(value1, value2) {\n        if (value1 === value2) {\n            return value1 !== 0 || 1 / value1 === 1 / value2; // -0\n        }\n        return value1 !== value1 && value2 !== value2; // NaN\n    };\n}\nif (true) {\n    const globalObject = global.Object;\n    getOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n    entries = globalObject.entries;\n    values = globalObject.values;\n}\nelse {\n    getOwnPropertyDescriptors = function getOwnPropertyDescriptors(o) {\n        return getOwnPropertyNames(o).reduce((previous, key) => {\n            previous[key] = getOwnPropertyDescriptor(o, key);\n            return previous;\n        }, {});\n    };\n    entries = function entries(o) {\n        return keys(o).map((key) => [key, o[key]]);\n    };\n    values = function values(o) {\n        return keys(o).map((key) => o[key]);\n    };\n}\n//# sourceMappingURL=object.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/object.mjs\n// module id = ./node_modules/@dojo/framework/shim/object.mjs\n// module chunks = menu","import global from './global';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n/* ES6 static methods */\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint;\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw;\n/* ES6 instance methods */\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith;\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes;\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize;\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith;\n/* ES7 instance methods */\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd;\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart;\nif (true && true) {\n    fromCodePoint = global.String.fromCodePoint;\n    raw = global.String.raw;\n    codePointAt = wrapNative(global.String.prototype.codePointAt);\n    endsWith = wrapNative(global.String.prototype.endsWith);\n    includes = wrapNative(global.String.prototype.includes);\n    normalize = wrapNative(global.String.prototype.normalize);\n    repeat = wrapNative(global.String.prototype.repeat);\n    startsWith = wrapNative(global.String.prototype.startsWith);\n}\nelse {\n    /**\n     * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n     * Used by startsWith, includes, and endsWith.\n     *\n     * @return Normalized position.\n     */\n    const normalizeSubstringArgs = function (name, text, search, position, isEnd = false) {\n        if (text == null) {\n            throw new TypeError('string.' + name + ' requires a valid string to search against.');\n        }\n        const length = text.length;\n        position = position !== position ? (isEnd ? length : 0) : position;\n        return [text, String(search), Math.min(Math.max(position, 0), length)];\n    };\n    fromCodePoint = function fromCodePoint(...codePoints) {\n        // Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n        const length = arguments.length;\n        if (!length) {\n            return '';\n        }\n        const fromCharCode = String.fromCharCode;\n        const MAX_SIZE = 0x4000;\n        let codeUnits = [];\n        let index = -1;\n        let result = '';\n        while (++index < length) {\n            let codePoint = Number(arguments[index]);\n            // Code points must be finite integers within the valid range\n            let isValid = isFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n            if (!isValid) {\n                throw RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            }\n            else {\n                // Astral code point; split in surrogate halves\n                // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                let highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n                let lowSurrogate = (codePoint % 0x400) + LOW_SURROGATE_MIN;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += fromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n    raw = function raw(callSite, ...substitutions) {\n        let rawStrings = callSite.raw;\n        let result = '';\n        let numSubstitutions = substitutions.length;\n        if (callSite == null || callSite.raw == null) {\n            throw new TypeError('string.raw requires a valid callSite object with a raw value');\n        }\n        for (let i = 0, length = rawStrings.length; i < length; i++) {\n            result += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n        }\n        return result;\n    };\n    codePointAt = function codePointAt(text, position = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n        if (text == null) {\n            throw new TypeError('string.codePointAt requries a valid string.');\n        }\n        const length = text.length;\n        if (position !== position) {\n            position = 0;\n        }\n        if (position < 0 || position >= length) {\n            return undefined;\n        }\n        // Get the first code unit\n        const first = text.charCodeAt(position);\n        if (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n            // Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n            // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            const second = text.charCodeAt(position + 1);\n            if (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n                return (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n            }\n        }\n        return first;\n    };\n    endsWith = function endsWith(text, search, endPosition) {\n        if (endPosition == null) {\n            endPosition = text.length;\n        }\n        [text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n        const start = endPosition - search.length;\n        if (start < 0) {\n            return false;\n        }\n        return text.slice(start, endPosition) === search;\n    };\n    includes = function includes(text, search, position = 0) {\n        [text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n        return text.indexOf(search, position) !== -1;\n    };\n    repeat = function repeat(text, count = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n        if (text == null) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (count !== count) {\n            count = 0;\n        }\n        if (count < 0 || count === Infinity) {\n            throw new RangeError('string.repeat requires a non-negative finite count.');\n        }\n        let result = '';\n        while (count) {\n            if (count % 2) {\n                result += text;\n            }\n            if (count > 1) {\n                text += text;\n            }\n            count >>= 1;\n        }\n        return result;\n    };\n    startsWith = function startsWith(text, search, position = 0) {\n        search = String(search);\n        [text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n        const end = position + search.length;\n        if (end > text.length) {\n            return false;\n        }\n        return text.slice(position, end) === search;\n    };\n}\nif (true) {\n    padEnd = wrapNative(global.String.prototype.padEnd);\n    padStart = wrapNative(global.String.prototype.padStart);\n}\nelse {\n    padEnd = function padEnd(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padEnd requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText +=\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length);\n        }\n        return strText;\n    };\n    padStart = function padStart(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padStart requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText =\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length) +\n                    strText;\n        }\n        return strText;\n    };\n}\n//# sourceMappingURL=string.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/string.mjs\n// module id = ./node_modules/@dojo/framework/shim/string.mjs\n// module chunks = menu","import has, { add } from '../../has/has';\nimport global from '../global';\nexport default has;\nexport * from '../../has/has';\n/* ECMAScript 6 and 7 Features */\n/* Array */\nadd('es6-array', () => {\n    return (['from', 'of'].every((key) => key in global.Array) &&\n        ['findIndex', 'find', 'copyWithin'].every((key) => key in global.Array.prototype));\n}, true);\nadd('es6-array-fill', () => {\n    if ('fill' in global.Array.prototype) {\n        /* Some versions of Safari do not properly implement this */\n        return [1].fill(9, Number.POSITIVE_INFINITY)[0] === 1;\n    }\n    return false;\n}, true);\nadd('es7-array', () => 'includes' in global.Array.prototype, true);\n/* Map */\nadd('es6-map', () => {\n    if (typeof global.Map === 'function') {\n        /*\n    IE11 and older versions of Safari are missing critical ES6 Map functionality\n    We wrap this in a try/catch because sometimes the Map constructor exists, but does not\n    take arguments (iOS 8.4)\n     */\n        try {\n            const map = new global.Map([[0, 1]]);\n            return map.has(0) &&\n                typeof map.keys === 'function' &&\n                true &&\n                typeof map.values === 'function' &&\n                typeof map.entries === 'function';\n        }\n        catch (e) {\n            /* istanbul ignore next: not testing on iOS at the moment */\n            return false;\n        }\n    }\n    return false;\n}, true);\n/* Math */\nadd('es6-math', () => {\n    return [\n        'clz32',\n        'sign',\n        'log10',\n        'log2',\n        'log1p',\n        'expm1',\n        'cosh',\n        'sinh',\n        'tanh',\n        'acosh',\n        'asinh',\n        'atanh',\n        'trunc',\n        'fround',\n        'cbrt',\n        'hypot'\n    ].every((name) => typeof global.Math[name] === 'function');\n}, true);\nadd('es6-math-imul', () => {\n    if ('imul' in global.Math) {\n        /* Some versions of Safari on ios do not properly implement this */\n        return Math.imul(0xffffffff, 5) === -5;\n    }\n    return false;\n}, true);\n/* Object */\nadd('es6-object', () => {\n    return true &&\n        ['assign', 'is', 'getOwnPropertySymbols', 'setPrototypeOf'].every((name) => typeof global.Object[name] === 'function');\n}, true);\nadd('es2017-object', () => {\n    return ['values', 'entries', 'getOwnPropertyDescriptors'].every((name) => typeof global.Object[name] === 'function');\n}, true);\n/* Observable */\nadd('es-observable', () => typeof global.Observable !== 'undefined', true);\n/* Promise */\nadd('es6-promise', () => typeof global.Promise !== 'undefined' && true, true);\n/* Set */\nadd('es6-set', () => {\n    if (typeof global.Set === 'function') {\n        /* IE11 and older versions of Safari are missing critical ES6 Set functionality */\n        const set = new global.Set([1]);\n        return set.has(1) && 'keys' in set && typeof set.keys === 'function' && true;\n    }\n    return false;\n}, true);\n/* String */\nadd('es6-string', () => {\n    return ([\n        /* static methods */\n        'fromCodePoint'\n    ].every((key) => typeof global.String[key] === 'function') &&\n        [\n            /* instance methods */\n            'codePointAt',\n            'normalize',\n            'repeat',\n            'startsWith',\n            'endsWith',\n            'includes'\n        ].every((key) => typeof global.String.prototype[key] === 'function'));\n}, true);\nadd('es6-string-raw', () => {\n    function getCallSite(callSite, ...substitutions) {\n        const result = [...callSite];\n        result.raw = callSite.raw;\n        return result;\n    }\n    if ('raw' in global.String) {\n        let b = 1;\n        let callSite = getCallSite `a\\n${b}`;\n        callSite.raw = ['a\\\\n'];\n        const supportsTrunc = global.String.raw(callSite, 42) === 'a:\\\\n';\n        return supportsTrunc;\n    }\n    return false;\n}, true);\nadd('es2017-string', () => {\n    return ['padStart', 'padEnd'].every((key) => typeof global.String.prototype[key] === 'function');\n}, true);\n/* Symbol */\nadd('es6-symbol', () => typeof global.Symbol !== 'undefined' && typeof Symbol() === 'symbol', true);\n/* WeakMap */\nadd('es6-weakmap', () => {\n    if (typeof global.WeakMap !== 'undefined') {\n        /* IE11 and older versions of Safari are missing critical ES6 Map functionality */\n        const key1 = {};\n        const key2 = {};\n        const map = new global.WeakMap([[key1, 1]]);\n        Object.freeze(key1);\n        return map.get(key1) === 1 && map.set(key2, 2) === map && true;\n    }\n    return false;\n}, true);\n/* Miscellaneous features */\nadd('microtasks', () => true || false || true, true);\nadd('postmessage', () => {\n    // If window is undefined, and we have postMessage, it probably means we're in a web worker. Web workers have\n    // post message but it doesn't work how we expect it to, so it's best just to pretend it doesn't exist.\n    return typeof global.window !== 'undefined' && typeof global.postMessage === 'function';\n}, true);\nadd('raf', () => typeof global.requestAnimationFrame === 'function', true);\nadd('setimmediate', () => typeof global.setImmediate !== 'undefined', true);\n/* DOM Features */\nadd('dom-mutationobserver', () => {\n    if (true && Boolean(global.MutationObserver || global.WebKitMutationObserver)) {\n        // IE11 has an unreliable MutationObserver implementation where setProperty() does not\n        // generate a mutation event, observers can crash, and the queue does not drain\n        // reliably. The following feature test was adapted from\n        // https://gist.github.com/t10ko/4aceb8c71681fdb275e33efe5e576b14\n        const example = document.createElement('div');\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const observer = new HostMutationObserver(function () { });\n        observer.observe(example, { attributes: true });\n        example.style.setProperty('display', 'block');\n        return Boolean(observer.takeRecords().length);\n    }\n    return false;\n}, true);\nadd('dom-webanimation', () => true && global.Animation !== undefined && global.KeyframeEffect !== undefined, true);\nadd('abort-controller', () => typeof global.AbortController !== 'undefined');\nadd('abort-signal', () => typeof global.AbortSignal !== 'undefined');\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/has.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/has.mjs\n// module chunks = menu","import global from '../global';\nimport has from './has';\nfunction executeTask(item) {\n    if (item && item.isActive && item.callback) {\n        item.callback();\n    }\n}\nfunction getQueueHandle(item, destructor) {\n    return {\n        destroy: function () {\n            this.destroy = function () { };\n            item.isActive = false;\n            item.callback = null;\n            if (destructor) {\n                destructor();\n            }\n        }\n    };\n}\nlet checkMicroTaskQueue;\nlet microTasks;\n/**\n * Schedules a callback to the macrotask queue.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueTask = (function () {\n    let destructor;\n    let enqueue;\n    // Since the IE implementation of `setImmediate` is not flawless, we will test for `postMessage` first.\n    if (true) {\n        const queue = [];\n        global.addEventListener('message', function (event) {\n            // Confirm that the event was triggered by the current window and by this particular implementation.\n            if (event.source === global && event.data === 'dojo-queue-message') {\n                event.stopPropagation();\n                if (queue.length) {\n                    executeTask(queue.shift());\n                }\n            }\n        });\n        enqueue = function (item) {\n            queue.push(item);\n            global.postMessage('dojo-queue-message', '*');\n        };\n    }\n    else if (false) {\n        destructor = global.clearImmediate;\n        enqueue = function (item) {\n            return setImmediate(executeTask.bind(null, item));\n        };\n    }\n    else {\n        destructor = global.clearTimeout;\n        enqueue = function (item) {\n            return setTimeout(executeTask.bind(null, item), 0);\n        };\n    }\n    function queueTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const id = enqueue(item);\n        return getQueueHandle(item, destructor &&\n            function () {\n                destructor(id);\n            });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueTask(callback);\n        };\n})();\n// When no mechanism for registering microtasks is exposed by the environment, microtasks will\n// be queued and then executed in a single macrotask before the other macrotasks are executed.\nif (!true) {\n    let isMicroTaskQueued = false;\n    microTasks = [];\n    checkMicroTaskQueue = function () {\n        if (!isMicroTaskQueued) {\n            isMicroTaskQueued = true;\n            queueTask(function () {\n                isMicroTaskQueued = false;\n                if (microTasks.length) {\n                    let item;\n                    while ((item = microTasks.shift())) {\n                        executeTask(item);\n                    }\n                }\n            });\n        }\n    };\n}\n/**\n * Schedules an animation task with `window.requestAnimationFrame` if it exists, or with `queueTask` otherwise.\n *\n * Since requestAnimationFrame's behavior does not match that expected from `queueTask`, it is not used there.\n * However, at times it makes more sense to delegate to requestAnimationFrame; hence the following method.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueAnimationTask = (function () {\n    if (!true) {\n        return queueTask;\n    }\n    function queueAnimationTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const rafId = requestAnimationFrame(executeTask.bind(null, item));\n        return getQueueHandle(item, function () {\n            cancelAnimationFrame(rafId);\n        });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueAnimationTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueAnimationTask(callback);\n        };\n})();\n/**\n * Schedules a callback to the microtask queue.\n *\n * Any callbacks registered with `queueMicroTask` will be executed before the next macrotask. If no native\n * mechanism for scheduling macrotasks is exposed, then any callbacks will be fired before any macrotask\n * registered with `queueTask` or `queueAnimationTask`.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport let queueMicroTask = (function () {\n    let enqueue;\n    if (false) {\n        enqueue = function (item) {\n            global.process.nextTick(executeTask.bind(null, item));\n        };\n    }\n    else if (true) {\n        enqueue = function (item) {\n            global.Promise.resolve(item).then(executeTask);\n        };\n    }\n    else if (true) {\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const node = document.createElement('div');\n        const queue = [];\n        const observer = new HostMutationObserver(function () {\n            while (queue.length > 0) {\n                const item = queue.shift();\n                if (item && item.isActive && item.callback) {\n                    item.callback();\n                }\n            }\n        });\n        observer.observe(node, { attributes: true });\n        enqueue = function (item) {\n            queue.push(item);\n            node.setAttribute('queueStatus', '1');\n        };\n    }\n    else {\n        enqueue = function (item) {\n            checkMicroTaskQueue();\n            microTasks.push(item);\n        };\n    }\n    return function (callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        enqueue(item);\n        return getQueueHandle(item);\n    };\n})();\n//# sourceMappingURL=queue.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/queue.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/queue.mjs\n// module chunks = menu","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor(value, enumerable = false, writable = true, configurable = true) {\n    return {\n        value: value,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: configurable\n    };\n}\nexport function wrapNative(nativeFunction) {\n    return function (target, ...args) {\n        return nativeFunction.apply(target, args);\n    };\n}\n//# sourceMappingURL=util.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/util.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/util.mjs\n// module chunks = menu","import { Evented } from '../core/Evented';\nexport class Injector extends Evented {\n    constructor(payload) {\n        super();\n        this._payload = payload;\n    }\n    setInvalidator(invalidator) {\n        this._invalidator = invalidator;\n    }\n    get() {\n        return this._payload;\n    }\n    set(payload) {\n        this._payload = payload;\n        if (this._invalidator) {\n            this._invalidator();\n        }\n    }\n}\nexport default Injector;\n//# sourceMappingURL=Injector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/Injector.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/Injector.mjs\n// module chunks = menu","import { Evented } from '../core/Evented';\nimport Map from '../shim/Map';\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport var NodeEventType;\n(function (NodeEventType) {\n    NodeEventType[\"Projector\"] = \"Projector\";\n    NodeEventType[\"Widget\"] = \"Widget\";\n})(NodeEventType || (NodeEventType = {}));\nexport class NodeHandler extends Evented {\n    constructor() {\n        super(...arguments);\n        this._nodeMap = new Map();\n    }\n    get(key) {\n        return this._nodeMap.get(key);\n    }\n    has(key) {\n        return this._nodeMap.has(key);\n    }\n    add(element, key) {\n        this._nodeMap.set(key, element);\n        this.emit({ type: key });\n    }\n    addRoot() {\n        this.emit({ type: NodeEventType.Widget });\n    }\n    addProjector() {\n        this.emit({ type: NodeEventType.Projector });\n    }\n    clear() {\n        this._nodeMap.clear();\n    }\n}\nexport default NodeHandler;\n//# sourceMappingURL=NodeHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/NodeHandler.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/NodeHandler.mjs\n// module chunks = menu","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport Symbol from '../shim/Symbol';\nimport { Evented } from '../core/Evented';\n/**\n * Widget base symbol type\n */\nexport const WIDGET_BASE_TYPE = Symbol('Widget Base');\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor(item) {\n    return Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\nexport function isWidgetConstructorDefaultExport(item) {\n    return Boolean(item &&\n        item.hasOwnProperty('__esModule') &&\n        item.hasOwnProperty('default') &&\n        isWidgetBaseConstructor(item.default));\n}\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented {\n    /**\n     * Emit loaded event for registry label\n     */\n    emitLoadedEvent(widgetLabel, item) {\n        this.emit({\n            type: widgetLabel,\n            action: 'loaded',\n            item\n        });\n    }\n    define(label, item) {\n        if (this._widgetRegistry === undefined) {\n            this._widgetRegistry = new Map();\n        }\n        if (this._widgetRegistry.has(label)) {\n            throw new Error(`widget has already been registered for '${label.toString()}'`);\n        }\n        this._widgetRegistry.set(label, item);\n        if (item instanceof Promise) {\n            item.then((widgetCtor) => {\n                this._widgetRegistry.set(label, widgetCtor);\n                this.emitLoadedEvent(label, widgetCtor);\n                return widgetCtor;\n            }, (error) => {\n                throw error;\n            });\n        }\n        else if (isWidgetBaseConstructor(item)) {\n            this.emitLoadedEvent(label, item);\n        }\n    }\n    defineInjector(label, injectorFactory) {\n        if (this._injectorRegistry === undefined) {\n            this._injectorRegistry = new Map();\n        }\n        if (this._injectorRegistry.has(label)) {\n            throw new Error(`injector has already been registered for '${label.toString()}'`);\n        }\n        const invalidator = new Evented();\n        const injectorItem = {\n            injector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n            invalidator\n        };\n        this._injectorRegistry.set(label, injectorItem);\n        this.emitLoadedEvent(label, injectorItem);\n    }\n    get(label) {\n        if (!this._widgetRegistry || !this.has(label)) {\n            return null;\n        }\n        const item = this._widgetRegistry.get(label);\n        if (isWidgetBaseConstructor(item)) {\n            return item;\n        }\n        if (item instanceof Promise) {\n            return null;\n        }\n        const promise = item();\n        this._widgetRegistry.set(label, promise);\n        promise.then((widgetCtor) => {\n            if (isWidgetConstructorDefaultExport(widgetCtor)) {\n                widgetCtor = widgetCtor.default;\n            }\n            this._widgetRegistry.set(label, widgetCtor);\n            this.emitLoadedEvent(label, widgetCtor);\n            return widgetCtor;\n        }, (error) => {\n            throw error;\n        });\n        return null;\n    }\n    getInjector(label) {\n        if (!this._injectorRegistry || !this.hasInjector(label)) {\n            return null;\n        }\n        return this._injectorRegistry.get(label);\n    }\n    has(label) {\n        return Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n    }\n    hasInjector(label) {\n        return Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n    }\n}\nexport default Registry;\n//# sourceMappingURL=Registry.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/Registry.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/Registry.mjs\n// module chunks = menu","import { Map } from '../shim/Map';\nimport { Evented } from '../core/Evented';\nimport { Registry } from './Registry';\nexport class RegistryHandler extends Evented {\n    constructor() {\n        super();\n        this._registry = new Registry();\n        this._registryWidgetLabelMap = new Map();\n        this._registryInjectorLabelMap = new Map();\n        this.own(this._registry);\n        const destroy = () => {\n            if (this.baseRegistry) {\n                this._registryWidgetLabelMap.delete(this.baseRegistry);\n                this._registryInjectorLabelMap.delete(this.baseRegistry);\n                this.baseRegistry = undefined;\n            }\n        };\n        this.own({ destroy });\n    }\n    set base(baseRegistry) {\n        if (this.baseRegistry) {\n            this._registryWidgetLabelMap.delete(this.baseRegistry);\n            this._registryInjectorLabelMap.delete(this.baseRegistry);\n        }\n        this.baseRegistry = baseRegistry;\n    }\n    define(label, widget) {\n        this._registry.define(label, widget);\n    }\n    defineInjector(label, injector) {\n        this._registry.defineInjector(label, injector);\n    }\n    has(label) {\n        return this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n    }\n    hasInjector(label) {\n        return this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n    }\n    get(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n    }\n    getInjector(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n    }\n    _get(label, globalPrecedence, getFunctionName, labelMap) {\n        const registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n        for (let i = 0; i < registries.length; i++) {\n            const registry = registries[i];\n            if (!registry) {\n                continue;\n            }\n            const item = registry[getFunctionName](label);\n            const registeredLabels = labelMap.get(registry) || [];\n            if (item) {\n                return item;\n            }\n            else if (registeredLabels.indexOf(label) === -1) {\n                const handle = registry.on(label, (event) => {\n                    if (event.action === 'loaded' &&\n                        this[getFunctionName](label, globalPrecedence) === event.item) {\n                        this.emit({ type: 'invalidate' });\n                    }\n                });\n                this.own(handle);\n                labelMap.set(registry, [...registeredLabels, label]);\n            }\n        }\n        return null;\n    }\n}\nexport default RegistryHandler;\n//# sourceMappingURL=RegistryHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs\n// module chunks = menu","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport Symbol from '../shim/Symbol';\nimport { v } from './d';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { widgetInstanceMap } from './vdom';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nconst decoratorMap = new Map();\nconst boundAuto = auto.bind(null);\nexport const noBind = Symbol.for('dojoNoBind');\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Indicates if it is the initial set properties cycle\n         */\n        this._initialProperties = true;\n        /**\n         * Array of property keys considered changed from the previous set properties\n         */\n        this._changedPropertyKeys = [];\n        this._nodeHandler = new NodeHandler();\n        this._handles = [];\n        this._children = [];\n        this._decoratorCache = new Map();\n        this._properties = {};\n        this._boundRenderFunc = this.render.bind(this);\n        this._boundInvalidate = this.invalidate.bind(this);\n        widgetInstanceMap.set(this, {\n            dirty: true,\n            onAttach: () => {\n                this.onAttach();\n            },\n            onDetach: () => {\n                this.onDetach();\n                this.destroy();\n            },\n            nodeHandler: this._nodeHandler,\n            registry: () => {\n                return this.registry;\n            },\n            coreProperties: {},\n            rendering: false,\n            inputProperties: {}\n        });\n        this._runAfterConstructors();\n    }\n    meta(MetaType) {\n        if (this._metaMap === undefined) {\n            this._metaMap = new Map();\n        }\n        let cached = this._metaMap.get(MetaType);\n        if (!cached) {\n            cached = new MetaType({\n                invalidate: this._boundInvalidate,\n                nodeHandler: this._nodeHandler,\n                bind: this\n            });\n            this.own(cached);\n            this._metaMap.set(MetaType, cached);\n        }\n        return cached;\n    }\n    onAttach() {\n        // Do nothing by default.\n    }\n    onDetach() {\n        // Do nothing by default.\n    }\n    get properties() {\n        return this._properties;\n    }\n    get changedPropertyKeys() {\n        return [...this._changedPropertyKeys];\n    }\n    __setCoreProperties__(coreProperties) {\n        const { baseRegistry } = coreProperties;\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData.coreProperties.baseRegistry !== baseRegistry) {\n            if (this._registry === undefined) {\n                this._registry = new RegistryHandler();\n                this.own(this._registry);\n                this.own(this._registry.on('invalidate', this._boundInvalidate));\n            }\n            this._registry.base = baseRegistry;\n            this.invalidate();\n        }\n        instanceData.coreProperties = coreProperties;\n    }\n    __setProperties__(originalProperties) {\n        const instanceData = widgetInstanceMap.get(this);\n        instanceData.inputProperties = originalProperties;\n        const properties = this._runBeforeProperties(originalProperties);\n        const registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n        const changedPropertyKeys = [];\n        const propertyNames = Object.keys(properties);\n        if (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n            const allProperties = [...propertyNames, ...Object.keys(this._properties)];\n            const checkedProperties = [];\n            const diffPropertyResults = {};\n            let runReactions = false;\n            for (let i = 0; i < allProperties.length; i++) {\n                const propertyName = allProperties[i];\n                if (checkedProperties.indexOf(propertyName) !== -1) {\n                    continue;\n                }\n                checkedProperties.push(propertyName);\n                const previousProperty = this._properties[propertyName];\n                const newProperty = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n                if (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n                    runReactions = true;\n                    const diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n                    for (let i = 0; i < diffFunctions.length; i++) {\n                        const result = diffFunctions[i](previousProperty, newProperty);\n                        if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                            changedPropertyKeys.push(propertyName);\n                        }\n                        if (propertyName in properties) {\n                            diffPropertyResults[propertyName] = result.value;\n                        }\n                    }\n                }\n                else {\n                    const result = boundAuto(previousProperty, newProperty);\n                    if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                        changedPropertyKeys.push(propertyName);\n                    }\n                    if (propertyName in properties) {\n                        diffPropertyResults[propertyName] = result.value;\n                    }\n                }\n            }\n            if (runReactions) {\n                const reactionFunctions = this.getDecorator('diffReaction');\n                const executedReactions = [];\n                reactionFunctions.forEach(({ reaction, propertyName }) => {\n                    const propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n                    const reactionRun = executedReactions.indexOf(reaction) !== -1;\n                    if (propertyChanged && !reactionRun) {\n                        reaction.call(this, this._properties, diffPropertyResults);\n                        executedReactions.push(reaction);\n                    }\n                });\n            }\n            this._properties = diffPropertyResults;\n            this._changedPropertyKeys = changedPropertyKeys;\n        }\n        else {\n            this._initialProperties = false;\n            for (let i = 0; i < propertyNames.length; i++) {\n                const propertyName = propertyNames[i];\n                if (typeof properties[propertyName] === 'function') {\n                    properties[propertyName] = this._bindFunctionProperty(properties[propertyName], instanceData.coreProperties.bind);\n                }\n                else {\n                    changedPropertyKeys.push(propertyName);\n                }\n            }\n            this._changedPropertyKeys = changedPropertyKeys;\n            this._properties = Object.assign({}, properties);\n        }\n        if (this._changedPropertyKeys.length > 0) {\n            this.invalidate();\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    __setChildren__(children) {\n        if (this._children.length > 0 || children.length > 0) {\n            this._children = children;\n            this.invalidate();\n        }\n    }\n    __render__() {\n        const instanceData = widgetInstanceMap.get(this);\n        instanceData.dirty = false;\n        const render = this._runBeforeRenders();\n        let dNode = render();\n        dNode = this.runAfterRenders(dNode);\n        this._nodeHandler.clear();\n        return dNode;\n    }\n    invalidate() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData.invalidate) {\n            instanceData.invalidate();\n        }\n    }\n    render() {\n        return v('div', {}, this.children);\n    }\n    /**\n     * Function to add decorators to WidgetBase\n     *\n     * @param decoratorKey The key of the decorator\n     * @param value The value of the decorator\n     */\n    addDecorator(decoratorKey, value) {\n        value = Array.isArray(value) ? value : [value];\n        if (this.hasOwnProperty('constructor')) {\n            let decoratorList = decoratorMap.get(this.constructor);\n            if (!decoratorList) {\n                decoratorList = new Map();\n                decoratorMap.set(this.constructor, decoratorList);\n            }\n            let specificDecoratorList = decoratorList.get(decoratorKey);\n            if (!specificDecoratorList) {\n                specificDecoratorList = [];\n                decoratorList.set(decoratorKey, specificDecoratorList);\n            }\n            specificDecoratorList.push(...value);\n        }\n        else {\n            const decorators = this.getDecorator(decoratorKey);\n            this._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n        }\n    }\n    /**\n     * Function to build the list of decorators from the global decorator map.\n     *\n     * @param decoratorKey  The key of the decorator\n     * @return An array of decorator values\n     * @private\n     */\n    _buildDecoratorList(decoratorKey) {\n        const allDecorators = [];\n        let constructor = this.constructor;\n        while (constructor) {\n            const instanceMap = decoratorMap.get(constructor);\n            if (instanceMap) {\n                const decorators = instanceMap.get(decoratorKey);\n                if (decorators) {\n                    allDecorators.unshift(...decorators);\n                }\n            }\n            constructor = Object.getPrototypeOf(constructor);\n        }\n        return allDecorators;\n    }\n    /**\n     * Function to retrieve decorator values\n     *\n     * @param decoratorKey The key of the decorator\n     * @returns An array of decorator values\n     */\n    getDecorator(decoratorKey) {\n        let allDecorators = this._decoratorCache.get(decoratorKey);\n        if (allDecorators !== undefined) {\n            return allDecorators;\n        }\n        allDecorators = this._buildDecoratorList(decoratorKey);\n        this._decoratorCache.set(decoratorKey, allDecorators);\n        return allDecorators;\n    }\n    /**\n     * Binds unbound property functions to the specified `bind` property\n     *\n     * @param properties properties to check for functions\n     */\n    _bindFunctionProperty(property, bind) {\n        if (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n            if (this._bindFunctionPropertyMap === undefined) {\n                this._bindFunctionPropertyMap = new WeakMap();\n            }\n            const bindInfo = this._bindFunctionPropertyMap.get(property) || {};\n            let { boundFunc, scope } = bindInfo;\n            if (boundFunc === undefined || scope !== bind) {\n                boundFunc = property.bind(bind);\n                this._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n            }\n            return boundFunc;\n        }\n        return property;\n    }\n    get registry() {\n        if (this._registry === undefined) {\n            this._registry = new RegistryHandler();\n            this.own(this._registry);\n            this.own(this._registry.on('invalidate', this._boundInvalidate));\n        }\n        return this._registry;\n    }\n    _runBeforeProperties(properties) {\n        const beforeProperties = this.getDecorator('beforeProperties');\n        if (beforeProperties.length > 0) {\n            return beforeProperties.reduce((properties, beforePropertiesFunction) => {\n                return Object.assign({}, properties, beforePropertiesFunction.call(this, properties));\n            }, Object.assign({}, properties));\n        }\n        return properties;\n    }\n    /**\n     * Run all registered before renders and return the updated render method\n     */\n    _runBeforeRenders() {\n        const beforeRenders = this.getDecorator('beforeRender');\n        if (beforeRenders.length > 0) {\n            return beforeRenders.reduce((render, beforeRenderFunction) => {\n                const updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n                if (!updatedRender) {\n                    console.warn('Render function not returned from beforeRender, using previous render');\n                    return render;\n                }\n                return updatedRender;\n            }, this._boundRenderFunc);\n        }\n        return this._boundRenderFunc;\n    }\n    /**\n     * Run all registered after renders and return the decorated DNodes\n     *\n     * @param dNode The DNodes to run through the after renders\n     */\n    runAfterRenders(dNode) {\n        const afterRenders = this.getDecorator('afterRender');\n        if (afterRenders.length > 0) {\n            dNode = afterRenders.reduce((dNode, afterRenderFunction) => {\n                return afterRenderFunction.call(this, dNode);\n            }, dNode);\n        }\n        if (this._metaMap !== undefined) {\n            this._metaMap.forEach((meta) => {\n                meta.afterRender();\n            });\n        }\n        return dNode;\n    }\n    _runAfterConstructors() {\n        const afterConstructors = this.getDecorator('afterConstructor');\n        if (afterConstructors.length > 0) {\n            afterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n        }\n    }\n    own(handle) {\n        this._handles.push(handle);\n    }\n    destroy() {\n        while (this._handles.length > 0) {\n            const handle = this._handles.pop();\n            if (handle) {\n                handle.destroy();\n            }\n        }\n    }\n}\n/**\n * static identifier\n */\nWidgetBase._type = WIDGET_BASE_TYPE;\nexport default WidgetBase;\n//# sourceMappingURL=WidgetBase.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/WidgetBase.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/WidgetBase.mjs\n// module chunks = menu","let browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\nfunction determineBrowserStyleNames(element) {\n    if ('WebkitTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n        browserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n    }\n    else if ('transition' in element.style || 'MozTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'transitionend';\n        browserSpecificAnimationEndEventName = 'animationend';\n    }\n    else {\n        throw new Error('Your browser is not supported');\n    }\n}\nfunction initialize(element) {\n    if (browserSpecificAnimationEndEventName === '') {\n        determineBrowserStyleNames(element);\n    }\n}\nfunction runAndCleanUp(element, startAnimation, finishAnimation) {\n    initialize(element);\n    let finished = false;\n    let transitionEnd = function () {\n        if (!finished) {\n            finished = true;\n            element.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n            element.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n            finishAnimation();\n        }\n    };\n    startAnimation();\n    element.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n    element.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\nfunction exit(node, properties, exitAnimation, removeNode) {\n    const activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(exitAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        removeNode();\n    });\n}\nfunction enter(node, properties, enterAnimation) {\n    const activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(enterAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        node.classList.remove(enterAnimation);\n        node.classList.remove(activeClass);\n    });\n}\nexport default {\n    enter,\n    exit\n};\n//# sourceMappingURL=cssTransitions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs\n// module chunks = menu","import Symbol from '../shim/Symbol';\n/**\n * The symbol identifier for a WNode type\n */\nexport const WNODE = Symbol('Identifier for a WNode.');\n/**\n * The symbol identifier for a VNode type\n */\nexport const VNODE = Symbol('Identifier for a VNode.');\n/**\n * The symbol identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = Symbol('Identifier for a VNode created using existing dom.');\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === WNODE);\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child) {\n    return Boolean(child && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE));\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === DOMVNODE);\n}\nexport function isElementNode(value) {\n    return !!value.tagName;\n}\nexport function decorate(dNodes, optionsOrModifier, predicate) {\n    let shallow = false;\n    let modifier;\n    if (typeof optionsOrModifier === 'function') {\n        modifier = optionsOrModifier;\n    }\n    else {\n        modifier = optionsOrModifier.modifier;\n        predicate = optionsOrModifier.predicate;\n        shallow = optionsOrModifier.shallow || false;\n    }\n    let nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n    function breaker() {\n        nodes = [];\n    }\n    while (nodes.length) {\n        const node = nodes.shift();\n        if (node) {\n            if (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n                nodes = [...nodes, ...node.children];\n            }\n            if (!predicate || predicate(node)) {\n                modifier(node, breaker);\n            }\n        }\n    }\n    return dNodes;\n}\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w(widgetConstructor, properties, children = []) {\n    return {\n        children,\n        widgetConstructor,\n        properties,\n        type: WNODE\n    };\n}\nexport function v(tag, propertiesOrChildren = {}, children = undefined) {\n    let properties = propertiesOrChildren;\n    let deferredPropertiesCallback;\n    if (Array.isArray(propertiesOrChildren)) {\n        children = propertiesOrChildren;\n        properties = {};\n    }\n    if (typeof properties === 'function') {\n        deferredPropertiesCallback = properties;\n        properties = {};\n    }\n    return {\n        tag,\n        deferredPropertiesCallback,\n        children,\n        properties,\n        type: VNODE\n    };\n}\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom({ node, attrs = {}, props = {}, on = {}, diffType = 'none' }, children) {\n    return {\n        tag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n        properties: props,\n        attributes: attrs,\n        events: on,\n        children,\n        type: DOMVNODE,\n        domNode: node,\n        text: isElementNode(node) ? undefined : node.data,\n        diffType\n    };\n}\n//# sourceMappingURL=d.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/d.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/d.mjs\n// module chunks = menu","import { handleDecorator } from './handleDecorator';\nexport function afterRender(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('afterRender', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default afterRender;\n//# sourceMappingURL=afterRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/afterRender.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/afterRender.mjs\n// module chunks = menu","import { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nexport function alwaysRender() {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function () {\n            this.invalidate();\n        })(target);\n    });\n}\nexport default alwaysRender;\n//# sourceMappingURL=alwaysRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs\n// module chunks = menu","import { handleDecorator } from './handleDecorator';\nexport function beforeProperties(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default beforeProperties;\n//# sourceMappingURL=beforeProperties.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs\n// module chunks = menu","import { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement({ tag, properties = [], attributes = [], events = [], childType = CustomElementChildType.DOJO, registryFactory = () => new Registry() }) {\n    return function (target) {\n        target.prototype.__customElementDescriptor = {\n            tagName: tag,\n            attributes,\n            properties,\n            events,\n            childType,\n            registryFactory\n        };\n    };\n}\nexport default customElement;\n//# sourceMappingURL=customElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs\n// module chunks = menu","import { handleDecorator } from './handleDecorator';\nimport { auto } from './../diff';\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(propertyName, diffFunction = auto, reactionFunction) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n        target.addDecorator('registeredDiffProperty', propertyName);\n        if (reactionFunction || propertyKey) {\n            target.addDecorator('diffReaction', {\n                propertyName,\n                reaction: propertyKey ? target[propertyKey] : reactionFunction\n            });\n        }\n    });\n}\nexport default diffProperty;\n//# sourceMappingURL=diffProperty.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs\n// module chunks = menu","/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler) {\n    return function (target, propertyKey, descriptor) {\n        if (typeof target === 'function') {\n            handler(target.prototype, undefined);\n        }\n        else {\n            handler(target, propertyKey);\n        }\n    };\n}\nexport default handleDecorator;\n//# sourceMappingURL=handleDecorator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs\n// module chunks = menu","import WeakMap from '../../shim/WeakMap';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap = new WeakMap();\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }) {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function (properties) {\n            const injectorItem = this.registry.getInjector(name);\n            if (injectorItem) {\n                const { injector, invalidator } = injectorItem;\n                const registeredInjectors = registeredInjectorsMap.get(this) || [];\n                if (registeredInjectors.length === 0) {\n                    registeredInjectorsMap.set(this, registeredInjectors);\n                }\n                if (registeredInjectors.indexOf(injectorItem) === -1) {\n                    this.own(invalidator.on('invalidate', () => {\n                        this.invalidate();\n                    }));\n                    registeredInjectors.push(injectorItem);\n                }\n                return getProperties(injector(), properties);\n            }\n        })(target);\n    });\n}\nexport default inject;\n//# sourceMappingURL=inject.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/inject.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/inject.mjs\n// module chunks = menu","import { WIDGET_BASE_TYPE } from './Registry';\nfunction isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\nexport function always(previousProperty, newProperty) {\n    return {\n        changed: true,\n        value: newProperty\n    };\n}\nexport function ignore(previousProperty, newProperty) {\n    return {\n        changed: false,\n        value: newProperty\n    };\n}\nexport function reference(previousProperty, newProperty) {\n    return {\n        changed: previousProperty !== newProperty,\n        value: newProperty\n    };\n}\nexport function shallow(previousProperty, newProperty) {\n    let changed = false;\n    const validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n    const validNewProperty = newProperty && isObjectOrArray(newProperty);\n    if (!validOldProperty || !validNewProperty) {\n        return {\n            changed: true,\n            value: newProperty\n        };\n    }\n    const previousKeys = Object.keys(previousProperty);\n    const newKeys = Object.keys(newProperty);\n    if (previousKeys.length !== newKeys.length) {\n        changed = true;\n    }\n    else {\n        changed = newKeys.some((key) => {\n            return newProperty[key] !== previousProperty[key];\n        });\n    }\n    return {\n        changed,\n        value: newProperty\n    };\n}\nexport function auto(previousProperty, newProperty) {\n    let result;\n    if (typeof newProperty === 'function') {\n        if (newProperty._type === WIDGET_BASE_TYPE) {\n            result = reference(previousProperty, newProperty);\n        }\n        else {\n            result = ignore(previousProperty, newProperty);\n        }\n    }\n    else if (isObjectOrArray(newProperty)) {\n        result = shallow(previousProperty, newProperty);\n    }\n    else {\n        result = reference(previousProperty, newProperty);\n    }\n    return result;\n}\n//# sourceMappingURL=diff.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/diff.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/diff.mjs\n// module chunks = menu","import * as tslib_1 from \"tslib\";\nimport { assign } from '../../core/lang';\nimport cssTransitions from '../animations/cssTransitions';\nimport { afterRender } from './../decorators/afterRender';\nimport { v } from './../d';\nimport { dom } from './../vdom';\n/**\n * Represents the attach state of the projector\n */\nexport var ProjectorAttachState;\n(function (ProjectorAttachState) {\n    ProjectorAttachState[ProjectorAttachState[\"Attached\"] = 1] = \"Attached\";\n    ProjectorAttachState[ProjectorAttachState[\"Detached\"] = 2] = \"Detached\";\n})(ProjectorAttachState || (ProjectorAttachState = {}));\n/**\n * Attach type for the projector\n */\nexport var AttachType;\n(function (AttachType) {\n    AttachType[AttachType[\"Append\"] = 1] = \"Append\";\n    AttachType[AttachType[\"Merge\"] = 2] = \"Merge\";\n})(AttachType || (AttachType = {}));\nexport function ProjectorMixin(Base) {\n    class Projector extends Base {\n        constructor(...args) {\n            super(...args);\n            this._root = document.body;\n            this._async = true;\n            this._projectorProperties = {};\n            this._projectionOptions = {\n                transitions: cssTransitions\n            };\n            this.root = document.body;\n            this.projectorState = ProjectorAttachState.Detached;\n        }\n        append(root) {\n            const options = {\n                type: AttachType.Append,\n                root\n            };\n            return this._attach(options);\n        }\n        merge(root) {\n            const options = {\n                type: AttachType.Merge,\n                root\n            };\n            return this._attach(options);\n        }\n        set root(root) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot change root element');\n            }\n            this._root = root;\n        }\n        get root() {\n            return this._root;\n        }\n        get async() {\n            return this._async;\n        }\n        set async(async) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot change async mode');\n            }\n            this._async = async;\n        }\n        sandbox(doc = document) {\n            if (this.projectorState === ProjectorAttachState.Attached) {\n                throw new Error('Projector already attached, cannot create sandbox');\n            }\n            this._async = false;\n            const previousRoot = this.root;\n            /* free up the document fragment for GC */\n            this.own({\n                destroy: () => {\n                    this._root = previousRoot;\n                }\n            });\n            this._attach({\n                /* DocumentFragment is not assignable to Element, but provides everything needed to work */\n                root: doc.createDocumentFragment(),\n                type: AttachType.Append\n            });\n        }\n        setChildren(children) {\n            this.__setChildren__(children);\n        }\n        setProperties(properties) {\n            this.__setProperties__(properties);\n        }\n        __setProperties__(properties) {\n            if (this._projectorProperties && this._projectorProperties.registry !== properties.registry) {\n                if (this._projectorProperties.registry) {\n                    this._projectorProperties.registry.destroy();\n                }\n            }\n            this._projectorProperties = assign({}, properties);\n            super.__setCoreProperties__({ bind: this, baseRegistry: properties.registry });\n            super.__setProperties__(properties);\n        }\n        toHtml() {\n            if (this.projectorState !== ProjectorAttachState.Attached || !this._projection) {\n                throw new Error('Projector is not attached, cannot return an HTML string of projection.');\n            }\n            return this._projection.domNode.childNodes[0].outerHTML;\n        }\n        afterRender(result) {\n            let node = result;\n            if (typeof result === 'string' || result === null || result === undefined) {\n                node = v('span', {}, [result]);\n            }\n            return node;\n        }\n        destroy() {\n            super.destroy();\n        }\n        _attach({ type, root }) {\n            if (root) {\n                this.root = root;\n            }\n            if (this._attachHandle) {\n                return this._attachHandle;\n            }\n            this.projectorState = ProjectorAttachState.Attached;\n            const handle = {\n                destroy: () => {\n                    if (this.projectorState === ProjectorAttachState.Attached) {\n                        this._projection = undefined;\n                        this.projectorState = ProjectorAttachState.Detached;\n                    }\n                }\n            };\n            this.own(handle);\n            this._attachHandle = handle;\n            this._projectionOptions = Object.assign({}, this._projectionOptions, { sync: !this._async });\n            switch (type) {\n                case AttachType.Append:\n                    this._projection = dom.append(this.root, this, this._projectionOptions);\n                    break;\n                case AttachType.Merge:\n                    this._projection = dom.merge(this.root, this, this._projectionOptions);\n                    break;\n            }\n            return this._attachHandle;\n        }\n    }\n    tslib_1.__decorate([\n        afterRender()\n    ], Projector.prototype, \"afterRender\", null);\n    return Projector;\n}\nexport default ProjectorMixin;\n//# sourceMappingURL=Projector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/mixins/Projector.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/mixins/Projector.mjs\n// module chunks = menu","import * as tslib_1 from \"tslib\";\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\nconst THEME_KEY = ' _key';\nexport const INJECTED_THEME_KEY = Symbol('theme');\n/**\n * Decorator for base css classes\n */\nexport function theme(theme) {\n    return handleDecorator((target) => {\n        target.addDecorator('baseThemeClasses', theme);\n    });\n}\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes) {\n    return classes.reduce((currentClassNames, baseClass) => {\n        Object.keys(baseClass).forEach((key) => {\n            currentClassNames[baseClass[key]] = key;\n        });\n        return currentClassNames;\n    }, {});\n}\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme, themeRegistry) {\n    const themeInjector = new Injector(theme);\n    themeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n        themeInjector.setInvalidator(invalidator);\n        return () => themeInjector.get();\n    });\n    return themeInjector;\n}\n/**\n * Function that returns a class decorated with with Themed functionality\n */\nexport function ThemedMixin(Base) {\n    let Themed = class Themed extends Base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Registered base theme keys\n             */\n            this._registeredBaseThemeKeys = [];\n            /**\n             * Indicates if classes meta data need to be calculated.\n             */\n            this._recalculateClasses = true;\n            /**\n             * Loaded theme\n             */\n            this._theme = {};\n        }\n        theme(classes) {\n            if (this._recalculateClasses) {\n                this._recalculateThemeClasses();\n            }\n            if (Array.isArray(classes)) {\n                return classes.map((className) => this._getThemeClass(className));\n            }\n            return this._getThemeClass(classes);\n        }\n        /**\n         * Function fired when `theme` or `extraClasses` are changed.\n         */\n        onPropertiesChanged() {\n            this._recalculateClasses = true;\n        }\n        _getThemeClass(className) {\n            if (className === undefined || className === null) {\n                return className;\n            }\n            const extraClasses = this.properties.extraClasses || {};\n            const themeClassName = this._baseThemeClassesReverseLookup[className];\n            let resultClassNames = [];\n            if (!themeClassName) {\n                console.warn(`Class name: '${className}' not found in theme`);\n                return null;\n            }\n            if (extraClasses[themeClassName]) {\n                resultClassNames.push(extraClasses[themeClassName]);\n            }\n            if (this._theme[themeClassName]) {\n                resultClassNames.push(this._theme[themeClassName]);\n            }\n            else {\n                resultClassNames.push(this._registeredBaseTheme[themeClassName]);\n            }\n            return resultClassNames.join(' ');\n        }\n        _recalculateThemeClasses() {\n            const { theme = {} } = this.properties;\n            const baseThemes = this.getDecorator('baseThemeClasses');\n            if (!this._registeredBaseTheme) {\n                this._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n                    const _a = THEME_KEY, key = baseTheme[_a], classes = tslib_1.__rest(baseTheme, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n                    this._registeredBaseThemeKeys.push(key);\n                    return Object.assign({}, finalBaseTheme, classes);\n                }, {});\n                this._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n            }\n            this._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n                return Object.assign({}, baseTheme, theme[themeKey]);\n            }, {});\n            this._recalculateClasses = false;\n        }\n    };\n    tslib_1.__decorate([\n        diffProperty('theme', shallow),\n        diffProperty('extraClasses', shallow)\n    ], Themed.prototype, \"onPropertiesChanged\", null);\n    Themed = tslib_1.__decorate([\n        inject({\n            name: INJECTED_THEME_KEY,\n            getProperties: (theme, properties) => {\n                if (!properties.theme) {\n                    return { theme };\n                }\n                return {};\n            }\n        })\n    ], Themed);\n    return Themed;\n}\nexport default ThemedMixin;\n//# sourceMappingURL=Themed.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs\n// module chunks = menu","import * as tslib_1 from \"tslib\";\nimport { WidgetBase, noBind } from './WidgetBase';\nimport { ProjectorMixin } from './mixins/Projector';\nimport { from } from '../shim/array';\nimport { w, dom } from './d';\nimport global from '../shim/global';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\nexport var CustomElementChildType;\n(function (CustomElementChildType) {\n    CustomElementChildType[\"DOJO\"] = \"DOJO\";\n    CustomElementChildType[\"NODE\"] = \"NODE\";\n    CustomElementChildType[\"TEXT\"] = \"TEXT\";\n})(CustomElementChildType || (CustomElementChildType = {}));\nexport function DomToWidgetWrapper(domNode) {\n    let DomToWidgetWrapper = class DomToWidgetWrapper extends WidgetBase {\n        render() {\n            const properties = Object.keys(this.properties).reduce((props, key) => {\n                const value = this.properties[key];\n                if (key.indexOf('on') === 0) {\n                    key = `__${key}`;\n                }\n                props[key] = value;\n                return props;\n            }, {});\n            return dom({ node: domNode, props: properties, diffType: 'dom' });\n        }\n        static get domNode() {\n            return domNode;\n        }\n    };\n    DomToWidgetWrapper = tslib_1.__decorate([\n        alwaysRender()\n    ], DomToWidgetWrapper);\n    return DomToWidgetWrapper;\n}\nexport function create(descriptor, WidgetConstructor) {\n    const { attributes, childType, registryFactory } = descriptor;\n    const attributeMap = {};\n    attributes.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    return class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._properties = {};\n            this._children = [];\n            this._eventProperties = {};\n            this._initialised = false;\n        }\n        connectedCallback() {\n            if (this._initialised) {\n                return;\n            }\n            const domProperties = {};\n            const { attributes, properties, events } = descriptor;\n            this._properties = Object.assign({}, this._properties, this._attributesToProperties(attributes));\n            [...attributes, ...properties].forEach((propertyName) => {\n                const value = this[propertyName];\n                const filteredPropertyName = propertyName.replace(/^on/, '__');\n                if (value !== undefined) {\n                    this._properties[propertyName] = value;\n                }\n                if (filteredPropertyName !== propertyName) {\n                    domProperties[filteredPropertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n                domProperties[propertyName] = {\n                    get: () => this._getProperty(propertyName),\n                    set: (value) => this._setProperty(propertyName, value)\n                };\n            });\n            events.forEach((propertyName) => {\n                const eventName = propertyName.replace(/^on/, '').toLowerCase();\n                const filteredPropertyName = propertyName.replace(/^on/, '__on');\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getEventProperty(propertyName),\n                    set: (value) => this._setEventProperty(propertyName, value)\n                };\n                this._eventProperties[propertyName] = undefined;\n                this._properties[propertyName] = (...args) => {\n                    const eventCallback = this._getEventProperty(propertyName);\n                    if (typeof eventCallback === 'function') {\n                        eventCallback(...args);\n                    }\n                    this.dispatchEvent(new CustomEvent(eventName, {\n                        bubbles: false,\n                        detail: args\n                    }));\n                };\n            });\n            Object.defineProperties(this, domProperties);\n            const children = childType === CustomElementChildType.TEXT ? this.childNodes : this.children;\n            from(children).forEach((childNode) => {\n                if (childType === CustomElementChildType.DOJO) {\n                    childNode.addEventListener('dojo-ce-render', () => this._render());\n                    childNode.addEventListener('dojo-ce-connected', () => this._render());\n                    this._children.push(DomToWidgetWrapper(childNode));\n                }\n                else {\n                    this._children.push(dom({ node: childNode, diffType: 'dom' }));\n                }\n            });\n            this.addEventListener('dojo-ce-connected', (e) => this._childConnected(e));\n            const widgetProperties = this._properties;\n            const renderChildren = () => this.__children__();\n            const Wrapper = class extends WidgetBase {\n                render() {\n                    return w(WidgetConstructor, widgetProperties, renderChildren());\n                }\n            };\n            const registry = registryFactory();\n            const themeContext = registerThemeInjector(this._getTheme(), registry);\n            global.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n            const Projector = ProjectorMixin(Wrapper);\n            this._projector = new Projector();\n            this._projector.setProperties({ registry });\n            this._projector.append(this);\n            this._initialised = true;\n            this.dispatchEvent(new CustomEvent('dojo-ce-connected', {\n                bubbles: true,\n                detail: this\n            }));\n        }\n        _getTheme() {\n            if (global && global.dojoce && global.dojoce.theme) {\n                return global.dojoce.themes[global.dojoce.theme];\n            }\n        }\n        _childConnected(e) {\n            const node = e.detail;\n            if (node.parentNode === this) {\n                const exists = this._children.some((child) => child.domNode === node);\n                if (!exists) {\n                    node.addEventListener('dojo-ce-render', () => this._render());\n                    this._children.push(DomToWidgetWrapper(node));\n                    this._render();\n                }\n            }\n        }\n        _render() {\n            if (this._projector) {\n                this._projector.invalidate();\n                this.dispatchEvent(new CustomEvent('dojo-ce-render', {\n                    bubbles: false,\n                    detail: this\n                }));\n            }\n        }\n        __properties__() {\n            return Object.assign({}, this._properties, this._eventProperties);\n        }\n        __children__() {\n            if (childType === CustomElementChildType.DOJO) {\n                return this._children.filter((Child) => Child.domNode.isWidget).map((Child) => {\n                    const { domNode } = Child;\n                    return w(Child, Object.assign({}, domNode.__properties__()), [...domNode.__children__()]);\n                });\n            }\n            else {\n                return this._children;\n            }\n        }\n        attributeChangedCallback(name, oldValue, value) {\n            const propertyName = attributeMap[name];\n            this._setProperty(propertyName, value);\n        }\n        _setEventProperty(propertyName, value) {\n            this._eventProperties[propertyName] = value;\n        }\n        _getEventProperty(propertyName) {\n            return this._eventProperties[propertyName];\n        }\n        _setProperty(propertyName, value) {\n            if (typeof value === 'function') {\n                value[noBind] = true;\n            }\n            this._properties[propertyName] = value;\n            this._render();\n        }\n        _getProperty(propertyName) {\n            return this._properties[propertyName];\n        }\n        _attributesToProperties(attributes) {\n            return attributes.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    properties[propertyName] = value;\n                }\n                return properties;\n            }, {});\n        }\n        static get observedAttributes() {\n            return Object.keys(attributeMap);\n        }\n        get isWidget() {\n            return true;\n        }\n    };\n}\nexport function register(WidgetConstructor) {\n    const descriptor = WidgetConstructor.prototype && WidgetConstructor.prototype.__customElementDescriptor;\n    if (!descriptor) {\n        throw new Error('Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?');\n    }\n    global.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\nexport default register;\n//# sourceMappingURL=registerCustomElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs\n// module chunks = menu","import global from '../shim/global';\nimport { from as arrayFrom } from '../shim/array';\nimport { isWNode, isVNode, isDomVNode, VNODE, WNODE } from './d';\nimport { isWidgetBaseConstructor } from './Registry';\nimport WeakMap from '../shim/WeakMap';\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst emptyArray = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nexport const widgetInstanceMap = new WeakMap();\nconst instanceMap = new WeakMap();\nconst nextSiblingMap = new WeakMap();\nconst projectorStateMap = new WeakMap();\nfunction same(dnode1, dnode2) {\n    if (isVNode(dnode1) && isVNode(dnode2)) {\n        if (isDomVNode(dnode1) || isDomVNode(dnode2)) {\n            if (dnode1.domNode !== dnode2.domNode) {\n                return false;\n            }\n        }\n        if (dnode1.tag !== dnode2.tag) {\n            return false;\n        }\n        if (dnode1.properties.key !== dnode2.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    else if (isWNode(dnode1) && isWNode(dnode2)) {\n        if (dnode1.instance === undefined && typeof dnode2.widgetConstructor === 'string') {\n            return false;\n        }\n        if (dnode1.widgetConstructor !== dnode2.widgetConstructor) {\n            return false;\n        }\n        if (dnode1.properties.key !== dnode2.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\nconst missingTransition = function () {\n    throw new Error('Provide a transitions object to the projectionOptions to do animations');\n};\nfunction getProjectionOptions(projectorOptions, projectorInstance) {\n    const defaults = {\n        namespace: undefined,\n        styleApplyer: function (domNode, styleName, value) {\n            domNode.style[styleName] = value;\n        },\n        transitions: {\n            enter: missingTransition,\n            exit: missingTransition\n        },\n        depth: 0,\n        merge: false,\n        sync: false,\n        projectorInstance\n    };\n    return Object.assign({}, defaults, projectorOptions);\n}\nfunction checkStyleValue(styleValue) {\n    if (typeof styleValue !== 'string') {\n        throw new Error('Style values must be strings');\n    }\n}\nfunction updateEvent(domNode, eventName, currentValue, projectionOptions, bind, previousValue) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    const eventMap = projectorState.nodeMap.get(domNode) || new WeakMap();\n    if (previousValue) {\n        const previousEvent = eventMap.get(previousValue);\n        domNode.removeEventListener(eventName, previousEvent);\n    }\n    let callback = currentValue.bind(bind);\n    if (eventName === 'input') {\n        callback = function (evt) {\n            currentValue.call(this, evt);\n            evt.target['oninput-value'] = evt.target.value;\n        }.bind(bind);\n    }\n    domNode.addEventListener(eventName, callback);\n    eventMap.set(currentValue, callback);\n    projectorState.nodeMap.set(domNode, eventMap);\n}\nfunction addClasses(domNode, classes) {\n    if (classes) {\n        const classNames = classes.split(' ');\n        for (let i = 0; i < classNames.length; i++) {\n            domNode.classList.add(classNames[i]);\n        }\n    }\n}\nfunction removeClasses(domNode, classes) {\n    if (classes) {\n        const classNames = classes.split(' ');\n        for (let i = 0; i < classNames.length; i++) {\n            domNode.classList.remove(classNames[i]);\n        }\n    }\n}\nfunction buildPreviousProperties(domNode, previous, current) {\n    const { diffType, properties, attributes } = current;\n    if (!diffType || diffType === 'vdom') {\n        return { properties: previous.properties, attributes: previous.attributes, events: previous.events };\n    }\n    else if (diffType === 'none') {\n        return { properties: {}, attributes: previous.attributes ? {} : undefined, events: previous.events };\n    }\n    let newProperties = {\n        properties: {}\n    };\n    if (attributes) {\n        newProperties.attributes = {};\n        newProperties.events = previous.events;\n        Object.keys(properties).forEach((propName) => {\n            newProperties.properties[propName] = domNode[propName];\n        });\n        Object.keys(attributes).forEach((attrName) => {\n            newProperties.attributes[attrName] = domNode.getAttribute(attrName);\n        });\n        return newProperties;\n    }\n    newProperties.properties = Object.keys(properties).reduce((props, property) => {\n        props[property] = domNode.getAttribute(property) || domNode[property];\n        return props;\n    }, {});\n    return newProperties;\n}\nfunction nodeOperation(propName, propValue, previousValue, domNode, projectionOptions) {\n    let result;\n    if (typeof propValue === 'function') {\n        result = propValue();\n    }\n    else {\n        result = propValue && !previousValue;\n    }\n    if (result === true) {\n        const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n        projectorState.deferredRenderCallbacks.push(() => {\n            domNode[propName]();\n        });\n    }\n}\nfunction removeOrphanedEvents(domNode, previousProperties, properties, projectionOptions, onlyEvents = false) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    const eventMap = projectorState.nodeMap.get(domNode);\n    if (eventMap) {\n        Object.keys(previousProperties).forEach((propName) => {\n            const isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n            const eventName = onlyEvents ? propName : propName.substr(2);\n            if (isEvent && !properties[propName]) {\n                const eventCallback = eventMap.get(previousProperties[propName]);\n                if (eventCallback) {\n                    domNode.removeEventListener(eventName, eventCallback);\n                }\n            }\n        });\n    }\n}\nfunction updateAttribute(domNode, attrName, attrValue, projectionOptions) {\n    if (projectionOptions.namespace === NAMESPACE_SVG && attrName === 'href') {\n        domNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n    }\n    else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n        domNode.removeAttribute(attrName);\n    }\n    else {\n        domNode.setAttribute(attrName, attrValue);\n    }\n}\nfunction updateAttributes(domNode, previousAttributes, attributes, projectionOptions) {\n    const attrNames = Object.keys(attributes);\n    const attrCount = attrNames.length;\n    for (let i = 0; i < attrCount; i++) {\n        const attrName = attrNames[i];\n        const attrValue = attributes[attrName];\n        const previousAttrValue = previousAttributes[attrName];\n        if (attrValue !== previousAttrValue) {\n            updateAttribute(domNode, attrName, attrValue, projectionOptions);\n        }\n    }\n}\nfunction updateProperties(domNode, previousProperties, properties, projectionOptions, includesEventsAndAttributes = true) {\n    let propertiesUpdated = false;\n    const propNames = Object.keys(properties);\n    const propCount = propNames.length;\n    if (propNames.indexOf('classes') === -1 && previousProperties.classes) {\n        if (Array.isArray(previousProperties.classes)) {\n            for (let i = 0; i < previousProperties.classes.length; i++) {\n                removeClasses(domNode, previousProperties.classes[i]);\n            }\n        }\n        else {\n            removeClasses(domNode, previousProperties.classes);\n        }\n    }\n    includesEventsAndAttributes && removeOrphanedEvents(domNode, previousProperties, properties, projectionOptions);\n    for (let i = 0; i < propCount; i++) {\n        const propName = propNames[i];\n        let propValue = properties[propName];\n        const previousValue = previousProperties[propName];\n        if (propName === 'classes') {\n            const previousClasses = Array.isArray(previousValue) ? previousValue : [previousValue];\n            const currentClasses = Array.isArray(propValue) ? propValue : [propValue];\n            if (previousClasses && previousClasses.length > 0) {\n                if (!propValue || propValue.length === 0) {\n                    for (let i = 0; i < previousClasses.length; i++) {\n                        removeClasses(domNode, previousClasses[i]);\n                    }\n                }\n                else {\n                    const newClasses = [...currentClasses];\n                    for (let i = 0; i < previousClasses.length; i++) {\n                        const previousClassName = previousClasses[i];\n                        if (previousClassName) {\n                            const classIndex = newClasses.indexOf(previousClassName);\n                            if (classIndex === -1) {\n                                removeClasses(domNode, previousClassName);\n                            }\n                            else {\n                                newClasses.splice(classIndex, 1);\n                            }\n                        }\n                    }\n                    for (let i = 0; i < newClasses.length; i++) {\n                        addClasses(domNode, newClasses[i]);\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < currentClasses.length; i++) {\n                    addClasses(domNode, currentClasses[i]);\n                }\n            }\n        }\n        else if (nodeOperations.indexOf(propName) !== -1) {\n            nodeOperation(propName, propValue, previousValue, domNode, projectionOptions);\n        }\n        else if (propName === 'styles') {\n            const styleNames = Object.keys(propValue);\n            const styleCount = styleNames.length;\n            for (let j = 0; j < styleCount; j++) {\n                const styleName = styleNames[j];\n                const newStyleValue = propValue[styleName];\n                const oldStyleValue = previousValue && previousValue[styleName];\n                if (newStyleValue === oldStyleValue) {\n                    continue;\n                }\n                propertiesUpdated = true;\n                if (newStyleValue) {\n                    checkStyleValue(newStyleValue);\n                    projectionOptions.styleApplyer(domNode, styleName, newStyleValue);\n                }\n                else {\n                    projectionOptions.styleApplyer(domNode, styleName, '');\n                }\n            }\n        }\n        else {\n            if (!propValue && typeof previousValue === 'string') {\n                propValue = '';\n            }\n            if (propName === 'value') {\n                const domValue = domNode[propName];\n                if (domValue !== propValue &&\n                    (domNode['oninput-value']\n                        ? domValue === domNode['oninput-value']\n                        : propValue !== previousValue)) {\n                    domNode[propName] = propValue;\n                    domNode['oninput-value'] = undefined;\n                }\n                if (propValue !== previousValue) {\n                    propertiesUpdated = true;\n                }\n            }\n            else if (propName !== 'key' && propValue !== previousValue) {\n                const type = typeof propValue;\n                if (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n                    updateEvent(domNode, propName.substr(2), propValue, projectionOptions, properties.bind, previousValue);\n                }\n                else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n                    updateAttribute(domNode, propName, propValue, projectionOptions);\n                }\n                else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n                    if (domNode[propName] !== propValue) {\n                        domNode[propName] = propValue;\n                    }\n                }\n                else {\n                    domNode[propName] = propValue;\n                }\n                propertiesUpdated = true;\n            }\n        }\n    }\n    return propertiesUpdated;\n}\nfunction findIndexOfChild(children, sameAs, start) {\n    for (let i = start; i < children.length; i++) {\n        if (same(children[i], sameAs)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function toParentVNode(domNode) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        domNode,\n        type: VNODE\n    };\n}\nexport function toTextVNode(data) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        text: `${data}`,\n        domNode: undefined,\n        type: VNODE\n    };\n}\nfunction toInternalWNode(instance, instanceData) {\n    return {\n        instance,\n        rendered: [],\n        coreProperties: instanceData.coreProperties,\n        children: instance.children,\n        widgetConstructor: instance.constructor,\n        properties: instanceData.inputProperties,\n        type: WNODE\n    };\n}\nexport function filterAndDecorateChildren(children, instance) {\n    if (children === undefined) {\n        return emptyArray;\n    }\n    children = Array.isArray(children) ? children : [children];\n    for (let i = 0; i < children.length;) {\n        const child = children[i];\n        if (child === undefined || child === null) {\n            children.splice(i, 1);\n            continue;\n        }\n        else if (typeof child === 'string') {\n            children[i] = toTextVNode(child);\n        }\n        else {\n            if (isVNode(child)) {\n                if (child.properties.bind === undefined) {\n                    child.properties.bind = instance;\n                    if (child.children && child.children.length > 0) {\n                        filterAndDecorateChildren(child.children, instance);\n                    }\n                }\n            }\n            else {\n                if (!child.coreProperties) {\n                    const instanceData = widgetInstanceMap.get(instance);\n                    child.coreProperties = {\n                        bind: instance,\n                        baseRegistry: instanceData.coreProperties.baseRegistry\n                    };\n                }\n                if (child.children && child.children.length > 0) {\n                    filterAndDecorateChildren(child.children, instance);\n                }\n            }\n        }\n        i++;\n    }\n    return children;\n}\nfunction nodeAdded(dnode, transitions) {\n    if (isVNode(dnode) && dnode.properties) {\n        const enterAnimation = dnode.properties.enterAnimation;\n        if (enterAnimation) {\n            if (typeof enterAnimation === 'function') {\n                enterAnimation(dnode.domNode, dnode.properties);\n            }\n            else {\n                transitions.enter(dnode.domNode, dnode.properties, enterAnimation);\n            }\n        }\n    }\n}\nfunction nodeToRemove(dnode, transitions, projectionOptions) {\n    if (isWNode(dnode)) {\n        const item = instanceMap.get(dnode.instance);\n        const rendered = (item ? item.dnode.rendered : dnode.rendered) || emptyArray;\n        if (dnode.instance) {\n            const instanceData = widgetInstanceMap.get(dnode.instance);\n            instanceData.onDetach();\n            instanceMap.delete(dnode.instance);\n        }\n        for (let i = 0; i < rendered.length; i++) {\n            nodeToRemove(rendered[i], transitions, projectionOptions);\n        }\n    }\n    else {\n        const domNode = dnode.domNode;\n        const properties = dnode.properties;\n        if (dnode.children && dnode.children.length > 0) {\n            for (let i = 0; i < dnode.children.length; i++) {\n                nodeToRemove(dnode.children[i], transitions, projectionOptions);\n            }\n        }\n        const exitAnimation = properties.exitAnimation;\n        if (properties && exitAnimation) {\n            domNode.style.pointerEvents = 'none';\n            const removeDomNode = function () {\n                domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n                dnode.domNode = undefined;\n            };\n            if (typeof exitAnimation === 'function') {\n                exitAnimation(domNode, removeDomNode, properties);\n                return;\n            }\n            else {\n                transitions.exit(dnode.domNode, properties, exitAnimation, removeDomNode);\n                return;\n            }\n        }\n        domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n        dnode.domNode = undefined;\n    }\n}\nfunction checkDistinguishable(childNodes, indexToCheck, parentInstance) {\n    const childNode = childNodes[indexToCheck];\n    if (isVNode(childNode) && !childNode.tag) {\n        return; // Text nodes need not be distinguishable\n    }\n    const { key } = childNode.properties;\n    if (key === undefined || key === null) {\n        for (let i = 0; i < childNodes.length; i++) {\n            if (i !== indexToCheck) {\n                const node = childNodes[i];\n                if (same(node, childNode)) {\n                    let nodeIdentifier;\n                    const parentName = parentInstance.constructor.name || 'unknown';\n                    if (isWNode(childNode)) {\n                        nodeIdentifier = childNode.widgetConstructor.name || 'unknown';\n                    }\n                    else {\n                        nodeIdentifier = childNode.tag;\n                    }\n                    console.warn(`A widget (${parentName}) has had a child addded or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`);\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction updateChildren(parentVNode, siblings, oldChildren, newChildren, parentInstance, projectionOptions) {\n    oldChildren = oldChildren || emptyArray;\n    newChildren = newChildren;\n    const oldChildrenLength = oldChildren.length;\n    const newChildrenLength = newChildren.length;\n    const transitions = projectionOptions.transitions;\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    projectionOptions = Object.assign({}, projectionOptions, { depth: projectionOptions.depth + 1 });\n    let oldIndex = 0;\n    let newIndex = 0;\n    let i;\n    let textUpdated = false;\n    while (newIndex < newChildrenLength) {\n        let oldChild = oldIndex < oldChildrenLength ? oldChildren[oldIndex] : undefined;\n        const newChild = newChildren[newIndex];\n        if (isVNode(newChild) && typeof newChild.deferredPropertiesCallback === 'function') {\n            newChild.inserted = isVNode(oldChild) && oldChild.inserted;\n            addDeferredProperties(newChild, projectionOptions);\n        }\n        if (oldChild !== undefined && same(oldChild, newChild)) {\n            oldIndex++;\n            newIndex++;\n            textUpdated =\n                updateDom(oldChild, newChild, projectionOptions, parentVNode, parentInstance, oldChildren.slice(oldIndex), newChildren.slice(newIndex)) || textUpdated;\n            continue;\n        }\n        const findOldIndex = findIndexOfChild(oldChildren, newChild, oldIndex + 1);\n        const addChild = () => {\n            let insertBeforeDomNode = undefined;\n            let childrenArray = oldChildren;\n            let nextIndex = oldIndex + 1;\n            let child = oldChildren[oldIndex];\n            if (!child) {\n                child = siblings[0];\n                nextIndex = 1;\n                childrenArray = siblings;\n            }\n            if (child) {\n                let insertBeforeChildren = [child];\n                while (insertBeforeChildren.length) {\n                    const insertBefore = insertBeforeChildren.shift();\n                    if (isWNode(insertBefore)) {\n                        const item = instanceMap.get(insertBefore.instance);\n                        if (item && item.dnode.rendered) {\n                            insertBeforeChildren.push(...item.dnode.rendered);\n                        }\n                    }\n                    else {\n                        if (insertBefore.domNode) {\n                            if (insertBefore.domNode.parentElement !== parentVNode.domNode) {\n                                break;\n                            }\n                            insertBeforeDomNode = insertBefore.domNode;\n                            break;\n                        }\n                    }\n                    if (insertBeforeChildren.length === 0 && childrenArray[nextIndex]) {\n                        insertBeforeChildren.push(childrenArray[nextIndex]);\n                        nextIndex++;\n                    }\n                }\n            }\n            createDom(newChild, parentVNode, newChildren.slice(newIndex + 1), insertBeforeDomNode, projectionOptions, parentInstance);\n            nodeAdded(newChild, transitions);\n            const indexToCheck = newIndex;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(newChildren, indexToCheck, parentInstance);\n            });\n        };\n        if (!oldChild || findOldIndex === -1) {\n            addChild();\n            newIndex++;\n            continue;\n        }\n        const removeChild = () => {\n            const indexToCheck = oldIndex;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(oldChildren, indexToCheck, parentInstance);\n            });\n            if (isWNode(oldChild)) {\n                const item = instanceMap.get(oldChild.instance);\n                if (item) {\n                    oldChild = item.dnode;\n                }\n            }\n            nodeToRemove(oldChild, transitions, projectionOptions);\n        };\n        const findNewIndex = findIndexOfChild(newChildren, oldChild, newIndex + 1);\n        if (findNewIndex === -1) {\n            removeChild();\n            oldIndex++;\n            continue;\n        }\n        addChild();\n        removeChild();\n        oldIndex++;\n        newIndex++;\n    }\n    if (oldChildrenLength > oldIndex) {\n        // Remove child fragments\n        for (i = oldIndex; i < oldChildrenLength; i++) {\n            const indexToCheck = i;\n            projectorState.afterRenderCallbacks.push(() => {\n                checkDistinguishable(oldChildren, indexToCheck, parentInstance);\n            });\n            let childToRemove = oldChildren[i];\n            if (isWNode(childToRemove)) {\n                const item = instanceMap.get(childToRemove.instance);\n                if (item) {\n                    childToRemove = item.dnode;\n                }\n            }\n            nodeToRemove(childToRemove, transitions, projectionOptions);\n        }\n    }\n    return textUpdated;\n}\nfunction addChildren(parentVNode, children, projectionOptions, parentInstance, insertBefore = undefined, childNodes) {\n    if (children === undefined) {\n        return;\n    }\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectorState.merge && childNodes === undefined) {\n        childNodes = arrayFrom(parentVNode.domNode.childNodes);\n    }\n    const transitions = projectionOptions.transitions;\n    projectionOptions = Object.assign({}, projectionOptions, { depth: projectionOptions.depth + 1 });\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        const nextSiblings = children.slice(i + 1);\n        if (isVNode(child)) {\n            if (projectorState.merge && childNodes) {\n                let domElement = undefined;\n                while (child.domNode === undefined && childNodes.length > 0) {\n                    domElement = childNodes.shift();\n                    if (domElement && domElement.tagName === (child.tag.toUpperCase() || undefined)) {\n                        child.domNode = domElement;\n                    }\n                }\n            }\n            createDom(child, parentVNode, nextSiblings, insertBefore, projectionOptions, parentInstance);\n        }\n        else {\n            createDom(child, parentVNode, nextSiblings, insertBefore, projectionOptions, parentInstance, childNodes);\n        }\n        nodeAdded(child, transitions);\n    }\n}\nfunction initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions) {\n    addChildren(dnode, dnode.children, projectionOptions, parentInstance, undefined);\n    if (typeof dnode.deferredPropertiesCallback === 'function' && dnode.inserted === undefined) {\n        addDeferredProperties(dnode, projectionOptions);\n    }\n    if (dnode.attributes && dnode.events) {\n        updateAttributes(domNode, {}, dnode.attributes, projectionOptions);\n        updateProperties(domNode, {}, dnode.properties, projectionOptions, false);\n        removeOrphanedEvents(domNode, {}, dnode.events, projectionOptions, true);\n        const events = dnode.events;\n        Object.keys(events).forEach((event) => {\n            updateEvent(domNode, event, events[event], projectionOptions, dnode.properties.bind);\n        });\n    }\n    else {\n        updateProperties(domNode, {}, dnode.properties, projectionOptions);\n    }\n    if (dnode.properties.key !== null && dnode.properties.key !== undefined) {\n        const instanceData = widgetInstanceMap.get(parentInstance);\n        instanceData.nodeHandler.add(domNode, `${dnode.properties.key}`);\n    }\n    dnode.inserted = true;\n}\nfunction createDom(dnode, parentVNode, nextSiblings, insertBefore, projectionOptions, parentInstance, childNodes) {\n    let domNode;\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (isWNode(dnode)) {\n        let { widgetConstructor } = dnode;\n        const parentInstanceData = widgetInstanceMap.get(parentInstance);\n        if (!isWidgetBaseConstructor(widgetConstructor)) {\n            const item = parentInstanceData.registry().get(widgetConstructor);\n            if (item === null) {\n                return;\n            }\n            widgetConstructor = item;\n        }\n        const instance = new widgetConstructor();\n        dnode.instance = instance;\n        nextSiblingMap.set(instance, nextSiblings);\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (instanceData.rendering === false) {\n                projectorState.renderQueue.push({ instance, depth: projectionOptions.depth });\n                scheduleRender(projectionOptions);\n            }\n        };\n        instanceData.rendering = true;\n        instance.__setCoreProperties__(dnode.coreProperties);\n        instance.__setChildren__(dnode.children);\n        instance.__setProperties__(dnode.properties);\n        const rendered = instance.__render__();\n        instanceData.rendering = false;\n        if (rendered) {\n            const filteredRendered = filterAndDecorateChildren(rendered, instance);\n            dnode.rendered = filteredRendered;\n            addChildren(parentVNode, filteredRendered, projectionOptions, instance, insertBefore, childNodes);\n        }\n        instanceMap.set(instance, { dnode, parentVNode });\n        instanceData.nodeHandler.addRoot();\n        projectorState.afterRenderCallbacks.push(() => {\n            instanceData.onAttach();\n        });\n    }\n    else {\n        if (projectorState.merge && projectorState.mergeElement !== undefined) {\n            domNode = dnode.domNode = projectionOptions.mergeElement;\n            projectorState.mergeElement = undefined;\n            initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions);\n            return;\n        }\n        const doc = parentVNode.domNode.ownerDocument;\n        if (!dnode.tag && typeof dnode.text === 'string') {\n            if (dnode.domNode !== undefined && parentVNode.domNode) {\n                const newDomNode = dnode.domNode.ownerDocument.createTextNode(dnode.text);\n                if (parentVNode.domNode === dnode.domNode.parentNode) {\n                    parentVNode.domNode.replaceChild(newDomNode, dnode.domNode);\n                }\n                else {\n                    parentVNode.domNode.appendChild(newDomNode);\n                    dnode.domNode.parentNode && dnode.domNode.parentNode.removeChild(dnode.domNode);\n                }\n                dnode.domNode = newDomNode;\n            }\n            else {\n                domNode = dnode.domNode = doc.createTextNode(dnode.text);\n                if (insertBefore !== undefined) {\n                    parentVNode.domNode.insertBefore(domNode, insertBefore);\n                }\n                else {\n                    parentVNode.domNode.appendChild(domNode);\n                }\n            }\n        }\n        else {\n            if (dnode.domNode === undefined) {\n                if (dnode.tag === 'svg') {\n                    projectionOptions = Object.assign({}, projectionOptions, { namespace: NAMESPACE_SVG });\n                }\n                if (projectionOptions.namespace !== undefined) {\n                    domNode = dnode.domNode = doc.createElementNS(projectionOptions.namespace, dnode.tag);\n                }\n                else {\n                    domNode = dnode.domNode = dnode.domNode || doc.createElement(dnode.tag);\n                }\n            }\n            else {\n                domNode = dnode.domNode;\n            }\n            initPropertiesAndChildren(domNode, dnode, parentInstance, projectionOptions);\n            if (insertBefore !== undefined) {\n                parentVNode.domNode.insertBefore(domNode, insertBefore);\n            }\n            else if (domNode.parentNode !== parentVNode.domNode) {\n                parentVNode.domNode.appendChild(domNode);\n            }\n        }\n    }\n}\nfunction updateDom(previous, dnode, projectionOptions, parentVNode, parentInstance, oldNextSiblings, nextSiblings) {\n    if (isWNode(dnode)) {\n        const { instance } = previous;\n        const { parentVNode, dnode: node } = instanceMap.get(instance);\n        const previousRendered = node ? node.rendered : previous.rendered;\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.rendering = true;\n        instance.__setCoreProperties__(dnode.coreProperties);\n        instance.__setChildren__(dnode.children);\n        instance.__setProperties__(dnode.properties);\n        nextSiblingMap.set(instance, nextSiblings);\n        dnode.instance = instance;\n        if (instanceData.dirty === true) {\n            const rendered = instance.__render__();\n            instanceData.rendering = false;\n            dnode.rendered = filterAndDecorateChildren(rendered, instance);\n            updateChildren(parentVNode, oldNextSiblings, previousRendered, dnode.rendered, instance, projectionOptions);\n        }\n        else {\n            instanceData.rendering = false;\n            dnode.rendered = previousRendered;\n        }\n        instanceMap.set(instance, { dnode, parentVNode });\n        instanceData.nodeHandler.addRoot();\n    }\n    else {\n        if (previous === dnode) {\n            return false;\n        }\n        const domNode = (dnode.domNode = previous.domNode);\n        let textUpdated = false;\n        let updated = false;\n        if (!dnode.tag && typeof dnode.text === 'string') {\n            if (dnode.text !== previous.text) {\n                const newDomNode = domNode.ownerDocument.createTextNode(dnode.text);\n                domNode.parentNode.replaceChild(newDomNode, domNode);\n                dnode.domNode = newDomNode;\n                textUpdated = true;\n                return textUpdated;\n            }\n        }\n        else {\n            if (dnode.tag && dnode.tag.lastIndexOf('svg', 0) === 0) {\n                projectionOptions = Object.assign({}, projectionOptions, { namespace: NAMESPACE_SVG });\n            }\n            if (previous.children !== dnode.children) {\n                const children = filterAndDecorateChildren(dnode.children, parentInstance);\n                dnode.children = children;\n                updated =\n                    updateChildren(dnode, oldNextSiblings, previous.children, children, parentInstance, projectionOptions) || updated;\n            }\n            const previousProperties = buildPreviousProperties(domNode, previous, dnode);\n            if (dnode.attributes && dnode.events) {\n                updateAttributes(domNode, previousProperties.attributes, dnode.attributes, projectionOptions);\n                updated =\n                    updateProperties(domNode, previousProperties.properties, dnode.properties, projectionOptions, false) || updated;\n                removeOrphanedEvents(domNode, previousProperties.events, dnode.events, projectionOptions, true);\n                const events = dnode.events;\n                Object.keys(events).forEach((event) => {\n                    updateEvent(domNode, event, events[event], projectionOptions, dnode.properties.bind, previousProperties.events[event]);\n                });\n            }\n            else {\n                updated =\n                    updateProperties(domNode, previousProperties.properties, dnode.properties, projectionOptions) ||\n                        updated;\n            }\n            if (dnode.properties.key !== null && dnode.properties.key !== undefined) {\n                const instanceData = widgetInstanceMap.get(parentInstance);\n                instanceData.nodeHandler.add(domNode, `${dnode.properties.key}`);\n            }\n        }\n        if (updated && dnode.properties && dnode.properties.updateAnimation) {\n            dnode.properties.updateAnimation(domNode, dnode.properties, previous.properties);\n        }\n    }\n}\nfunction addDeferredProperties(vnode, projectionOptions) {\n    // transfer any properties that have been passed - as these must be decorated properties\n    vnode.decoratedDeferredProperties = vnode.properties;\n    const properties = vnode.deferredPropertiesCallback(!!vnode.inserted);\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    vnode.properties = Object.assign({}, properties, vnode.decoratedDeferredProperties);\n    projectorState.deferredRenderCallbacks.push(() => {\n        const properties = Object.assign({}, vnode.deferredPropertiesCallback(!!vnode.inserted), vnode.decoratedDeferredProperties);\n        updateProperties(vnode.domNode, vnode.properties, properties, projectionOptions);\n        vnode.properties = properties;\n    });\n}\nfunction runDeferredRenderCallbacks(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectorState.deferredRenderCallbacks.length) {\n        if (projectionOptions.sync) {\n            while (projectorState.deferredRenderCallbacks.length) {\n                const callback = projectorState.deferredRenderCallbacks.shift();\n                callback && callback();\n            }\n        }\n        else {\n            global.requestAnimationFrame(() => {\n                while (projectorState.deferredRenderCallbacks.length) {\n                    const callback = projectorState.deferredRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n    }\n}\nfunction runAfterRenderCallbacks(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectionOptions.sync) {\n        while (projectorState.afterRenderCallbacks.length) {\n            const callback = projectorState.afterRenderCallbacks.shift();\n            callback && callback();\n        }\n    }\n    else {\n        if (global.requestIdleCallback) {\n            global.requestIdleCallback(() => {\n                while (projectorState.afterRenderCallbacks.length) {\n                    const callback = projectorState.afterRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n        else {\n            setTimeout(() => {\n                while (projectorState.afterRenderCallbacks.length) {\n                    const callback = projectorState.afterRenderCallbacks.shift();\n                    callback && callback();\n                }\n            });\n        }\n    }\n}\nfunction scheduleRender(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    if (projectionOptions.sync) {\n        render(projectionOptions);\n    }\n    else if (projectorState.renderScheduled === undefined) {\n        projectorState.renderScheduled = global.requestAnimationFrame(() => {\n            render(projectionOptions);\n        });\n    }\n}\nfunction render(projectionOptions) {\n    const projectorState = projectorStateMap.get(projectionOptions.projectorInstance);\n    projectorState.renderScheduled = undefined;\n    const renderQueue = projectorState.renderQueue;\n    const renders = [...renderQueue];\n    projectorState.renderQueue = [];\n    renders.sort((a, b) => a.depth - b.depth);\n    const previouslyRendered = [];\n    while (renders.length) {\n        const { instance } = renders.shift();\n        if (instanceMap.has(instance) && previouslyRendered.indexOf(instance) === -1) {\n            previouslyRendered.push(instance);\n            const { parentVNode, dnode } = instanceMap.get(instance);\n            const instanceData = widgetInstanceMap.get(instance);\n            const nextSiblings = nextSiblingMap.get(instance);\n            updateDom(dnode, toInternalWNode(instance, instanceData), projectionOptions, parentVNode, instance, nextSiblings, nextSiblings);\n        }\n    }\n    runAfterRenderCallbacks(projectionOptions);\n    runDeferredRenderCallbacks(projectionOptions);\n}\nexport const dom = {\n    append: function (parentNode, instance, projectionOptions = {}) {\n        const instanceData = widgetInstanceMap.get(instance);\n        const finalProjectorOptions = getProjectionOptions(projectionOptions, instance);\n        const projectorState = {\n            afterRenderCallbacks: [],\n            deferredRenderCallbacks: [],\n            nodeMap: new WeakMap(),\n            renderScheduled: undefined,\n            renderQueue: [],\n            merge: projectionOptions.merge || false,\n            mergeElement: projectionOptions.mergeElement\n        };\n        projectorStateMap.set(instance, projectorState);\n        finalProjectorOptions.rootNode = parentNode;\n        const parentVNode = toParentVNode(finalProjectorOptions.rootNode);\n        const node = toInternalWNode(instance, instanceData);\n        instanceMap.set(instance, { dnode: node, parentVNode });\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (instanceData.rendering === false) {\n                projectorState.renderQueue.push({ instance, depth: finalProjectorOptions.depth });\n                scheduleRender(finalProjectorOptions);\n            }\n        };\n        updateDom(node, node, finalProjectorOptions, parentVNode, instance, [], []);\n        projectorState.afterRenderCallbacks.push(() => {\n            instanceData.onAttach();\n        });\n        runDeferredRenderCallbacks(finalProjectorOptions);\n        runAfterRenderCallbacks(finalProjectorOptions);\n        return {\n            domNode: finalProjectorOptions.rootNode\n        };\n    },\n    create: function (instance, projectionOptions) {\n        return this.append(document.createElement('div'), instance, projectionOptions);\n    },\n    merge: function (element, instance, projectionOptions = {}) {\n        projectionOptions.merge = true;\n        projectionOptions.mergeElement = element;\n        const projection = this.append(element.parentNode, instance, projectionOptions);\n        const projectorState = projectorStateMap.get(instance);\n        projectorState.merge = false;\n        return projection;\n    }\n};\n//# sourceMappingURL=vdom.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/vdom.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/vdom.mjs\n// module chunks = menu","/*** IMPORTS FROM imports-loader ***/\nvar widgetFactory = require(\"src/menu/Menu\");\n\nvar registerCustomElement = require('@dojo/framework/widget-core/registerCustomElement').default;\n\nvar defaultExport = widgetFactory.default;\ndefaultExport && registerCustomElement(defaultExport);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/imports-loader?widgetFactory=src/menu/Menu!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module id = ./node_modules/imports-loader/index.js?widgetFactory=src/menu/Menu!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module chunks = menu","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = ./node_modules/process/browser.js\n// module chunks = menu","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = ./node_modules/tslib/tslib.es6.js\n// module chunks = menu","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = ./node_modules/webpack/buildin/global.js\n// module chunks = menu","import { v } from '@dojo/framework/widget-core/d';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\nimport { WidgetProperties, WNode } from '@dojo/framework/widget-core/interfaces';\nimport { theme, ThemedMixin } from '@dojo/framework/widget-core/mixins/Themed';\nimport { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { MenuItem, MenuItemProperties } from '../menu-item/MenuItem';\n\nimport * as css from './menu.m.css';\n\ninterface MenuProperties extends WidgetProperties {\n\tonSelected: (data: any) => void;\n}\n\n@customElement<MenuProperties>({\n\ttag: 'demo-menu',\n\tevents: ['onSelected']\n})\n@theme(css)\nexport class Menu extends ThemedMixin(WidgetBase)<MenuProperties, WNode<MenuItem>> {\n\tprivate _selectedId: number;\n\n\tprivate _onSelected(id: number, data: any) {\n\t\tthis._selectedId = id;\n\t\tthis.properties.onSelected(data);\n\t\tthis.invalidate();\n\t}\n\n\tprotected render() {\n\t\tconst items = this.children.map((child, index) => {\n\t\t\tif (child) {\n\t\t\t\tconst properties: Partial<MenuItemProperties> = {\n\t\t\t\t\tonSelected: (data: any) => {\n\t\t\t\t\t\tthis._onSelected(index, data);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (this._selectedId !== undefined) {\n\t\t\t\t\tproperties.selected = index === this._selectedId;\n\t\t\t\t}\n\t\t\t\tchild.properties = { ...child.properties, ...properties };\n\t\t\t}\n\t\t\treturn child;\n\t\t});\n\n\t\treturn v('nav', { classes: this.theme(css.root) }, [\n\t\t\tv(\n\t\t\t\t'ol',\n\t\t\t\t{\n\t\t\t\t\tclasses: this.theme(css.menuContainer)\n\t\t\t\t},\n\t\t\t\titems\n\t\t\t)\n\t\t]);\n\t}\n}\n\nexport default Menu;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_menu!./src/menu/Menu.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"test-app/menu\",\"root\":\"menu-m__root__3bA6j\",\"menuContainer\":\"menu-m__menuContainer__1eoGf\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/menu/menu.m.css\n// module id = ./src/menu/menu.m.css\n// module chunks = menu"],"sourceRoot":""}